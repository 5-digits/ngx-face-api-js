var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/AbstractDetectDirective.html",[0,0.515,1,1.285]],["body/classes/AbstractDetectDirective.html",[0,0.371,1,1.378,2,1.378,3,0.43,4,0.43,5,0.371,6,0.54,7,0.325,8,0.43,9,4.082,10,1.654,11,2.078,12,2.48,13,3.623,14,0.266,15,0.836,16,3.016,17,4.968,18,2.141,19,1.283,20,2.48,21,0.637,22,1.216,23,2.401,24,4.011,25,4.011,26,4.011,27,2.745,28,2.078,29,3.623,30,1.075,31,1.207,32,2.07,33,2.401,34,2.979,35,1.553,36,3.036,37,0.563,38,0.049,39,0.493,40,0.493,41,1.378,42,2.078,43,1.717,44,2.043,45,1.645,46,2.043,47,1.283,48,0.819,49,0.819,50,2.043,51,2.043,52,1.42,53,2.043,54,2.043,55,1.794,56,2.043,57,2.043,58,2.043,59,1.085,60,0.563,61,3.036,62,0.927,63,3.036,64,1.398,65,0.949,66,1.216,67,2.043,68,1.398,69,2.043,70,0.43,71,2.458,72,1.452,73,1.398,74,1.654,75,1.398,76,1.654,77,1.283,78,2.043,79,1.654,80,2.043,81,2.043,82,2.043,83,3.036,84,2.043,85,3.036,86,2.043,87,2.043,88,2.043,89,2.043,90,1.946,91,3.036,92,2.043,93,2.043,94,2.043,95,2.043,96,2.043,97,1.054,98,2.043,99,2.043,100,2.043,101,2.043,102,1.207,103,1.398,104,1.398,105,2.043,106,2.043,107,2.043,108,2.043,109,2.043,110,1.654,111,2.043,112,0.017,113,0.026,114,0.017]],["title/directives/DetectAllFacesImgDirective.html",[115,1.002,116,1.134]],["body/directives/DetectAllFacesImgDirective.html",[0,0.525,1,1.762,3,0.608,4,0.608,5,0.525,6,0.523,7,0.315,8,0.416,14,0.377,15,1.069,16,2.973,18,2.589,19,1.023,21,0.656,30,1.374,31,1.707,32,2.418,33,2.697,34,3.088,35,1.465,37,0.796,38,0.049,39,0.698,40,0.698,41,1.762,45,1.989,47,1.552,48,1.756,49,1.756,59,1.132,60,0.796,62,1.312,65,0.903,70,0.608,97,2.003,112,0.025,113,0.033,114,0.025,115,1.374,116,1.555,117,1.023,118,2.888,119,2.973,120,1.978,121,1.707,122,2.293,123,3.881,124,2.656,125,3.881,126,2.889,127,2.889,128,2.656,129,1.978,130,1.978,131,1.978,132,1.978,133,1.978]],["title/directives/DetectAllFacesVideoDirective.html",[115,1.002,134,1.134]],["body/directives/DetectAllFacesVideoDirective.html",[0,0.525,1,1.762,3,0.608,4,0.608,5,0.525,6,0.523,7,0.315,8,0.416,14,0.377,15,1.069,16,2.973,18,2.589,19,1.023,21,0.656,30,1.374,31,1.707,32,2.418,33,2.697,34,3.088,35,1.465,37,0.796,38,0.049,39,0.698,40,0.698,41,1.762,45,1.989,47,1.552,48,1.756,49,1.756,59,1.132,60,0.796,62,1.312,65,0.903,70,0.608,112,0.025,113,0.033,114,0.025,115,1.374,117,1.023,118,2.888,119,2.973,121,1.707,122,2.293,124,2.656,128,2.656,129,1.978,130,1.978,131,1.978,132,1.978,133,1.978,134,1.555,135,2.34,136,3.881,137,3.881,138,3.142,139,2.889,140,2.889]],["title/directives/DetectSingleFaceImgDirective.html",[115,1.002,141,1.134]],["body/directives/DetectSingleFaceImgDirective.html",[0,0.475,1,1.644,2,1.185,3,0.549,4,0.549,5,0.475,6,0.523,7,0.347,8,0.416,11,2.478,12,2.845,14,0.34,15,0.997,16,2.884,18,2.456,19,0.924,21,0.653,22,1.451,27,3.073,30,1.282,31,1.542,32,2.318,33,2.634,34,3.015,35,1.475,37,0.719,38,0.049,39,0.63,40,0.63,41,1.644,43,1.451,45,1.887,47,1.472,48,1.666,49,1.666,52,0.924,55,1.542,59,1.139,60,0.719,62,1.185,65,1.132,70,0.549,71,2.113,72,1.046,73,1.786,74,2.113,75,1.786,76,2.113,97,1.869,112,0.022,113,0.031,114,0.022,115,1.282,117,0.924,118,2.884,120,1.786,121,1.542,122,2.139,124,2.478,128,2.478,129,1.786,130,1.786,131,1.786,132,1.786,133,1.786,141,1.451,142,3.952,143,2.932,144,3.62,145,2.61,146,2.61,147,2.932,148,2.61]],["title/classes/DetectTask.html",[0,0.515,43,1.134]],["body/classes/DetectTask.html",[0,0.319,2,0.797,3,0.369,4,0.369,5,0.319,6,0.521,7,0.318,8,0.414,14,0.229,15,0.745,19,1.86,21,0.665,22,1.084,23,2.187,28,1.852,30,0.621,35,1.494,37,1.022,38,0.049,39,0.897,40,0.897,41,1.228,42,2.745,43,1.084,45,1.685,47,1.563,52,0.958,55,1.599,59,0.654,65,1.325,70,0.369,72,0.703,73,1.852,75,2.541,77,1.79,97,0.906,110,2.191,112,0.015,113,0.023,114,0.015,149,1.421,150,4.678,151,3.431,152,3.302,153,2.26,154,1.852,155,2.706,156,3.302,157,2.706,158,2.706,159,2.706,160,3.006,161,2.369,162,1.755,163,1.037,164,1.755,165,1.755,166,1.755,167,2.706,168,1.951,169,1.755,170,1.421,171,2.706,172,1.923,173,1.755,174,1.755,175,1.755,176,1.755,177,1.755,178,1.755,179,0.906,180,0.621,181,2.706,182,2.191,183,2.706,184,1.755,185,4.678,186,1.755,187,1.755,188,1.755,189,3.302,190,2.706,191,1.755,192,1.755,193,1.755,194,1.755,195,4.132,196,3.302,197,3.302,198,1.755,199,1.755,200,3.302,201,1.705,202,1.916,203,2.541,204,1.852,205,3.006,206,4.415,207,4.415,208,4.01,209,2.706,210,4.559,211,2.706,212,3.302,213,1.755,214,2.706,215,1.755,216,1.755]],["title/components/DetectionResultComponent.html",[66,1.134,217,1.672]],["body/components/DetectionResultComponent.html",[0,0.292,2,0.73,3,0.338,4,0.338,5,0.292,6,0.509,7,0.312,8,0.405,11,1.73,12,2.138,14,0.21,15,0.696,19,0.569,20,1.73,21,0.462,22,1.013,23,2.635,27,2.424,28,1.73,30,0.895,32,2.109,35,1.458,37,0.86,38,0.049,39,0.987,40,0.754,41,1.418,43,1.419,48,1.013,49,1.013,52,1.254,55,1.494,59,0.987,60,0.443,66,1.419,68,3.253,70,0.338,72,1.542,77,1.106,79,1.302,90,1.748,112,0.037,113,0.022,114,0.022,115,0.569,116,0.644,117,0.569,121,0.95,122,2.092,134,0.644,141,0.644,143,1.302,151,2.529,153,2.138,179,0.83,180,0.569,182,1.302,201,1.305,202,1.305,205,2.047,217,1.846,218,1.73,219,1.608,220,1.608,221,1.608,222,1.608,223,3.849,224,1.302,225,3.123,226,2.528,227,2.797,228,3.123,229,2.528,230,2.528,231,3.123,232,3.123,233,4.087,234,2.528,235,2.528,236,3.541,237,2.528,238,3.123,239,2.867,240,1.608,241,3.123,242,3.541,243,3.123,244,1.607,245,1.608,246,1.608,247,2.528,248,1.608,249,2.528,250,1.608,251,1.608,252,1.608,253,1.608,254,2.528,255,1.608,256,2.529,257,1.608,258,1.608,259,1.608,260,1.608,261,1.608,262,1.608,263,2.528,264,1.101,265,1.608,266,1.608,267,1.302,268,1.608,269,1.608,270,1.608,271,1.608,272,1.608,273,1.608,274,1.608,275,1.608,276,1.608,277,1.608,278,1.608,279,1.608,280,1.608,281,1.608,282,1.608,283,1.608,284,1.101,285,1.608,286,4.275,287,4.275,288,1.608,289,1.608,290,3.123,291,1.608,292,1.608,293,1.608,294,1.608,295,1.608,296,1.608,297,2.528,298,1.608,299,1.608,300,1.608,301,0.95,302,2.528,303,1.608,304,1.608,305,1.608,306,1.608,307,2.528,308,2.528,309,1.608,310,1.608,311,1.608,312,1.608,313,1.608,314,1.608,315,2.528,316,1.608,317,1.608,318,1.608,319,1.608,320,0.95,321,1.608,322,1.608,323,1.608,324,1.608,325,2.528,326,1.101,327,2.047,328,2.528,329,3.541,330,1.608,331,1.608,332,1.608,333,1.608]],["title/injectables/FaceDetectorService.html",[244,1.285,334,1.461]],["body/injectables/FaceDetectorService.html",[0,0.509,2,1.271,3,0.589,4,0.589,5,0.509,6,0.462,7,0.298,8,0.367,14,0.365,19,1.527,20,1.917,21,0.495,22,1.522,23,1.961,30,1.345,35,1.188,37,1.046,38,0.049,39,0.918,40,1.117,43,1.853,52,0.991,59,1.232,60,0.771,65,0.875,70,0.589,77,1.345,112,0.024,113,0.033,114,0.024,138,2.267,154,2.601,160,3.492,168,2.548,170,2.267,179,1.445,180,0.991,195,3.077,244,1.725,264,1.917,267,2.267,284,2.952,334,1.961,335,1.917,336,3.492,337,2.267,338,2.8,339,2.1,340,2.8,341,3.799,342,3.799,343,2.8,344,4.312,345,2.267,346,2.8,347,2.8,348,4.835,349,2.8,350,2.267,351,2.8,352,1.445,353,2.8,354,2.8,355,3.799,356,4.312,357,3.799,358,2.8,359,2.8,360,2.8,361,3.799,362,2.8,363,3.799,364,3.799,365,2.8,366,2.8,367,2.267]],["title/injectables/ModelLoaderService.html",[334,1.461,339,1.285]],["body/injectables/ModelLoaderService.html",[0,0.36,3,0.417,4,0.417,5,0.36,6,0.507,7,0.312,8,0.404,14,0.258,15,0.818,19,1.26,21,0.601,22,1.189,23,2.546,30,1.051,35,1.44,37,1.223,38,0.049,39,1.073,40,1.073,42,2.032,47,1.677,48,0.794,49,0.794,52,1.498,59,0.86,60,0.546,65,1.113,70,0.417,77,1.715,90,1.348,97,1.023,112,0.017,113,0.025,114,0.017,153,3.04,161,2.335,172,1.616,180,0.702,284,2.032,320,1.171,334,1.532,335,1.357,339,1.348,345,1.605,350,2.882,367,2.404,368,3.835,369,1.605,370,3.559,371,2.968,372,2.968,373,2.968,374,2.968,375,1.982,376,2.968,377,2.968,378,2.968,379,1.982,380,3.543,381,2.968,382,1.982,383,1.982,384,1.982,385,3.559,386,2.968,387,1.982,388,2.968,389,1.982,390,2.032,391,2.032,392,2.032,393,2.032,394,2.032,395,2.968,396,2.968,397,2.968,398,2.968,399,2.968,400,2.968,401,2.968,402,1.023,403,2.335,404,2.103,405,2.103,406,2.103,407,2.032,408,2.032,409,2.032,410,2.032,411,2.103,412,1.754,413,1.754,414,1.982,415,1.982,416,1.982,417,1.982,418,1.982,419,1.982,420,1.982,421,1.982,422,1.982,423,1.982,424,1.982,425,1.982,426,4.605,427,1.982,428,1.982,429,2.968,430,1.982,431,1.982,432,1.982,433,1.982,434,1.982,435,1.982,436,1.982,437,1.982,438,1.982,439,1.982,440,2.968,441,1.982,442,1.982,443,1.982]],["title/modules/NgxFaceApiJsModule.html",[444,1.937,445,1.461]],["body/modules/NgxFaceApiJsModule.html",[0,0.414,3,0.479,4,0.479,5,0.414,6,0.413,7,0.31,8,0.398,21,0.429,22,0.913,35,1.028,37,0.905,38,0.049,39,0.794,40,0.794,52,1.164,59,1.231,60,0.905,62,1.034,64,1.559,65,0.712,66,1.974,70,0.692,77,1.164,90,1.492,102,2.647,103,2.25,104,2.25,112,0.019,113,0.028,114,0.019,116,2.09,117,0.806,134,2.09,141,2.09,168,1.346,172,1.034,179,1.176,180,0.806,218,1.559,244,1.492,326,1.559,339,1.492,352,1.991,390,1.559,391,1.559,392,1.559,393,1.559,394,1.559,402,1.991,444,1.559,445,2.773,446,1.559,447,1.176,448,2.641,449,1.844,450,2.641,451,1.844,452,1.844,453,1.844,454,2.662,455,1.844,456,1.559,457,2.641,458,1.559,459,2.662,460,3.421,461,2.662,462,2.277,463,2.844,464,2.277,465,2.28,466,3.421,467,2.277,468,2.662,469,2.277,470,3.124,471,3.124,472,2.662,473,1.559,474,1.176,475,2.662,476,2.662,477,1.844,478,0.806,479,1.844,480,1.844,481,2.662,482,1.844,483,1.844]],["title/interfaces/NgxFaceApiJsModuleOption.html",[463,1.672,478,1.002]],["body/interfaces/NgxFaceApiJsModuleOption.html",[0,0.499,3,0.578,4,0.578,5,0.499,6,0.294,7,0.275,8,0.319,14,0.358,15,1.032,21,0.489,38,0.049,40,0.906,59,1.28,60,1.032,62,1.246,64,1.879,65,0.858,66,1.711,70,0.789,77,1.327,90,1.702,102,2.711,103,2.566,104,2.566,112,0.024,113,0.032,114,0.024,116,1.711,117,0.972,134,1.711,141,1.711,168,2.523,172,1.938,179,1.417,180,0.972,218,1.879,244,1.702,339,1.702,352,2.559,390,1.879,391,1.879,392,1.879,393,1.879,394,1.879,402,2.559,445,1.935,448,1.879,450,1.879,457,1.879,458,1.879,459,2.223,460,3.036,461,2.223,463,2.711,465,1.622,466,3.457,468,2.223,470,3.036,471,3.457,472,3.036,473,1.879,474,1.417,475,3.036,476,3.036,477,2.223,478,0.972,479,2.223,480,2.223,481,3.036,482,2.223,483,2.223,484,1.622]],["title/interfaces/NpmRegistryPackage.html",[478,1.002,485,1.937]],["body/interfaces/NpmRegistryPackage.html",[3,0.65,4,0.65,5,0.561,6,0.331,7,0.199,8,0.263,14,0.402,15,1.117,21,0.529,38,0.05,39,1.238,59,0.745,70,0.853,72,1.237,77,1.603,90,2.056,112,0.026,113,0.035,114,0.026,161,1.823,163,2.396,172,2.435,478,1.093,484,1.823,485,3.099,486,2.112,487,5.127,488,3.086,489,2.112,490,3.283,491,4.054,492,3.086,493,3.086,494,3.086,495,3.086,496,4.054,497,3.086,498,4.054,499,3.086,500,3.086,501,4.054,502,3.086,503,4.054,504,4.054,505,3.086,506,3.086,507,3.086,508,3.086,509,3.086,510,4.054,511,3.086,512,3.086]],["title/interfaces/Schema.html",[478,1.002,513,1.937]],["body/interfaces/Schema.html",[3,0.856,4,0.856,5,0.739,6,0.435,7,0.262,8,0.346,14,0.53,15,1.326,21,0.53,38,0.046,70,0.856,112,0.035,113,0.041,114,0.035,172,2.33,478,1.439,484,2.402,513,3.296,514,2.782,515,3.291,516,4.297]],["title/coverage.html",[517,3.099]],["body/coverage.html",[0,0.562,1,0.95,5,0.381,6,0.599,7,0.362,8,0.477,9,1.695,10,1.695,21,0.273,38,0.048,43,0.839,66,0.839,68,1.433,72,0.839,112,0.018,113,0.026,114,0.018,115,1.301,116,0.839,118,2.172,119,1.827,120,2.116,134,0.839,135,1.695,141,0.839,142,1.695,149,1.695,163,2.903,217,1.237,223,1.695,224,1.695,244,0.95,301,1.237,320,3.309,334,1.596,336,1.695,337,1.695,339,0.95,352,1.081,368,1.695,369,1.695,402,1.081,403,1.237,404,1.237,405,1.237,406,1.237,407,1.433,408,1.433,409,1.433,410,1.433,411,1.237,412,1.237,413,1.237,457,1.433,458,1.433,463,1.237,478,1.301,485,1.433,486,2.116,489,1.433,513,1.433,514,2.964,515,1.695,517,1.695,518,1.695,519,2.093,520,2.093,521,1.695,522,1.695,523,1.695,524,5.436,525,2.093,526,1.695,527,1.695,528,1.695,529,1.695,530,1.695,531,1.695,532,1.695,533,1.695,534,1.695,535,1.695,536,1.695,537,1.695,538,3.675,539,3.675,540,3.091,541,2.093,542,2.093,543,1.695,544,5.182,545,2.778,546,3.209,547,1.695,548,2.093,549,2.093]],["title/dependencies.html",[447,1.752,550,2.381]],["body/dependencies.html",[7,0.246,38,0.049,60,1.049,112,0.033,113,0.04,114,0.033,180,1.349,264,2.607,447,1.966,473,3.17,474,2.391,551,3.808,552,5.527,553,3.808,554,3.808,555,3.808,556,3.808,557,3.808,558,3.808,559,3.808,560,3.808,561,3.084,562,3.808,563,3.808,564,3.808,565,3.808,566,3.808,567,3.808,568,3.808]],["title/miscellaneous/functions.html",[569,1.081,570,2.749]],["body/miscellaneous/functions.html",[6,0.569,7,0.343,8,0.453,14,0.406,37,1.38,38,0.048,39,1.21,40,1.21,52,1.855,112,0.027,113,0.035,114,0.027,161,1.841,163,2.688,301,1.841,320,1.841,465,2.688,486,2.133,489,2.793,490,2.523,514,3.304,521,2.523,522,2.523,523,3.684,526,2.523,527,3.684,528,2.523,529,3.304,530,2.523,531,3.304,532,2.523,533,3.304,534,2.523,535,3.304,536,2.523,537,3.684,569,1.415,570,2.523,571,3.116,572,3.116,573,3.116,574,3.116,575,3.116,576,3.116,577,4.08,578,5.141,579,3.116,580,3.116,581,3.116,582,3.116,583,3.116]],["title/index.html",[14,0.311,584,1.928,585,1.928]],["body/index.html",[7,0.345,8,0.33,33,1.997,38,0.044,112,0.033,113,0.033,114,0.025,117,1.018,119,2.583,154,2.993,180,1.548,201,1.485,202,1.485,227,1.969,239,3.133,327,3.133,447,1.485,474,1.997,516,3.133,561,3.133,586,2.876,587,4.676,588,4.372,589,2.876,590,2.876,591,2.876,592,2.876,593,2.876,594,2.876,595,2.876,596,2.876,597,2.329,598,2.876,599,4.372,600,2.876,601,2.876,602,3.869,603,2.876,604,2.876,605,2.876,606,2.876,607,3.869,608,2.876,609,3.869,610,4.372,611,2.329,612,2.876,613,2.876,614,2.876,615,5.025,616,4.372,617,5.22,618,2.876,619,2.876,620,2.876,621,2.876,622,2.876,623,2.876,624,2.876,625,2.876,626,2.876,627,2.876,628,2.876,629,2.876,630,2.876,631,2.876,632,2.876,633,2.876,634,2.876,635,2.876,636,3.869,637,3.133,638,3.869,639,2.876,640,4.676,641,2.876,642,2.876,643,2.876,644,2.876,645,2.876,646,3.869,647,2.876,648,2.876,649,2.876,650,2.876,651,2.876,652,2.876,653,2.876,654,2.876,655,2.993,656,2.329,657,2.876,658,2.876,659,2.329,660,2.876,661,2.876,662,2.329]],["title/license.html",[584,1.928,585,1.928,655,1.63]],["body/license.html",[38,0.037,112,0.029,113,0.037,114,0.029,256,2.71,456,2.291,518,2.71,597,3.46,655,2.291,656,4.409,659,3.46,662,2.71,663,4.707,664,3.346,665,3.346,666,3.346,667,4.273,668,3.346,669,3.346,670,3.346,671,3.346,672,3.346,673,3.346,674,4.273,675,3.346,676,3.346,677,3.346,678,4.707,679,3.346,680,4.273,681,3.346,682,3.346,683,3.346,684,3.346,685,3.346,686,3.346,687,3.346,688,3.346,689,3.346,690,4.273,691,3.346,692,3.346,693,3.346,694,3.346,695,3.346,696,3.346,697,4.273,698,4.273,699,3.346,700,3.346,701,3.346,702,3.346,703,3.346,704,3.346,705,3.346,706,3.346,707,3.346,708,3.346,709,3.346,710,3.346,711,3.346,712,3.346,713,3.346,714,3.346,715,3.346,716,3.346,717,3.346,718,3.346,719,3.346,720,3.346,721,3.346,722,3.346,723,3.346,724,3.346,725,3.346,726,3.346,727,3.346,728,3.346]],["title/modules.html",[446,2.62]],["body/modules.html",[38,0.043,112,0.037,113,0.043,114,0.037,445,2.249,446,2.983,474,2.249,611,3.529,729,4.358,730,4.358]],["title/overview.html",[731,3.099]],["body/overview.html",[2,1.617,38,0.047,66,1.941,102,2.105,112,0.03,113,0.038,114,0.03,116,2.164,117,1.261,134,2.164,141,2.164,217,2.105,301,2.626,326,2.438,335,2.438,444,3.042,445,2.903,447,1.839,448,2.438,449,2.885,450,2.438,451,2.885,452,2.885,453,2.885,454,3.599,455,2.885,456,2.438,484,2.105,731,2.885,732,4.445,733,4.445]],["title/miscellaneous/typealiases.html",[569,1.081,734,3.394]],["body/miscellaneous/typealiases.html",[6,0.535,7,0.322,8,0.426,14,0.498,21,0.498,38,0.048,45,2.106,47,1.643,112,0.033,113,0.04,114,0.033,147,3.093,201,1.972,202,1.972,203,2.615,204,2.615,380,3.176,403,2.257,404,2.257,405,2.257,406,2.257,411,2.257,412,2.257,413,2.257,545,2.615,546,2.615,569,1.734,735,3.82,736,3.093,737,3.093,738,3.82,739,3.82]],["title/miscellaneous/variables.html",[569,1.081,740,2.749]],["body/miscellaneous/variables.html",[6,0.501,7,0.324,8,0.428,14,0.375,21,0.703,38,0.049,47,1.656,48,2.19,49,2.19,72,1.55,112,0.025,113,0.033,114,0.025,201,1.485,202,1.485,203,1.969,204,1.969,227,1.969,352,1.997,380,3.515,402,1.997,403,2.583,404,2.583,405,2.583,406,2.583,407,2.648,408,2.648,409,2.648,410,2.648,411,2.583,412,2.583,413,2.583,465,1.699,543,2.329,545,1.969,546,1.969,547,2.329,569,1.306,637,2.329,736,3.786,737,4.158,740,2.329,741,2.876,742,2.876,743,2.876,744,2.876,745,2.876,746,2.876,747,2.876]]],"invertedIndex":[["",{"_index":38,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{},"interfaces/NpmRegistryPackage.html":{},"interfaces/Schema.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":320,"title":{},"body":{"components/DetectionResultComponent.html":{},"injectables/ModelLoaderService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["0.20.0",{"_index":563,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":568,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":524,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":539,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":525,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":538,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":540,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":541,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":542,"title":{},"body":{"coverage.html":{}}}],["0/index.ts",{"_index":522,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["1",{"_index":301,"title":{},"body":{"components/DetectionResultComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["1.9.0",{"_index":566,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":325,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["126",{"_index":642,"title":{},"body":{"index.html":{}}}],["1440",{"_index":652,"title":{},"body":{"index.html":{}}}],["1457",{"_index":639,"title":{},"body":{"index.html":{}}}],["2",{"_index":733,"title":{},"body":{"overview.html":{}}}],["2.5.4",{"_index":562,"title":{},"body":{"dependencies.html":{}}}],["2019",{"_index":665,"title":{},"body":{"license.html":{}}}],["3",{"_index":732,"title":{},"body":{"overview.html":{}}}],["497",{"_index":644,"title":{},"body":{"index.html":{}}}],["6.3.3",{"_index":564,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":552,"title":{},"body":{"dependencies.html":{}}}],["7.3.7",{"_index":554,"title":{},"body":{"dependencies.html":{}}}],["a.concat(b",{"_index":421,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["abbstract",{"_index":129,"title":{},"body":{"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["above",{"_index":696,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":17,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["abstractdetectdirective",{"_index":1,"title":{"classes/AbstractDetectDirective.html":{}},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"coverage.html":{}}}],["accessors",{"_index":28,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{}}}],["according",{"_index":627,"title":{},"body":{"index.html":{}}}],["action",{"_index":722,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":333,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["add",{"_index":616,"title":{},"body":{"index.html":{}}}],["add/addbrowserignorepackagesetting.ts",{"_index":526,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["add/addcdkoverlayprebuiltcsstoappstyles.ts",{"_index":528,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["add/addngxfaceapijsmodule.ts",{"_index":530,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["add/index.ts",{"_index":532,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["add/schema.ts",{"_index":515,"title":{},"body":{"interfaces/Schema.html":{},"coverage.html":{}}}],["addbrowserignorepackagesetting",{"_index":527,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["addcdkoverlayprebuiltcsstoappstyles",{"_index":529,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["addcdkoverlayprebuiltcsstoappstyles(options",{"_index":579,"title":{},"body":{"miscellaneous/functions.html":{}}}],["adddependencies",{"_index":535,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["adddependencies(undefined",{"_index":580,"title":{},"body":{"miscellaneous/functions.html":{}}}],["added",{"_index":648,"title":{},"body":{"index.html":{}}}],["addngxfaceapijsmodule",{"_index":531,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["addngxfaceapijsmodule(options",{"_index":581,"title":{},"body":{"miscellaneous/functions.html":{}}}],["afterviewinit",{"_index":13,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["age",{"_index":314,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["ageandgender",{"_index":203,"title":{},"body":{"classes/DetectTask.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ageandgendermodel",{"_index":411,"title":{},"body":{"injectables/ModelLoaderService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ageandgendertoken",{"_index":410,"title":{},"body":{"injectables/ModelLoaderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["aliases",{"_index":735,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allfaces",{"_index":624,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":688,"title":{},"body":{"license.html":{}}}],["angular",{"_index":587,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":551,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":553,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/overlay",{"_index":62,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{}}}],["angular/cdk/portal",{"_index":64,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{}}}],["angular/common",{"_index":555,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":556,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":60,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":557,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":473,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{},"dependencies.html":{}}}],["angular/router",{"_index":559,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":8,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{},"interfaces/NpmRegistryPackage.html":{},"interfaces/Schema.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["api.js",{"_index":180,"title":{},"body":{"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{},"dependencies.html":{},"index.html":{}}}],["api.js@~0.20.0",{"_index":650,"title":{},"body":{"index.html":{}}}],["arising",{"_index":726,"title":{},"body":{"license.html":{}}}],["arr",{"_index":423,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["arr.indexof(v",{"_index":424,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["array.isarray(result",{"_index":275,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["associated",{"_index":675,"title":{},"body":{"license.html":{}}}],["async",{"_index":153,"title":{},"body":{"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/ModelLoaderService.html":{}}}],["attribute",{"_index":607,"title":{},"body":{"index.html":{}}}],["attributes",{"_index":621,"title":{},"body":{"index.html":{}}}],["author",{"_index":660,"title":{},"body":{"index.html":{}}}],["authors",{"_index":715,"title":{},"body":{"license.html":{}}}],["await",{"_index":284,"title":{},"body":{"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{}}}],["b",{"_index":420,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["background",{"_index":629,"title":{},"body":{"index.html":{}}}],["bash",{"_index":636,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":42,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"classes/DetectTask.html":{},"injectables/ModelLoaderService.html":{}}}],["bootstrap",{"_index":449,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{},"overview.html":{}}}],["browse",{"_index":730,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":474,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browsermodule",{"_index":472,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{}}}],["buildpackage",{"_index":512,"title":{},"body":{"interfaces/NpmRegistryPackage.html":{}}}],["bytes",{"_index":640,"title":{},"body":{"index.html":{}}}],["c",{"_index":664,"title":{},"body":{"license.html":{}}}],["canvas",{"_index":239,"title":{},"body":{"components/DetectionResultComponent.html":{},"index.html":{}}}],["canvasel",{"_index":231,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["case",{"_index":426,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["catch",{"_index":508,"title":{},"body":{"interfaces/NpmRegistryPackage.html":{}}}],["cdk",{"_index":625,"title":{},"body":{"index.html":{}}}],["charge",{"_index":671,"title":{},"body":{"license.html":{}}}],["chunk",{"_index":498,"title":{},"body":{"interfaces/NpmRegistryPackage.html":{}}}],["claim",{"_index":718,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractDetectDirective.html":{},"classes/DetectTask.html":{}},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"overview.html":{}}}],["cluster_ngxfaceapijsmodule",{"_index":451,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{},"overview.html":{}}}],["cluster_ngxfaceapijsmodule_declarations",{"_index":452,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{},"overview.html":{}}}],["cluster_ngxfaceapijsmodule_exports",{"_index":453,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{},"overview.html":{}}}],["combinelatest",{"_index":263,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["command",{"_index":618,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":654,"title":{},"body":{"index.html":{}}}],["component",{"_index":217,"title":{"components/DetectionResultComponent.html":{}},"body":{"components/DetectionResultComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component_template",{"_index":330,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["componentportal",{"_index":63,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["components",{"_index":218,"title":{},"body":{"components/DetectionResultComponent.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{}}}],["components/detection",{"_index":67,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["conditions",{"_index":695,"title":{},"body":{"license.html":{}}}],["config",{"_index":93,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["connection",{"_index":727,"title":{},"body":{"license.html":{}}}],["console.log",{"_index":442,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["const",{"_index":90,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"components/DetectionResultComponent.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{},"interfaces/NpmRegistryPackage.html":{}}}],["constructor",{"_index":30,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{}}}],["constructor(el",{"_index":31,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["constructor(modelloader",{"_index":338,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["constructor(modelurl",{"_index":375,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["constructor(option",{"_index":157,"title":{},"body":{"classes/DetectTask.html":{}}}],["constructor(task",{"_index":240,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["content",{"_index":628,"title":{},"body":{"index.html":{}}}],["contract",{"_index":723,"title":{},"body":{"license.html":{}}}],["convertresulttoarray",{"_index":234,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["convertresulttoarray(result",{"_index":247,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["copies",{"_index":690,"title":{},"body":{"license.html":{}}}],["copy",{"_index":674,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":663,"title":{},"body":{"license.html":{}}}],["core",{"_index":560,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":517,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createinjector",{"_index":24,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["createoverlay",{"_index":25,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["createprovidersfromoptions",{"_index":461,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{}}}],["createprovidersfromoptions(options",{"_index":462,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{}}}],["damages",{"_index":719,"title":{},"body":{"license.html":{}}}],["deal",{"_index":677,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":728,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":448,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{},"overview.html":{}}}],["decorators",{"_index":253,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["default",{"_index":48,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"components/DetectionResultComponent.html":{},"injectables/ModelLoaderService.html":{},"miscellaneous/variables.html":{}}}],["default_version",{"_index":491,"title":{},"body":{"interfaces/NpmRegistryPackage.html":{}}}],["defined",{"_index":35,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{}}}],["demo",{"_index":631,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":447,"title":{"dependencies.html":{}},"body":{"modules/NgxFaceApiJsModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependency",{"_index":649,"title":{},"body":{"index.html":{}}}],["dependent",{"_index":590,"title":{},"body":{"index.html":{}}}],["description",{"_index":592,"title":{},"body":{"index.html":{}}}],["descriptors",{"_index":204,"title":{},"body":{"classes/DetectTask.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["descriptorsfeaturetoken",{"_index":409,"title":{},"body":{"injectables/ModelLoaderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["detect",{"_index":154,"title":{},"body":{"classes/DetectTask.html":{},"injectables/FaceDetectorService.html":{},"index.html":{}}}],["detect(option",{"_index":167,"title":{},"body":{"classes/DetectTask.html":{}}}],["detect(task",{"_index":342,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["detect.directive",{"_index":130,"title":{},"body":{"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["detect.directive.ts",{"_index":10,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"coverage.html":{}}}],["detect.directive.ts:10",{"_index":46,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["detect.directive.ts:11",{"_index":36,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["detect.directive.ts:17",{"_index":44,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["detect.directive.ts:18",{"_index":56,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["detect.directive.ts:26",{"_index":58,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["detect.directive.ts:42",{"_index":53,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["detect.directive.ts:52",{"_index":51,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["detect.directive.ts:64",{"_index":54,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["detect.directive.ts:9",{"_index":50,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["detectallfacesimgdirective",{"_index":116,"title":{"directives/DetectAllFacesImgDirective.html":{}},"body":{"directives/DetectAllFacesImgDirective.html":{},"components/DetectionResultComponent.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{},"coverage.html":{},"overview.html":{}}}],["detectallfacesvideodirective",{"_index":134,"title":{"directives/DetectAllFacesVideoDirective.html":{}},"body":{"directives/DetectAllFacesVideoDirective.html":{},"components/DetectionResultComponent.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{},"coverage.html":{},"overview.html":{}}}],["detection",{"_index":227,"title":{},"body":{"components/DetectionResultComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["detection.box",{"_index":309,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["detectionresultcomponent",{"_index":66,"title":{"components/DetectionResultComponent.html":{}},"body":{"classes/AbstractDetectDirective.html":{},"components/DetectionResultComponent.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{},"coverage.html":{},"overview.html":{}}}],["detectionsforsize",{"_index":290,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["detector.service",{"_index":269,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["detector.service.ts",{"_index":337,"title":{},"body":{"injectables/FaceDetectorService.html":{},"coverage.html":{}}}],["detector.service.ts:11",{"_index":340,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["detector.service.ts:19",{"_index":343,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["detectsinglefaceimgdirective",{"_index":141,"title":{"directives/DetectSingleFaceImgDirective.html":{}},"body":{"directives/DetectSingleFaceImgDirective.html":{},"components/DetectionResultComponent.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{},"coverage.html":{},"overview.html":{}}}],["detecttask",{"_index":43,"title":{"classes/DetectTask.html":{}},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"coverage.html":{}}}],["dingle",{"_index":142,"title":{},"body":{"directives/DetectSingleFaceImgDirective.html":{},"coverage.html":{}}}],["directive",{"_index":115,"title":{"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}},"body":{"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"components/DetectionResultComponent.html":{},"coverage.html":{}}}],["directives",{"_index":117,"title":{},"body":{"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"components/DetectionResultComponent.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{},"index.html":{},"overview.html":{}}}],["distribute",{"_index":686,"title":{},"body":{"license.html":{}}}],["documantation",{"_index":653,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":518,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dom",{"_index":221,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["draw",{"_index":235,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["draw(results",{"_index":249,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["dynamic",{"_index":558,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":509,"title":{},"body":{"interfaces/NpmRegistryPackage.html":{}}}],["easy",{"_index":596,"title":{},"body":{"index.html":{}}}],["el",{"_index":41,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{}}}],["element",{"_index":328,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["elementref",{"_index":32,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"components/DetectionResultComponent.html":{}}}],["embed",{"_index":606,"title":{},"body":{"index.html":{}}}],["embedded",{"_index":620,"title":{},"body":{"index.html":{}}}],["emotion",{"_index":594,"title":{},"body":{"index.html":{}}}],["emotions",{"_index":601,"title":{},"body":{"index.html":{}}}],["entrycomponents",{"_index":459,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{}}}],["event",{"_index":714,"title":{},"body":{"license.html":{}}}],["export",{"_index":70,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{},"interfaces/NpmRegistryPackage.html":{},"interfaces/Schema.html":{}}}],["exportas",{"_index":131,"title":{},"body":{"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["exports",{"_index":450,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{},"overview.html":{}}}],["express",{"_index":705,"title":{},"body":{"license.html":{}}}],["expressions",{"_index":201,"title":{},"body":{"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["expressionsfeaturetoken",{"_index":407,"title":{},"body":{"injectables/ModelLoaderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["extends",{"_index":132,"title":{},"body":{"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["face",{"_index":7,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{},"interfaces/NpmRegistryPackage.html":{},"interfaces/Schema.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["faceapi",{"_index":179,"title":{},"body":{"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{}}}],["faceapi.detectallfaces(await",{"_index":198,"title":{},"body":{"classes/DetectTask.html":{}}}],["faceapi.detectallfacestask",{"_index":196,"title":{},"body":{"classes/DetectTask.html":{}}}],["faceapi.detectsingleface(await",{"_index":199,"title":{},"body":{"classes/DetectTask.html":{}}}],["faceapi.detectsinglefacetask",{"_index":197,"title":{},"body":{"classes/DetectTask.html":{}}}],["faceapi.draw.drawdetections(this.canvas",{"_index":302,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["faceapi.draw.drawfaceexpressions",{"_index":306,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["faceapi.draw.drawfacelandmarks",{"_index":311,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["faceapi.draw.drawtextfield",{"_index":318,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["faceapi.facedetection",{"_index":293,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["faceapi.facedetectionoptions",{"_index":168,"title":{},"body":{"classes/DetectTask.html":{},"injectables/FaceDetectorService.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{}}}],["faceapi.resizeresults",{"_index":291,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["faceapi.resizeresults(results",{"_index":304,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["faceapi.round(age",{"_index":319,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["faceapi.round(genderprobability",{"_index":322,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["facedetectionoptions",{"_index":352,"title":{},"body":{"injectables/FaceDetectorService.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["facedetector",{"_index":243,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["facedetectorservice",{"_index":244,"title":{"injectables/FaceDetectorService.html":{}},"body":{"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{},"coverage.html":{}}}],["faceexpressionmodel",{"_index":404,"title":{},"body":{"injectables/ModelLoaderService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["facelandmarkmodel",{"_index":405,"title":{},"body":{"injectables/ModelLoaderService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["facerecognitionmodel",{"_index":406,"title":{},"body":{"injectables/ModelLoaderService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["faces",{"_index":119,"title":{},"body":{"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"coverage.html":{},"index.html":{}}}],["false",{"_index":97,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"injectables/ModelLoaderService.html":{}}}],["features",{"_index":595,"title":{},"body":{"index.html":{}}}],["featuretoken",{"_index":47,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"injectables/ModelLoaderService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{},"interfaces/NpmRegistryPackage.html":{},"interfaces/Schema.html":{},"coverage.html":{}}}],["files",{"_index":676,"title":{},"body":{"license.html":{}}}],["filter((v",{"_index":422,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["fitness",{"_index":710,"title":{},"body":{"license.html":{}}}],["flexibleconnectedto(this.el",{"_index":80,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["following",{"_index":694,"title":{},"body":{"license.html":{}}}],["forroot",{"_index":467,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{}}}],["forroot(options",{"_index":468,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{}}}],["free",{"_index":670,"title":{},"body":{"license.html":{}}}],["fromevent",{"_index":346,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["fromevent(image",{"_index":366,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["fromevent(video",{"_index":359,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["function",{"_index":163,"title":{},"body":{"classes/DetectTask.html":{},"interfaces/NpmRegistryPackage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":570,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":693,"title":{},"body":{"license.html":{}}}],["gender",{"_index":315,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["genderprobability",{"_index":316,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["get(`http://registry.npmjs.org/${packagename",{"_index":494,"title":{},"body":{"interfaces/NpmRegistryPackage.html":{}}}],["getcanvas",{"_index":259,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["getlatestnodeversion",{"_index":489,"title":{},"body":{"interfaces/NpmRegistryPackage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getlatestnodeversion(packagename",{"_index":582,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getorverlaypositionstrategy",{"_index":57,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["getreqiredmodels",{"_index":371,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["getreqiredmodels(tokens",{"_index":378,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["getresolvetarget",{"_index":177,"title":{},"body":{"classes/DetectTask.html":{}}}],["getting",{"_index":584,"title":{"index.html":{},"license.html":{}},"body":{}}],["granted",{"_index":669,"title":{},"body":{"license.html":{}}}],["hasbackdrop",{"_index":96,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["height",{"_index":287,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["height}px",{"_index":299,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["hereby",{"_index":668,"title":{},"body":{"license.html":{}}}],["holders",{"_index":716,"title":{},"body":{"license.html":{}}}],["hostlistener",{"_index":262,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["hostlistener('window:resize",{"_index":272,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["hostlisteners",{"_index":237,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["html",{"_index":327,"title":{},"body":{"components/DetectionResultComponent.html":{},"index.html":{}}}],["htmlcanvaselement",{"_index":270,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["htmlimageelement",{"_index":181,"title":{},"body":{"classes/DetectTask.html":{}}}],["htmlvideoelement",{"_index":182,"title":{},"body":{"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{}}}],["http",{"_index":488,"title":{},"body":{"interfaces/NpmRegistryPackage.html":{}}}],["identifier",{"_index":519,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":632,"title":{},"body":{"index.html":{}}}],["img",{"_index":619,"title":{},"body":{"index.html":{}}}],["img.directive.ts",{"_index":120,"title":{},"body":{"directives/DetectAllFacesImgDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"coverage.html":{}}}],["img.directive.ts:11",{"_index":125,"title":{},"body":{"directives/DetectAllFacesImgDirective.html":{}}}],["img.directive.ts:13",{"_index":144,"title":{},"body":{"directives/DetectSingleFaceImgDirective.html":{}}}],["img.directive.ts:19",{"_index":127,"title":{},"body":{"directives/DetectAllFacesImgDirective.html":{}}}],["img.directive.ts:20",{"_index":126,"title":{},"body":{"directives/DetectAllFacesImgDirective.html":{}}}],["img.directive.ts:21",{"_index":148,"title":{},"body":{"directives/DetectSingleFaceImgDirective.html":{}}}],["img.directive.ts:22",{"_index":146,"title":{},"body":{"directives/DetectSingleFaceImgDirective.html":{}}}],["img.directive.ts:23",{"_index":145,"title":{},"body":{"directives/DetectSingleFaceImgDirective.html":{}}}],["img/video",{"_index":608,"title":{},"body":{"index.html":{}}}],["img[allfaces",{"_index":123,"title":{},"body":{"directives/DetectAllFacesImgDirective.html":{}}}],["img[allfaces]'},{'name",{"_index":331,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["img[singleface",{"_index":143,"title":{},"body":{"directives/DetectSingleFaceImgDirective.html":{},"components/DetectionResultComponent.html":{}}}],["implementation",{"_index":591,"title":{},"body":{"index.html":{}}}],["implements",{"_index":11,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"components/DetectionResultComponent.html":{}}}],["implied",{"_index":706,"title":{},"body":{"license.html":{}}}],["import",{"_index":59,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{},"interfaces/NpmRegistryPackage.html":{}}}],["imports",{"_index":479,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{}}}],["included",{"_index":699,"title":{},"body":{"license.html":{}}}],["including",{"_index":680,"title":{},"body":{"license.html":{}}}],["index",{"_index":14,"title":{"index.html":{}},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{},"interfaces/NpmRegistryPackage.html":{},"interfaces/Schema.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{},"interfaces/NpmRegistryPackage.html":{},"interfaces/Schema.html":{}}}],["inject",{"_index":345,"title":{},"body":{"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{}}}],["inject(facedetectionoptions",{"_index":353,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["inject(modelsurl",{"_index":414,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["injectable",{"_index":334,"title":{"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{}},"body":{"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"coverage.html":{}}}],["injectables",{"_index":335,"title":{},"body":{"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"overview.html":{}}}],["injectiontoken",{"_index":745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('ngx",{"_index":743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injector",{"_index":34,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["injector.create",{"_index":99,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["input",{"_index":128,"title":{},"body":{"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["inputs",{"_index":124,"title":{},"body":{"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["installation",{"_index":635,"title":{},"body":{"index.html":{}}}],["installdependencies",{"_index":537,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["installed",{"_index":651,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":205,"title":{},"body":{"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{}}}],["interface",{"_index":478,"title":{"interfaces/NgxFaceApiJsModuleOption.html":{},"interfaces/NpmRegistryPackage.html":{},"interfaces/Schema.html":{}},"body":{"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{},"interfaces/NpmRegistryPackage.html":{},"interfaces/Schema.html":{},"coverage.html":{}}}],["interfaces",{"_index":484,"title":{},"body":{"interfaces/NgxFaceApiJsModuleOption.html":{},"interfaces/NpmRegistryPackage.html":{},"interfaces/Schema.html":{},"overview.html":{}}}],["interval",{"_index":347,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["interval(300",{"_index":362,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["isloaded",{"_index":372,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["isloaded(model",{"_index":381,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["ismatchpattern",{"_index":155,"title":{},"body":{"classes/DetectTask.html":{}}}],["ismatchpattern(patten",{"_index":171,"title":{},"body":{"classes/DetectTask.html":{}}}],["js",{"_index":561,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["js.face",{"_index":744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["js.models",{"_index":746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["js.module.ts",{"_index":458,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{},"coverage.html":{}}}],["js.module.ts:38",{"_index":464,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{}}}],["js.module.ts:58",{"_index":469,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{}}}],["js/schematics/migrations/update",{"_index":521,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["js/schematics/ng",{"_index":514,"title":{},"body":{"interfaces/Schema.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["js/schematics/util/adddependencies.ts",{"_index":534,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["js/schematics/util/installdependencies.ts",{"_index":536,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["js/schematics/util/npmjs.ts",{"_index":486,"title":{},"body":{"interfaces/NpmRegistryPackage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["js/src/lib/classes/detecttask.ts",{"_index":149,"title":{},"body":{"classes/DetectTask.html":{},"coverage.html":{}}}],["js/src/lib/classes/detecttask.ts:11",{"_index":166,"title":{},"body":{"classes/DetectTask.html":{}}}],["js/src/lib/classes/detecttask.ts:12",{"_index":165,"title":{},"body":{"classes/DetectTask.html":{}}}],["js/src/lib/classes/detecttask.ts:13",{"_index":159,"title":{},"body":{"classes/DetectTask.html":{}}}],["js/src/lib/classes/detecttask.ts:28",{"_index":162,"title":{},"body":{"classes/DetectTask.html":{}}}],["js/src/lib/classes/detecttask.ts:30",{"_index":164,"title":{},"body":{"classes/DetectTask.html":{}}}],["js/src/lib/classes/detecttask.ts:32",{"_index":173,"title":{},"body":{"classes/DetectTask.html":{}}}],["js/src/lib/classes/detecttask.ts:36",{"_index":176,"title":{},"body":{"classes/DetectTask.html":{}}}],["js/src/lib/classes/detecttask.ts:41",{"_index":169,"title":{},"body":{"classes/DetectTask.html":{}}}],["js/src/lib/classes/detecttask.ts:5",{"_index":178,"title":{},"body":{"classes/DetectTask.html":{}}}],["js/src/lib/components/detection",{"_index":223,"title":{},"body":{"components/DetectionResultComponent.html":{},"coverage.html":{}}}],["js/src/lib/directives/abbstract",{"_index":9,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"coverage.html":{}}}],["js/src/lib/directives/detect",{"_index":118,"title":{},"body":{"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"coverage.html":{}}}],["js/src/lib/ngx",{"_index":457,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{},"coverage.html":{}}}],["js/src/lib/services/face",{"_index":336,"title":{},"body":{"injectables/FaceDetectorService.html":{},"coverage.html":{}}}],["js/src/lib/services/model",{"_index":368,"title":{},"body":{"injectables/ModelLoaderService.html":{},"coverage.html":{}}}],["js/src/lib/tokens/facedetectionoptions.ts",{"_index":543,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["js/src/lib/tokens/featuretoken.ts",{"_index":545,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["js/src/lib/tokens/modelsurl.ts",{"_index":547,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["js/src/lib/tokens/modeltoken.ts",{"_index":546,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["js/src/lib/tokens/tasktypetoken.ts",{"_index":739,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["json.parse(rawdata",{"_index":502,"title":{},"body":{"interfaces/NpmRegistryPackage.html":{}}}],["kamiazya(yuki",{"_index":661,"title":{},"body":{"index.html":{}}}],["kind",{"_index":704,"title":{},"body":{"license.html":{}}}],["landmarks",{"_index":202,"title":{},"body":{"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["landmarksfeaturetoken",{"_index":408,"title":{},"body":{"injectables/ModelLoaderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["latest",{"_index":492,"title":{},"body":{"interfaces/NpmRegistryPackage.html":{}}}],["latestversion",{"_index":503,"title":{},"body":{"interfaces/NpmRegistryPackage.html":{}}}],["legend",{"_index":326,"title":{},"body":{"components/DetectionResultComponent.html":{},"modules/NgxFaceApiJsModule.html":{},"overview.html":{}}}],["length",{"_index":394,"title":{},"body":{"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{}}}],["liability",{"_index":720,"title":{},"body":{"license.html":{}}}],["liable",{"_index":717,"title":{},"body":{"license.html":{}}}],["license",{"_index":655,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["limitation",{"_index":681,"title":{},"body":{"license.html":{}}}],["limited",{"_index":707,"title":{},"body":{"license.html":{}}}],["line",{"_index":393,"title":{},"body":{"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{}}}],["line:max",{"_index":392,"title":{},"body":{"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{}}}],["literal",{"_index":158,"title":{},"body":{"classes/DetectTask.html":{}}}],["load",{"_index":367,"title":{},"body":{"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{}}}],["load(...models",{"_index":428,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["load(models",{"_index":383,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["load(this.modelurl",{"_index":436,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["loadagegendermodel",{"_index":401,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["loadeddata",{"_index":360,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["loadedmodels",{"_index":370,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["loader.service",{"_index":351,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["loader.service.ts",{"_index":369,"title":{},"body":{"injectables/ModelLoaderService.html":{},"coverage.html":{}}}],["loader.service.ts:32",{"_index":376,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["loader.service.ts:39",{"_index":379,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["loader.service.ts:55",{"_index":389,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["loader.service.ts:74",{"_index":382,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["loader.service.ts:78",{"_index":384,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["loader.service.ts:92",{"_index":387,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["loadfaceexpressionmodel",{"_index":397,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["loadfacelandmarkmodel",{"_index":398,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["loadfacerecognitionmodel",{"_index":400,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["loadforfeature",{"_index":373,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["loadforfeature(tokens",{"_index":386,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["loadmtcnnmodel",{"_index":395,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["loadssdmobilenetv1model",{"_index":396,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["loadtargetmodels",{"_index":429,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["loadtargetmodels.concat(this.loadedmodels",{"_index":439,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["loadtargetmodels.length",{"_index":437,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["loadtinyfacedetectormodel",{"_index":399,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["make",{"_index":593,"title":{},"body":{"index.html":{}}}],["manual",{"_index":645,"title":{},"body":{"index.html":{}}}],["map",{"_index":265,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["map(([key",{"_index":417,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["map(load",{"_index":435,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["map(m",{"_index":433,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["maploadfunction",{"_index":374,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["maploadfunction(model",{"_index":388,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["matching",{"_index":113,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{},"interfaces/NpmRegistryPackage.html":{},"interfaces/Schema.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":709,"title":{},"body":{"license.html":{}}}],["merge",{"_index":684,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":121,"title":{},"body":{"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"components/DetectionResultComponent.html":{}}}],["methods",{"_index":22,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{}}}],["miscellaneous",{"_index":569,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":659,"title":{},"body":{"index.html":{},"license.html":{}}}],["mobile",{"_index":603,"title":{},"body":{"index.html":{}}}],["model",{"_index":350,"title":{},"body":{"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{}}}],["modelloader",{"_index":341,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["modelloaderservice",{"_index":339,"title":{"injectables/ModelLoaderService.html":{}},"body":{"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{},"coverage.html":{}}}],["models",{"_index":385,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["models.filter(m",{"_index":430,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["modelsurl",{"_index":402,"title":{},"body":{"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modeltoken",{"_index":380,"title":{},"body":{"injectables/ModelLoaderService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["modelurl",{"_index":377,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["modify",{"_index":683,"title":{},"body":{"license.html":{}}}],["module",{"_index":444,"title":{"modules/NgxFaceApiJsModule.html":{}},"body":{"modules/NgxFaceApiJsModule.html":{},"overview.html":{}}}],["modules",{"_index":446,"title":{"modules.html":{}},"body":{"modules/NgxFaceApiJsModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":470,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{}}}],["mtcnnmodel",{"_index":412,"title":{},"body":{"injectables/ModelLoaderService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":39,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/NpmRegistryPackage.html":{},"miscellaneous/functions.html":{}}}],["new",{"_index":72,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"interfaces/NpmRegistryPackage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":391,"title":{},"body":{"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{}}}],["ng",{"_index":615,"title":{},"body":{"index.html":{}}}],["ngadd",{"_index":533,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ngadd(options",{"_index":583,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ngafterviewinit",{"_index":26,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["ngmodule",{"_index":471,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{}}}],["ngondestroy",{"_index":236,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["ngoninit",{"_index":27,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"components/DetectionResultComponent.html":{}}}],["ngx",{"_index":637,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["ngxfaceapijs",{"_index":586,"title":{},"body":{"index.html":{}}}],["ngxfaceapijsmodule",{"_index":445,"title":{"modules/NgxFaceApiJsModule.html":{}},"body":{"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{},"modules.html":{},"overview.html":{}}}],["ngxfaceapijsmoduleoption",{"_index":463,"title":{"interfaces/NgxFaceApiJsModuleOption.html":{}},"body":{"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{},"coverage.html":{}}}],["noninfringement",{"_index":713,"title":{},"body":{"license.html":{}}}],["notice",{"_index":697,"title":{},"body":{"license.html":{}}}],["npmregistrypackage",{"_index":485,"title":{"interfaces/NpmRegistryPackage.html":{}},"body":{"interfaces/NpmRegistryPackage.html":{},"coverage.html":{}}}],["object.entries",{"_index":416,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["observable",{"_index":344,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["obtaining",{"_index":673,"title":{},"body":{"license.html":{}}}],["of(task).pipe",{"_index":355,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["on('error",{"_index":511,"title":{},"body":{"interfaces/NpmRegistryPackage.html":{}}}],["ondestroy",{"_index":225,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"components/DetectionResultComponent.html":{}}}],["onresize",{"_index":273,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["option",{"_index":160,"title":{},"body":{"classes/DetectTask.html":{},"injectables/FaceDetectorService.html":{}}}],["option.realtime",{"_index":188,"title":{},"body":{"classes/DetectTask.html":{}}}],["option.tokens",{"_index":186,"title":{},"body":{"classes/DetectTask.html":{}}}],["option.type",{"_index":184,"title":{},"body":{"classes/DetectTask.html":{}}}],["optional",{"_index":40,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":465,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options.facedetectionoptions",{"_index":481,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{}}}],["options.modelsurl",{"_index":480,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{}}}],["originx",{"_index":86,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["originy",{"_index":87,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["orverlaypositionstrategy",{"_index":29,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["otherwise",{"_index":725,"title":{},"body":{"license.html":{}}}],["out",{"_index":456,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{},"license.html":{},"overview.html":{}}}],["overlay",{"_index":33,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"index.html":{}}}],["overlayconfig",{"_index":61,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["overlaymodule",{"_index":475,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{}}}],["overlayref",{"_index":106,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["overlayref.attach(portal",{"_index":111,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["overlayx",{"_index":82,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["overlayy",{"_index":84,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["overview",{"_index":731,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":550,"title":{"dependencies.html":{}},"body":{}}],["package.json",{"_index":638,"title":{},"body":{"index.html":{}}}],["packagename",{"_index":490,"title":{},"body":{"interfaces/NpmRegistryPackage.html":{},"miscellaneous/functions.html":{}}}],["parameters",{"_index":37,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":100,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["particular",{"_index":711,"title":{},"body":{"license.html":{}}}],["patten",{"_index":174,"title":{},"body":{"classes/DetectTask.html":{}}}],["patten.every(item",{"_index":191,"title":{},"body":{"classes/DetectTask.html":{}}}],["permission",{"_index":667,"title":{},"body":{"license.html":{}}}],["permit",{"_index":691,"title":{},"body":{"license.html":{}}}],["person",{"_index":672,"title":{},"body":{"license.html":{}}}],["persons",{"_index":692,"title":{},"body":{"license.html":{}}}],["pipe(map(([result",{"_index":279,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["portal",{"_index":109,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["portalmodule",{"_index":476,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{}}}],["portions",{"_index":701,"title":{},"body":{"license.html":{}}}],["position",{"_index":79,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"components/DetectionResultComponent.html":{}}}],["positionstrategy",{"_index":94,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["private",{"_index":23,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{}}}],["project",{"_index":516,"title":{},"body":{"interfaces/Schema.html":{},"index.html":{}}}],["projects",{"_index":598,"title":{},"body":{"index.html":{}}}],["projects/.../addbrowserignorepackagesetting.ts",{"_index":571,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../addcdkoverlayprebuiltcsstoappstyles.ts",{"_index":572,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../adddependencies.ts",{"_index":573,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../addngxfaceapijsmodule.ts",{"_index":574,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../facedetectionoptions.ts",{"_index":741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../featuretoken.ts",{"_index":736,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../index.ts",{"_index":577,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../installdependencies.ts",{"_index":576,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../modelsurl.ts",{"_index":742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../modeltoken.ts",{"_index":737,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../npmjs.ts",{"_index":575,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../tasktypetoken.ts",{"_index":738,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/ngx",{"_index":6,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{},"interfaces/NpmRegistryPackage.html":{},"interfaces/Schema.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":161,"title":{},"body":{"classes/DetectTask.html":{},"injectables/ModelLoaderService.html":{},"interfaces/NpmRegistryPackage.html":{},"miscellaneous/functions.html":{}}}],["promise(resolve",{"_index":493,"title":{},"body":{"interfaces/NpmRegistryPackage.html":{}}}],["promise.all",{"_index":432,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["properties",{"_index":15,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/ModelLoaderService.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{},"interfaces/NpmRegistryPackage.html":{},"interfaces/Schema.html":{}}}],["protected",{"_index":16,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["provide",{"_index":103,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{}}}],["provided",{"_index":702,"title":{},"body":{"license.html":{}}}],["provider",{"_index":466,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{}}}],["providers",{"_index":102,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{},"overview.html":{}}}],["providers.push",{"_index":482,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{}}}],["public",{"_index":19,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{}}}],["publish",{"_index":685,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":712,"title":{},"body":{"license.html":{}}}],["quickly",{"_index":612,"title":{},"body":{"index.html":{}}}],["rawdata",{"_index":496,"title":{},"body":{"interfaces/NpmRegistryPackage.html":{}}}],["readonly",{"_index":150,"title":{},"body":{"classes/DetectTask.html":{}}}],["realtime",{"_index":75,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{}}}],["recognition",{"_index":588,"title":{},"body":{"index.html":{}}}],["recognize",{"_index":600,"title":{},"body":{"index.html":{}}}],["reduce((a",{"_index":419,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["released",{"_index":657,"title":{},"body":{"index.html":{}}}],["render",{"_index":626,"title":{},"body":{"index.html":{}}}],["renderer",{"_index":241,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["renderer2",{"_index":242,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["reqired",{"_index":605,"title":{},"body":{"index.html":{}}}],["reqiredmodels",{"_index":440,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["res",{"_index":495,"title":{},"body":{"interfaces/NpmRegistryPackage.html":{}}}],["res.on('data",{"_index":497,"title":{},"body":{"interfaces/NpmRegistryPackage.html":{}}}],["res.on('end",{"_index":499,"title":{},"body":{"interfaces/NpmRegistryPackage.html":{}}}],["reset",{"_index":455,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{},"overview.html":{}}}],["resize",{"_index":232,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["resizeresults",{"_index":303,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["resizeresults.foreach(result",{"_index":313,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["resizeresults.map",{"_index":308,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["resolve(buildpackage(packagename",{"_index":510,"title":{},"body":{"interfaces/NpmRegistryPackage.html":{}}}],["resolve(buildpackage(response.name",{"_index":507,"title":{},"body":{"interfaces/NpmRegistryPackage.html":{}}}],["resolver",{"_index":190,"title":{},"body":{"classes/DetectTask.html":{}}}],["resolvetarget",{"_index":156,"title":{},"body":{"classes/DetectTask.html":{}}}],["response",{"_index":501,"title":{},"body":{"interfaces/NpmRegistryPackage.html":{}}}],["response['dist",{"_index":504,"title":{},"body":{"interfaces/NpmRegistryPackage.html":{}}}],["restriction",{"_index":679,"title":{},"body":{"license.html":{}}}],["result",{"_index":112,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{},"interfaces/NpmRegistryPackage.html":{},"interfaces/Schema.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.component",{"_index":69,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["result.component.html",{"_index":230,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["result.component.scss",{"_index":228,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["result.component.ts",{"_index":224,"title":{},"body":{"components/DetectionResultComponent.html":{},"coverage.html":{}}}],["result.component.ts:22",{"_index":258,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["result.component.ts:25",{"_index":255,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["result.component.ts:27",{"_index":260,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["result.component.ts:31",{"_index":257,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["result.component.ts:34",{"_index":246,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["result.component.ts:36",{"_index":245,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["result.component.ts:45",{"_index":248,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["result.component.ts:52",{"_index":252,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["result.component.ts:63",{"_index":251,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["result.component.ts:66",{"_index":250,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["result.detection",{"_index":294,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["result.detection.box.bottomleft",{"_index":323,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["result/detection",{"_index":68,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"components/DetectionResultComponent.html":{},"coverage.html":{}}}],["results",{"_index":114,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{},"interfaces/NpmRegistryPackage.html":{},"interfaces/Schema.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results.map(result",{"_index":292,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["return",{"_index":77,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{},"interfaces/NpmRegistryPackage.html":{}}}],["returns",{"_index":52,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":682,"title":{},"body":{"license.html":{}}}],["rule",{"_index":578,"title":{},"body":{"miscellaneous/functions.html":{}}}],["run",{"_index":210,"title":{},"body":{"classes/DetectTask.html":{}}}],["rxjs",{"_index":264,"title":{},"body":{"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":267,"title":{},"body":{"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{}}}],["schema",{"_index":513,"title":{"interfaces/Schema.html":{}},"body":{"interfaces/Schema.html":{},"coverage.html":{}}}],["schematics",{"_index":610,"title":{},"body":{"index.html":{}}}],["script/styles",{"_index":604,"title":{},"body":{"index.html":{}}}],["scrollstrategy",{"_index":91,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["see",{"_index":646,"title":{},"body":{"index.html":{}}}],["selector",{"_index":122,"title":{},"body":{"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"components/DetectionResultComponent.html":{}}}],["sell",{"_index":689,"title":{},"body":{"license.html":{}}}],["services",{"_index":477,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{}}}],["services/face",{"_index":268,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["set",{"_index":613,"title":{},"body":{"index.html":{}}}],["shall",{"_index":698,"title":{},"body":{"license.html":{}}}],["sharereplay",{"_index":349,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["sharereplay(1",{"_index":364,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["single",{"_index":147,"title":{},"body":{"directives/DetectSingleFaceImgDirective.html":{},"miscellaneous/typealiases.html":{}}}],["singleface",{"_index":623,"title":{},"body":{"index.html":{}}}],["software",{"_index":656,"title":{},"body":{"index.html":{},"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{},"interfaces/NpmRegistryPackage.html":{},"interfaces/Schema.html":{}}}],["src/app/app.module.ts",{"_index":643,"title":{},"body":{"index.html":{}}}],["src/styles.css",{"_index":641,"title":{},"body":{"index.html":{}}}],["ssdmobilenetv1model",{"_index":403,"title":{},"body":{"injectables/ModelLoaderService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ssdmobilenetv1model].concat",{"_index":415,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["stackblitz(editor",{"_index":633,"title":{},"body":{"index.html":{}}}],["start",{"_index":83,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["started",{"_index":585,"title":{"index.html":{},"license.html":{}},"body":{}}],["startwith",{"_index":266,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["statements",{"_index":520,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":460,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{}}}],["stream",{"_index":18,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["string",{"_index":172,"title":{},"body":{"classes/DetectTask.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{},"interfaces/NpmRegistryPackage.html":{},"interfaces/Schema.html":{}}}],["styles",{"_index":220,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["styleurls",{"_index":226,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["subject",{"_index":256,"title":{},"body":{"components/DetectionResultComponent.html":{},"license.html":{}}}],["sublicense",{"_index":687,"title":{},"body":{"license.html":{}}}],["subscribe(result",{"_index":281,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["subscription",{"_index":233,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["substantial",{"_index":700,"title":{},"body":{"license.html":{}}}],["such",{"_index":622,"title":{},"body":{"index.html":{}}}],["super(el",{"_index":133,"title":{},"body":{"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["support",{"_index":611,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":729,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":425,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["switchmap",{"_index":348,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["switchmap(async",{"_index":356,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["switchmap(image",{"_index":365,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["switchmap(video",{"_index":358,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["t",{"_index":195,"title":{},"body":{"classes/DetectTask.html":{},"injectables/FaceDetectorService.html":{}}}],["t.run",{"_index":216,"title":{},"body":{"classes/DetectTask.html":{}}}],["t.target",{"_index":357,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["t.withfaceexpressions().run",{"_index":213,"title":{},"body":{"classes/DetectTask.html":{}}}],["t.withfacelandmarks().run",{"_index":215,"title":{},"body":{"classes/DetectTask.html":{}}}],["table",{"_index":549,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":548,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":609,"title":{},"body":{"index.html":{}}}],["tags",{"_index":505,"title":{},"body":{"interfaces/NpmRegistryPackage.html":{}}}],["tags'].latest",{"_index":506,"title":{},"body":{"interfaces/NpmRegistryPackage.html":{}}}],["target",{"_index":151,"title":{},"body":{"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{}}}],["target.includes(item",{"_index":192,"title":{},"body":{"classes/DetectTask.html":{}}}],["target.videoheight",{"_index":288,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["target.videowidth",{"_index":289,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["targetresolver",{"_index":152,"title":{},"body":{"classes/DetectTask.html":{}}}],["task",{"_index":20,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{}}}],["task.detect(this.option",{"_index":363,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["task.realtime",{"_index":354,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["tasktypetoken",{"_index":45,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"miscellaneous/typealiases.html":{}}}],["template",{"_index":219,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["templateurl",{"_index":229,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["tensorflow.js",{"_index":630,"title":{},"body":{"index.html":{}}}],["text",{"_index":317,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["text.draw(this.canvas",{"_index":324,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["this.canvas",{"_index":307,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["this.canvas.height",{"_index":296,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["this.canvas.width",{"_index":295,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["this.canvasel.nativeelement",{"_index":271,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["this.convertresulttoarray(result",{"_index":280,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["this.createinjector",{"_index":108,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["this.createoverlay",{"_index":107,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["this.createprovidersfromoptions(options",{"_index":483,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{}}}],["this.draw(result",{"_index":282,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["this.facedetector.detect(this.task",{"_index":277,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["this.getreqiredmodels(tokens",{"_index":441,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["this.injector",{"_index":101,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["this.isloaded(m",{"_index":431,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["this.ismatchpattern",{"_index":200,"title":{},"body":{"classes/DetectTask.html":{}}}],["this.ismatchpattern(['expressions",{"_index":212,"title":{},"body":{"classes/DetectTask.html":{}}}],["this.ismatchpattern(['landmarks",{"_index":214,"title":{},"body":{"classes/DetectTask.html":{}}}],["this.load(...reqiredmodels",{"_index":443,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["this.loadedmodels",{"_index":438,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["this.loadedmodels.includes(model",{"_index":427,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["this.maploadfunction(m",{"_index":434,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["this.modelloader.loadforfeature(task.tokens",{"_index":361,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["this.orverlaypositionstrategy",{"_index":95,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["this.overlay",{"_index":78,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["this.overlay.create(config",{"_index":98,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["this.overlay.scrollstrategies.reposition",{"_index":92,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["this.realtime",{"_index":187,"title":{},"body":{"classes/DetectTask.html":{}}}],["this.renderer.setstyle(this.canvas",{"_index":297,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["this.resize$.next('onresize",{"_index":274,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["this.resize$.pipe(startwith('init",{"_index":278,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["this.stream",{"_index":76,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["this.subscription.add",{"_index":276,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["this.subscription.unsubscribe",{"_index":283,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["this.target",{"_index":189,"title":{},"body":{"classes/DetectTask.html":{}}}],["this.targetresolver",{"_index":183,"title":{},"body":{"classes/DetectTask.html":{}}}],["this.task",{"_index":71,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["this.task.resolvetarget(this.el.nativeelement",{"_index":105,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["this.task.target",{"_index":285,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["this.task.tokens.includes('ageandgender",{"_index":312,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["this.task.tokens.includes('expressions",{"_index":305,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["this.task.tokens.includes('landmarks",{"_index":310,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["this.task.tokens.length",{"_index":300,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["this.tokens",{"_index":185,"title":{},"body":{"classes/DetectTask.html":{}}}],["this.tokens.push(...tokens",{"_index":194,"title":{},"body":{"classes/DetectTask.html":{}}}],["this.type",{"_index":73,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{}}}],["this.with",{"_index":74,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["tinyfacedetectormodel",{"_index":413,"title":{},"body":{"injectables/ModelLoaderService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tokens",{"_index":65,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{}}}],["tokens.includes(key",{"_index":418,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["top",{"_index":85,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["tort",{"_index":724,"title":{},"body":{"license.html":{}}}],["tree",{"_index":222,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["true",{"_index":138,"title":{},"body":{"directives/DetectAllFacesVideoDirective.html":{},"injectables/FaceDetectorService.html":{}}}],["try",{"_index":500,"title":{},"body":{"interfaces/NpmRegistryPackage.html":{}}}],["tslib",{"_index":565,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":390,"title":{},"body":{"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{}}}],["type",{"_index":21,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{},"interfaces/NpmRegistryPackage.html":{},"interfaces/Schema.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":734,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["undefined",{"_index":110,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"classes/DetectTask.html":{}}}],["under",{"_index":658,"title":{},"body":{"index.html":{}}}],["unnamed",{"_index":523,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["up",{"_index":614,"title":{},"body":{"index.html":{}}}],["update",{"_index":617,"title":{},"body":{"index.html":{}}}],["url",{"_index":747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usage",{"_index":634,"title":{},"body":{"index.html":{}}}],["use",{"_index":597,"title":{},"body":{"index.html":{},"license.html":{}}}],["usevalue",{"_index":104,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/NgxFaceApiJsModuleOption.html":{}}}],["using",{"_index":599,"title":{},"body":{"index.html":{}}}],["value",{"_index":49,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"components/DetectionResultComponent.html":{},"injectables/ModelLoaderService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":329,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["variable",{"_index":544,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":740,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":487,"title":{},"body":{"interfaces/NpmRegistryPackage.html":{}}}],["video.directive.ts",{"_index":135,"title":{},"body":{"directives/DetectAllFacesVideoDirective.html":{},"coverage.html":{}}}],["video.directive.ts:11",{"_index":137,"title":{},"body":{"directives/DetectAllFacesVideoDirective.html":{}}}],["video.directive.ts:19",{"_index":140,"title":{},"body":{"directives/DetectAllFacesVideoDirective.html":{}}}],["video.directive.ts:20",{"_index":139,"title":{},"body":{"directives/DetectAllFacesVideoDirective.html":{}}}],["video[allfaces",{"_index":136,"title":{},"body":{"directives/DetectAllFacesVideoDirective.html":{}}}],["video[allfaces]'},{'name",{"_index":332,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["viewchild",{"_index":261,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["viewchild('canvas",{"_index":254,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["void",{"_index":55,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{}}}],["warranties",{"_index":708,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":703,"title":{},"body":{"license.html":{}}}],["whether",{"_index":721,"title":{},"body":{"license.html":{}}}],["width",{"_index":286,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["width}px",{"_index":298,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["wiki",{"_index":647,"title":{},"body":{"index.html":{}}}],["window:resize",{"_index":238,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["with(...tokens",{"_index":193,"title":{},"body":{"classes/DetectTask.html":{}}}],["with(tokens",{"_index":175,"title":{},"body":{"classes/DetectTask.html":{}}}],["withageandgender",{"_index":208,"title":{},"body":{"classes/DetectTask.html":{}}}],["withfacedescriptor",{"_index":209,"title":{},"body":{"classes/DetectTask.html":{}}}],["withfacedescriptors",{"_index":211,"title":{},"body":{"classes/DetectTask.html":{}}}],["withfaceexpressions",{"_index":207,"title":{},"body":{"classes/DetectTask.html":{}}}],["withfacelandmarks",{"_index":206,"title":{},"body":{"classes/DetectTask.html":{}}}],["withflexibledimensions(false",{"_index":88,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["withlockedposition(true",{"_index":89,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["without",{"_index":678,"title":{},"body":{"license.html":{}}}],["withpositions",{"_index":81,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["works",{"_index":602,"title":{},"body":{"index.html":{}}}],["wrapper",{"_index":589,"title":{},"body":{"index.html":{}}}],["yamazaki",{"_index":662,"title":{},"body":{"index.html":{},"license.html":{}}}],["years",{"_index":321,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["yes",{"_index":170,"title":{},"body":{"classes/DetectTask.html":{},"injectables/FaceDetectorService.html":{}}}],["yuki",{"_index":666,"title":{},"body":{"license.html":{}}}],["zone.js",{"_index":567,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":454,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractDetectDirective.html":{"url":"classes/AbstractDetectDirective.html","title":"class - AbstractDetectDirective","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractDetectDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-face-api-js/src/lib/directives/abbstract-detect.directive.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            OnInit\n                            AfterViewInit\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                stream\n                            \n                            \n                                    Public\n                                task\n                            \n                            \n                                    Protected\n                                    Abstract\n                                type\n                            \n                            \n                                    Protected\n                                    Abstract\n                                with\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createInjector\n                            \n                            \n                                    Private\n                                createOverlay\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    orverlayPositionStrategy\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, overlay: Overlay, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-face-api-js/src/lib/directives/abbstract-detect.directive.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        overlay\n                                                  \n                                                        \n                                                                    Overlay\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                            stream\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-face-api-js/src/lib/directives/abbstract-detect.directive.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            task\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DetectTask\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-face-api-js/src/lib/directives/abbstract-detect.directive.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TaskTypeToken\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-face-api-js/src/lib/directives/abbstract-detect.directive.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                            with\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FeatureToken[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-face-api-js/src/lib/directives/abbstract-detect.directive.ts:9\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createInjector\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInjector()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-face-api-js/src/lib/directives/abbstract-detect.directive.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Injector\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createOverlay\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createOverlay()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-face-api-js/src/lib/directives/abbstract-detect.directive.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-face-api-js/src/lib/directives/abbstract-detect.directive.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-face-api-js/src/lib/directives/abbstract-detect.directive.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        orverlayPositionStrategy\n                    \n                \n\n                \n                    \n                        getorverlayPositionStrategy()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-face-api-js/src/lib/directives/abbstract-detect.directive.ts:26\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ElementRef, Injector, OnInit, AfterViewInit } from '@angular/core';\nimport { Overlay, OverlayConfig } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { FeatureToken, TaskTypeToken } from '../tokens';\nimport { DetectTask } from '../classes';\nimport { DetectionResultComponent } from '../components/detection-result/detection-result.component';\n\nexport abstract class AbstractDetectDirective implements OnInit, AfterViewInit {\n  protected abstract with: FeatureToken[] = [];\n  protected abstract type: TaskTypeToken;\n  protected abstract stream: boolean;\n  constructor(\n    protected el: ElementRef,\n    protected overlay: Overlay,\n    protected injector: Injector,\n  ) {}\n  public task: DetectTask;\n  ngOnInit() {\n    this.task = new DetectTask({\n      type: this.type,\n      tokens: this.with,\n      realtime: this.stream,\n    });\n  }\n\n  private get orverlayPositionStrategy() {\n    return this.overlay\n      .position()\n      .flexibleConnectedTo(this.el)\n      .withPositions([\n        {\n          overlayX: 'start',\n          overlayY: 'top',\n          originX: 'start',\n          originY: 'top',\n        },\n      ])\n      .withFlexibleDimensions(false)\n      .withLockedPosition(true);\n  }\n\n  private createOverlay() {\n    const scrollStrategy = this.overlay.scrollStrategies.reposition();\n    const config = new OverlayConfig({\n      positionStrategy: this.orverlayPositionStrategy,\n      scrollStrategy,\n      hasBackdrop: false,\n    });\n    return this.overlay.create(config);\n  }\n\n  private createInjector(): Injector {\n    return Injector.create({\n      parent: this.injector,\n      providers: [\n        {\n          provide: DetectTask,\n          useValue: this.task,\n        },\n      ],\n    });\n  }\n\n  ngAfterViewInit() {\n    this.task.resolveTarget(this.el.nativeElement);\n    const overlayRef = this.createOverlay();\n    const injector = this.createInjector();\n    const portal = new ComponentPortal(\n      DetectionResultComponent,\n      undefined,\n      injector,\n    );\n    overlayRef.attach(portal);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DetectAllFacesImgDirective.html":{"url":"directives/DetectAllFacesImgDirective.html","title":"directive - DetectAllFacesImgDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DetectAllFacesImgDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-face-api-js/src/lib/directives/detect-all-faces-img.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        img[allFaces]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                stream\n                            \n                            \n                                    Protected\n                                type\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                with\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, overlay: Overlay, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-face-api-js/src/lib/directives/detect-all-faces-img.directive.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        overlay\n                                                  \n                                                        \n                                                                    Overlay\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        with\n                    \n                \n                \n                    \n                        Type :         FeatureToken[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-face-api-js/src/lib/directives/detect-all-faces-img.directive.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            stream\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-face-api-js/src/lib/directives/detect-all-faces-img.directive.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TaskTypeToken\n\n                        \n                    \n                    \n                        \n                            Default value : 'all'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-face-api-js/src/lib/directives/detect-all-faces-img.directive.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input, ElementRef, Injector } from '@angular/core';\nimport { Overlay } from '@angular/cdk/overlay';\nimport { FeatureToken, TaskTypeToken } from '../tokens';\nimport { AbstractDetectDirective } from './abbstract-detect.directive';\n@Directive({\n  selector: 'img[allFaces]',\n  exportAs: 'faces',\n})\nexport class DetectAllFacesImgDirective extends AbstractDetectDirective {\n  @Input()\n  public with: FeatureToken[] = [];\n  constructor(\n    el: ElementRef,\n    overlay: Overlay,\n    injector: Injector,\n  ) {\n    super(el, overlay, injector);\n  }\n  protected type: TaskTypeToken = 'all';\n  protected stream = false;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DetectAllFacesVideoDirective.html":{"url":"directives/DetectAllFacesVideoDirective.html","title":"directive - DetectAllFacesVideoDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DetectAllFacesVideoDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-face-api-js/src/lib/directives/detect-all-faces-video.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        video[allFaces]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                stream\n                            \n                            \n                                    Protected\n                                type\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                with\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, overlay: Overlay, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-face-api-js/src/lib/directives/detect-all-faces-video.directive.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        overlay\n                                                  \n                                                        \n                                                                    Overlay\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        with\n                    \n                \n                \n                    \n                        Type :         FeatureToken[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-face-api-js/src/lib/directives/detect-all-faces-video.directive.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            stream\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-face-api-js/src/lib/directives/detect-all-faces-video.directive.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TaskTypeToken\n\n                        \n                    \n                    \n                        \n                            Default value : 'all'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-face-api-js/src/lib/directives/detect-all-faces-video.directive.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input, ElementRef, Injector } from '@angular/core';\nimport { Overlay } from '@angular/cdk/overlay';\nimport { FeatureToken, TaskTypeToken } from '../tokens';\nimport { AbstractDetectDirective } from './abbstract-detect.directive';\n@Directive({\n  selector: 'video[allFaces]',\n  exportAs: 'faces',\n})\nexport class DetectAllFacesVideoDirective extends AbstractDetectDirective {\n  @Input()\n  public with: FeatureToken[] = [];\n  constructor(\n    el: ElementRef,\n    overlay: Overlay,\n    injector: Injector,\n  ) {\n    super(el, overlay, injector);\n  }\n  protected type: TaskTypeToken = 'all';\n  protected stream = true;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DetectSingleFaceImgDirective.html":{"url":"directives/DetectSingleFaceImgDirective.html","title":"directive - DetectSingleFaceImgDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DetectSingleFaceImgDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-face-api-js/src/lib/directives/detect-dingle-face-img.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        img[singleFace]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                stream\n                            \n                            \n                                    Protected\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                with\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, overlay: Overlay, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-face-api-js/src/lib/directives/detect-dingle-face-img.directive.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        overlay\n                                                  \n                                                        \n                                                                    Overlay\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        with\n                    \n                \n                \n                    \n                        Type :         FeatureToken[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-face-api-js/src/lib/directives/detect-dingle-face-img.directive.ts:13\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-face-api-js/src/lib/directives/detect-dingle-face-img.directive.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            stream\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-face-api-js/src/lib/directives/detect-dingle-face-img.directive.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TaskTypeToken\n\n                        \n                    \n                    \n                        \n                            Default value : 'single'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-face-api-js/src/lib/directives/detect-dingle-face-img.directive.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input, ElementRef, Injector, OnInit } from '@angular/core';\nimport { Overlay } from '@angular/cdk/overlay';\nimport { FeatureToken, TaskTypeToken } from '../tokens';\nimport { DetectTask } from '../classes';\nimport { AbstractDetectDirective } from './abbstract-detect.directive';\n@Directive({\n  selector: 'img[singleFace]',\n  exportAs: 'face',\n})\nexport class DetectSingleFaceImgDirective extends AbstractDetectDirective\n  implements OnInit {\n  @Input()\n  public with: FeatureToken[] = [];\n  constructor(\n    el: ElementRef,\n    overlay: Overlay,\n    injector: Injector,\n  ) {\n    super(el, overlay, injector);\n  }\n  protected type: TaskTypeToken = 'single';\n  protected stream = false;\n  ngOnInit() {\n    this.task = new DetectTask({\n      type: this.type,\n      tokens: this.with,\n      realtime: this.stream,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DetectTask.html":{"url":"classes/DetectTask.html","title":"class - DetectTask","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DetectTask\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-face-api-js/src/lib/classes/DetectTask.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                realtime\n                            \n                            \n                                    Public\n                                target\n                            \n                            \n                                    Private\n                                targetResolver\n                            \n                            \n                                    Public\n                                    Readonly\n                                tokens\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                detect\n                            \n                            \n                                    Private\n                                isMatchPattern\n                            \n                            \n                                    Public\n                                with\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    resolveTarget\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(option: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-face-api-js/src/lib/classes/DetectTask.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        option\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            realtime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-face-api-js/src/lib/classes/DetectTask.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-face-api-js/src/lib/classes/DetectTask.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            targetResolver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-face-api-js/src/lib/classes/DetectTask.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            tokens\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FeatureToken[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-face-api-js/src/lib/classes/DetectTask.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TaskTypeToken\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-face-api-js/src/lib/classes/DetectTask.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            detect\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    detect(option?: faceapi.FaceDetectionOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-face-api-js/src/lib/classes/DetectTask.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    option\n                                    \n                                                faceapi.FaceDetectionOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isMatchPattern\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isMatchPattern(patten: string[], target: string[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-face-api-js/src/lib/classes/DetectTask.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patten\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    target\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            with\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    with(tokens: FeatureToken[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-face-api-js/src/lib/classes/DetectTask.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tokens\n                                    \n                                                FeatureToken[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        resolveTarget\n                    \n                \n\n                \n                    \n                        getresolveTarget()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-face-api-js/src/lib/classes/DetectTask.ts:5\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import * as faceapi from 'face-api.js';\nimport { TaskTypeToken, FeatureToken } from '../tokens';\n\nexport class DetectTask {\n  public get resolveTarget(): (\n    el: HTMLImageElement | HTMLVideoElement,\n  ) => void {\n    return this.targetResolver;\n  }\n\n  public readonly type: TaskTypeToken;\n  public readonly tokens: FeatureToken[];\n  public readonly realtime: boolean;\n\n  constructor(option: {\n    type: TaskTypeToken;\n    tokens: FeatureToken[];\n    realtime?: boolean;\n  }) {\n    this.type = option.type;\n    this.tokens = option.tokens;\n    this.realtime = option.realtime || false;\n    this.target = new Promise(\n      resolver => (this.targetResolver = resolver),\n    );\n  }\n\n  public target: Promise;\n\n  private targetResolver: (el: HTMLImageElement | HTMLVideoElement) => void;\n\n  private isMatchPattern(patten: string[], target: string[]): boolean {\n    return patten.every(item => target.includes(item));\n  }\n\n  public with(...tokens: FeatureToken[]): this {\n    this.tokens.push(...tokens);\n    return this;\n  }\n\n  public async detect(option?: faceapi.FaceDetectionOptions): Promise {\n    let t: faceapi.DetectAllFacesTask | faceapi.DetectSingleFaceTask;\n    if (this.type === 'all') {\n      t = faceapi.detectAllFaces(await this.target, option || undefined);\n    } else {\n      t = faceapi.detectSingleFace(await this.target, option || undefined);\n    }\n\n    if (\n      this.isMatchPattern(\n        ['expressions', 'landmarks', 'ageAndGender', 'descriptors'],\n        this.tokens,\n      )\n    ) {\n      if (t instanceof faceapi.DetectSingleFaceTask) {\n        return t\n          .withFaceLandmarks()\n          .withFaceExpressions()\n          .withAgeAndGender()\n          .withFaceDescriptor()\n          .run();\n      } else if (t instanceof faceapi.DetectAllFacesTask) {\n        return t\n          .withFaceLandmarks()\n          .withFaceExpressions()\n          .withAgeAndGender()\n          .withFaceDescriptors()\n          .run();\n      }\n    } else if (\n      this.isMatchPattern(\n        ['expressions', 'landmarks', 'descriptors'],\n        this.tokens,\n      )\n    ) {\n      if (t instanceof faceapi.DetectSingleFaceTask) {\n        return t\n          .withFaceLandmarks()\n          .withFaceExpressions()\n          .withFaceDescriptor()\n          .run();\n      } else if (t instanceof faceapi.DetectAllFacesTask) {\n        return t\n          .withFaceLandmarks()\n          .withFaceExpressions()\n          .withFaceDescriptors()\n          .run();\n      }\n    } else if (\n      this.isMatchPattern(\n        ['expressions', 'landmarks', 'ageAndGender'],\n        this.tokens,\n      )\n    ) {\n      return t\n        .withFaceLandmarks()\n        .withFaceExpressions()\n        .withAgeAndGender()\n        .run();\n    } else if (this.isMatchPattern(['expressions', 'landmarks'], this.tokens)) {\n      return t\n        .withFaceLandmarks()\n        .withFaceExpressions()\n        .run();\n    } else if (\n      this.isMatchPattern(['expressions', 'ageAndGender'], this.tokens)\n    ) {\n      return t\n        .withFaceExpressions()\n        .withAgeAndGender()\n        .run();\n    } else if (this.isMatchPattern(['expressions'], this.tokens)) {\n      return t.withFaceExpressions().run();\n    } else if (\n      this.isMatchPattern(['landmarks', 'ageAndGender'], this.tokens)\n    ) {\n      return t\n        .withFaceLandmarks()\n        .withAgeAndGender()\n        .run();\n    } else if (this.isMatchPattern(['landmarks'], this.tokens)) {\n      return t.withFaceLandmarks().run();\n    }\n    return t.run();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetectionResultComponent.html":{"url":"components/DetectionResultComponent.html","title":"component - DetectionResultComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DetectionResultComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-face-api-js/src/lib/components/detection-result/detection-result.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./detection-result.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./detection-result.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                canvasEl\n                            \n                            \n                                    Private\n                                resize$\n                            \n                            \n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                convertResultToArray\n                            \n                            \n                                    Private\n                                    Async\n                                draw\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    canvas\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(task: DetectTask, el: ElementRef, renderer: Renderer2, faceDetector: FaceDetectorService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-face-api-js/src/lib/components/detection-result/detection-result.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        task\n                                                  \n                                                        \n                                                                        DetectTask\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        faceDetector\n                                                  \n                                                        \n                                                                        FaceDetectorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-face-api-js/src/lib/components/detection-result/detection-result.component.ts:34\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            convertResultToArray\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertResultToArray(result: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-face-api-js/src/lib/components/detection-result/detection-result.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    result\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            draw\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    draw(results: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-face-api-js/src/lib/components/detection-result/detection-result.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    results\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-face-api-js/src/lib/components/detection-result/detection-result.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-face-api-js/src/lib/components/detection-result/detection-result.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            canvasEl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('canvas')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-face-api-js/src/lib/components/detection-result/detection-result.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            resize$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-face-api-js/src/lib/components/detection-result/detection-result.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subscription()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-face-api-js/src/lib/components/detection-result/detection-result.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        canvas\n                    \n                \n\n                \n                    \n                        getcanvas()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-face-api-js/src/lib/components/detection-result/detection-result.component.ts:27\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  Renderer2,\n  OnDestroy,\n  HostListener,\n} from '@angular/core';\nimport { Subscription, Subject, combineLatest } from 'rxjs';\n\nimport * as faceapi from 'face-api.js';\nimport { map, startWith } from 'rxjs/operators';\nimport { DetectTask } from '../../classes';\nimport { FaceDetectorService } from '../../services/face-detector.service';\n\n@Component({\n  templateUrl: './detection-result.component.html',\n  styleUrls: ['./detection-result.component.scss'],\n})\nexport class DetectionResultComponent implements OnInit, OnDestroy {\n  subscription = new Subscription();\n\n  @ViewChild('canvas')\n  private canvasEl: ElementRef;\n\n  private get canvas(): HTMLCanvasElement {\n    return this.canvasEl.nativeElement;\n  }\n\n  private resize$ = new Subject();\n\n  @HostListener('window:resize')\n  public onResize() {\n    this.resize$.next('onResize');\n  }\n\n  constructor(\n    private task: DetectTask,\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private faceDetector: FaceDetectorService,\n  ) {}\n\n  private convertResultToArray(result: any): any[] {\n    if (Array.isArray(result)) {\n      return result;\n    }\n    return [result];\n  }\n\n  ngOnInit() {\n    this.subscription.add(\n      combineLatest(\n        this.faceDetector.detect(this.task),\n        this.resize$.pipe(startWith('init')),\n      )\n        .pipe(map(([result]) => this.convertResultToArray(result)))\n        .subscribe(result => this.draw(result)),\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n  private async draw(results: any[]) {\n    const target = await this.task.target;\n    let { width, height } = target;\n    if (target instanceof HTMLVideoElement) {\n      height = target.videoHeight;\n      width = target.videoWidth;\n    }\n\n    const detectionsForSize = faceapi.resizeResults(\n      results.map(result =>\n        result instanceof faceapi.FaceDetection ? result : result.detection,\n      ),\n      { width, height },\n    );\n\n    this.canvas.width = width;\n    this.canvas.height = height;\n    this.renderer.setStyle(this.canvas, 'width', `${width}px`);\n    this.renderer.setStyle(this.canvas, 'height', `${height}px`);\n    if (this.task.tokens.length >= 1) {\n      faceapi.draw.drawDetections(this.canvas, detectionsForSize);\n\n      const resizeResults = faceapi.resizeResults(results, { width, height });\n      if (this.task.tokens.includes('expressions')) {\n        faceapi.draw.drawFaceExpressions(\n          this.canvas,\n          resizeResults.map(({ detection, expressions }) => ({\n            position: detection.box,\n            expressions,\n          })),\n        );\n      }\n\n      if (this.task.tokens.includes('landmarks')) {\n        faceapi.draw.drawFaceLandmarks(\n          this.canvas,\n          resizeResults.map(({ landmarks }) => landmarks),\n        );\n      }\n\n      if (this.task.tokens.includes('ageAndGender')) {\n        resizeResults.forEach(result => {\n          const { age, gender, genderProbability } = result;\n          const text = new faceapi.draw.DrawTextField(\n            [\n              `${faceapi.round(age, 0)} years`,\n              `${gender} (${faceapi.round(genderProbability)})`,\n            ],\n            result.detection.box.bottomLeft,\n          );\n          text.draw(this.canvas);\n        });\n      }\n    } else {\n      faceapi.draw.drawDetections(this.canvas, detectionsForSize);\n    }\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./detection-result.component.scss\n                \n                canvas {\n  width: 100%;\n  height: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'DetectionResultComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'DetectAllFacesImgDirective', 'selector': 'img[allFaces]'},{'name': 'DetectAllFacesVideoDirective', 'selector': 'video[allFaces]'},{'name': 'DetectSingleFaceImgDirective', 'selector': 'img[singleFace]'}];\n    var ACTUAL_COMPONENT = {'name': 'DetectionResultComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FaceDetectorService.html":{"url":"injectables/FaceDetectorService.html","title":"injectable - FaceDetectorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FaceDetectorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-face-api-js/src/lib/services/face-detector.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                detect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(modelLoader: ModelLoaderService, option?: faceapi.FaceDetectionOptions)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-face-api-js/src/lib/services/face-detector.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modelLoader\n                                                  \n                                                        \n                                                                        ModelLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        option\n                                                  \n                                                        \n                                                                        faceapi.FaceDetectionOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            detect\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    detect(task: DetectTask)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-face-api-js/src/lib/services/face-detector.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                DetectTask\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Optional, Inject } from '@angular/core';\nimport * as faceapi from 'face-api.js';\nimport { Observable, of, fromEvent, interval } from 'rxjs';\nimport { switchMap, shareReplay } from 'rxjs/operators';\n\nimport { ModelLoaderService } from './model-loader.service';\nimport { DetectTask } from '../classes';\nimport { FaceDetectionOptions } from '../tokens';\n\n@Injectable()\nexport class FaceDetectorService {\n  constructor(\n    private modelLoader: ModelLoaderService,\n    @Optional()\n    @Inject(FaceDetectionOptions)\n    private option?: faceapi.FaceDetectionOptions,\n  ) {}\n\n  public detect(task: DetectTask): Observable {\n    if (task.realtime === true) {\n      return of(task).pipe(\n        switchMap(async t => await t.target),\n        switchMap(video => fromEvent(video, 'loadeddata')),\n        switchMap(() => this.modelLoader.loadForFeature(task.tokens)),\n        switchMap(() => interval(300)),\n        switchMap(() => task.detect(this.option)),\n        shareReplay(1),\n      );\n    }\n    return of(task).pipe(\n      switchMap(async t => await t.target),\n      switchMap(image => fromEvent(image, 'load')),\n      switchMap(async () => await this.modelLoader.loadForFeature(task.tokens)),\n      switchMap(() => task.detect(this.option)),\n      shareReplay(1),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModelLoaderService.html":{"url":"injectables/ModelLoaderService.html","title":"injectable - ModelLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ModelLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-face-api-js/src/lib/services/model-loader.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadedModels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getReqiredModels\n                            \n                            \n                                    Public\n                                isLoaded\n                            \n                            \n                                    Async\n                                load\n                            \n                            \n                                    Async\n                                loadForFeature\n                            \n                            \n                                    Private\n                                mapLoadFunction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(modelUrl: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-face-api-js/src/lib/services/model-loader.service.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modelUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getReqiredModels\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getReqiredModels(tokens: FeatureToken[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-face-api-js/src/lib/services/model-loader.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tokens\n                                    \n                                                FeatureToken[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModelToken[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isLoaded\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isLoaded(model: ModelToken)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-face-api-js/src/lib/services/model-loader.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                                ModelToken\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            load\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    load(models: ModelToken[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-face-api-js/src/lib/services/model-loader.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    models\n                                    \n                                                ModelToken[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loadForFeature\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadForFeature(tokens: FeatureToken[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-face-api-js/src/lib/services/model-loader.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tokens\n                                    \n                                                FeatureToken[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            mapLoadFunction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapLoadFunction(model: ModelToken)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-face-api-js/src/lib/services/model-loader.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                                ModelToken\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadedModels\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModelToken[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-face-api-js/src/lib/services/model-loader.service.ts:32\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\n// tslint:disable-next-line:max-line-length\nimport {\n  loadMtcnnModel,\n  loadSsdMobilenetv1Model,\n  loadFaceExpressionModel,\n  loadFaceLandmarkModel,\n  loadTinyFaceDetectorModel,\n  loadFaceRecognitionModel,\n  loadAgeGenderModel,\n} from 'face-api.js';\n// tslint:disable-next-line:max-line-length\nimport {\n  ModelToken,\n  ModelsUrl,\n  FeatureToken,\n  SsdMobilenetv1Model,\n  FaceExpressionModel,\n  FaceLandmarkModel,\n  FaceRecognitionModel,\n  ExpressionsFeatureToken,\n  LandmarksFeatureToken,\n  DescriptorsFeatureToken,\n  AgeAndGenderToken,\n  AgeAndGenderModel,\n  MtcnnModel,\n  TinyFaceDetectorModel,\n} from '../tokens';\n\n@Injectable()\nexport class ModelLoaderService {\n  private loadedModels: ModelToken[] = [];\n\n  constructor(\n    @Inject(ModelsUrl)\n    private modelUrl: string,\n  ) {}\n\n  private getReqiredModels(tokens: FeatureToken[]): ModelToken[] {\n    return [SsdMobilenetv1Model].concat(\n      Object.entries({\n        [ExpressionsFeatureToken]: [FaceExpressionModel, SsdMobilenetv1Model],\n        [LandmarksFeatureToken]: [FaceLandmarkModel, SsdMobilenetv1Model],\n        [DescriptorsFeatureToken]: [FaceRecognitionModel],\n        [AgeAndGenderToken]: [AgeAndGenderModel],\n      })\n        .map(([key, models]) =>\n          tokens.includes(key as FeatureToken) ? models : [],\n        )\n        .reduce((a, b) => a.concat(b))\n        .filter((v, i, arr) => arr.indexOf(v) === i),\n    );\n  }\n\n  private mapLoadFunction(model: ModelToken) {\n    switch (model) {\n      case SsdMobilenetv1Model:\n        return loadSsdMobilenetv1Model;\n      case MtcnnModel:\n        return loadMtcnnModel;\n      case FaceExpressionModel:\n        return loadFaceExpressionModel;\n      case FaceLandmarkModel:\n        return loadFaceLandmarkModel;\n      case FaceRecognitionModel:\n        return loadFaceRecognitionModel;\n      case TinyFaceDetectorModel:\n        return loadTinyFaceDetectorModel;\n      case AgeAndGenderModel:\n        return loadAgeGenderModel;\n    }\n  }\n\n  public isLoaded(model: ModelToken): boolean {\n    return this.loadedModels.includes(model);\n  }\n\n  async load(...models: ModelToken[]): Promise {\n    const loadTargetModels = models.filter(m => this.isLoaded(m) === false);\n\n    await Promise.all(\n      loadTargetModels\n        .map(m => this.mapLoadFunction(m))\n        .map(load => load(this.modelUrl)),\n    );\n\n    if (loadTargetModels.length >= 0) {\n      this.loadedModels = loadTargetModels.concat(this.loadedModels);\n    }\n  }\n\n  async loadForFeature(tokens: FeatureToken[]): Promise {\n    const reqiredModels = this.getReqiredModels(tokens);\n    console.log({ reqiredModels });\n    await this.load(...reqiredModels);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxFaceApiJsModule.html":{"url":"modules/NgxFaceApiJsModule.html","title":"module - NgxFaceApiJsModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxFaceApiJsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxFaceApiJsModule\n\n\n\ncluster_NgxFaceApiJsModule_declarations\n\n\n\ncluster_NgxFaceApiJsModule_exports\n\n\n\n\nDetectAllFacesImgDirective\n\nDetectAllFacesImgDirective\n\n\n\nNgxFaceApiJsModule\n\nNgxFaceApiJsModule\n\nNgxFaceApiJsModule -->\n\nDetectAllFacesImgDirective->NgxFaceApiJsModule\n\n\n\n\n\nDetectAllFacesVideoDirective\n\nDetectAllFacesVideoDirective\n\nNgxFaceApiJsModule -->\n\nDetectAllFacesVideoDirective->NgxFaceApiJsModule\n\n\n\n\n\nDetectSingleFaceImgDirective\n\nDetectSingleFaceImgDirective\n\nNgxFaceApiJsModule -->\n\nDetectSingleFaceImgDirective->NgxFaceApiJsModule\n\n\n\n\n\nDetectionResultComponent\n\nDetectionResultComponent\n\nNgxFaceApiJsModule -->\n\nDetectionResultComponent->NgxFaceApiJsModule\n\n\n\n\n\nDetectAllFacesImgDirective \n\nDetectAllFacesImgDirective \n\nDetectAllFacesImgDirective  -->\n\nNgxFaceApiJsModule->DetectAllFacesImgDirective \n\n\n\n\n\nDetectAllFacesVideoDirective \n\nDetectAllFacesVideoDirective \n\nDetectAllFacesVideoDirective  -->\n\nNgxFaceApiJsModule->DetectAllFacesVideoDirective \n\n\n\n\n\nDetectSingleFaceImgDirective \n\nDetectSingleFaceImgDirective \n\nDetectSingleFaceImgDirective  -->\n\nNgxFaceApiJsModule->DetectSingleFaceImgDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-face-api-js/src/lib/ngx-face-api-js.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DetectAllFacesImgDirective\n                        \n                        \n                            DetectAllFacesVideoDirective\n                        \n                        \n                            DetectSingleFaceImgDirective\n                        \n                        \n                            DetectionResultComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            DetectionResultComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DetectAllFacesImgDirective\n                        \n                        \n                            DetectAllFacesVideoDirective\n                        \n                        \n                            DetectSingleFaceImgDirective\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createProvidersFromOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createProvidersFromOptions(options: NgxFaceApiJsModuleOption)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-face-api-js/src/lib/ngx-face-api-js.module.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                NgxFaceApiJsModuleOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Provider[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: NgxFaceApiJsModuleOption)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-face-api-js/src/lib/ngx-face-api-js.module.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                NgxFaceApiJsModuleOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule, Provider } from '@angular/core';\nimport { ModuleWithProviders } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport * as faceapi from 'face-api.js';\nimport { ModelsUrl, FaceDetectionOptions } from './tokens';\nimport { ModelLoaderService, FaceDetectorService } from './services';\nimport { DetectionResultComponent } from './components';\n// tslint:disable-next-line:max-line-length\nimport {\n  DetectAllFacesImgDirective,\n  DetectSingleFaceImgDirective,\n  DetectAllFacesVideoDirective,\n} from './directives';\n\nexport interface NgxFaceApiJsModuleOption {\n  modelsUrl: string;\n  faceDetectionOptions?: faceapi.FaceDetectionOptions;\n}\n\n@NgModule({\n  declarations: [\n    DetectionResultComponent,\n    DetectAllFacesImgDirective,\n    DetectSingleFaceImgDirective,\n    DetectAllFacesVideoDirective,\n  ],\n  imports: [BrowserModule, OverlayModule, PortalModule],\n  exports: [\n    DetectAllFacesImgDirective,\n    DetectSingleFaceImgDirective,\n    DetectAllFacesVideoDirective,\n  ],\n  entryComponents: [DetectionResultComponent],\n})\nexport class NgxFaceApiJsModule {\n  static createProvidersFromOptions(\n    options: NgxFaceApiJsModuleOption,\n  ): Provider[] {\n    const providers: Provider[] = [\n      {\n        provide: ModelsUrl,\n        useValue: options.modelsUrl,\n      },\n      ModelLoaderService,\n      FaceDetectorService,\n    ];\n    if (options.faceDetectionOptions) {\n      providers.push({\n        provide: FaceDetectionOptions,\n        useValue: options.faceDetectionOptions,\n      });\n    }\n    return providers;\n  }\n\n  static forRoot(options: NgxFaceApiJsModuleOption): ModuleWithProviders {\n    const providers = this.createProvidersFromOptions(options);\n    return { ngModule: NgxFaceApiJsModule, providers };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxFaceApiJsModuleOption.html":{"url":"interfaces/NgxFaceApiJsModuleOption.html","title":"interface - NgxFaceApiJsModuleOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxFaceApiJsModuleOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-face-api-js/src/lib/ngx-face-api-js.module.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        faceDetectionOptions\n                                \n                                \n                                        modelsUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        faceDetectionOptions\n                                    \n                                \n                                \n                                    \n                                        faceDetectionOptions:         faceapi.FaceDetectionOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         faceapi.FaceDetectionOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modelsUrl\n                                    \n                                \n                                \n                                    \n                                        modelsUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NgModule, Provider } from '@angular/core';\nimport { ModuleWithProviders } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport * as faceapi from 'face-api.js';\nimport { ModelsUrl, FaceDetectionOptions } from './tokens';\nimport { ModelLoaderService, FaceDetectorService } from './services';\nimport { DetectionResultComponent } from './components';\n// tslint:disable-next-line:max-line-length\nimport {\n  DetectAllFacesImgDirective,\n  DetectSingleFaceImgDirective,\n  DetectAllFacesVideoDirective,\n} from './directives';\n\nexport interface NgxFaceApiJsModuleOption {\n  modelsUrl: string;\n  faceDetectionOptions?: faceapi.FaceDetectionOptions;\n}\n\n@NgModule({\n  declarations: [\n    DetectionResultComponent,\n    DetectAllFacesImgDirective,\n    DetectSingleFaceImgDirective,\n    DetectAllFacesVideoDirective,\n  ],\n  imports: [BrowserModule, OverlayModule, PortalModule],\n  exports: [\n    DetectAllFacesImgDirective,\n    DetectSingleFaceImgDirective,\n    DetectAllFacesVideoDirective,\n  ],\n  entryComponents: [DetectionResultComponent],\n})\nexport class NgxFaceApiJsModule {\n  static createProvidersFromOptions(\n    options: NgxFaceApiJsModuleOption,\n  ): Provider[] {\n    const providers: Provider[] = [\n      {\n        provide: ModelsUrl,\n        useValue: options.modelsUrl,\n      },\n      ModelLoaderService,\n      FaceDetectorService,\n    ];\n    if (options.faceDetectionOptions) {\n      providers.push({\n        provide: FaceDetectionOptions,\n        useValue: options.faceDetectionOptions,\n      });\n    }\n    return providers;\n  }\n\n  static forRoot(options: NgxFaceApiJsModuleOption): ModuleWithProviders {\n    const providers = this.createProvidersFromOptions(options);\n    return { ngModule: NgxFaceApiJsModule, providers };\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NpmRegistryPackage.html":{"url":"interfaces/NpmRegistryPackage.html","title":"interface - NpmRegistryPackage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NpmRegistryPackage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-face-api-js/schematics/util/npmjs.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        version\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { get } from 'http';\n\nexport interface NpmRegistryPackage {\n  name: string;\n  version: string;\n}\n\nexport function getLatestNodeVersion(\n  packageName: string,\n): Promise {\n  const DEFAULT_VERSION = 'latest';\n\n  return new Promise(resolve => {\n    return get(`http://registry.npmjs.org/${packageName}`, res => {\n      let rawData = '';\n      res.on('data', chunk => (rawData += chunk));\n      res.on('end', () => {\n        try {\n          const response = JSON.parse(rawData);\n          const latestVersion =\n            (response &&\n              response['dist-tags'] &&\n              response['dist-tags'].latest) ||\n            {};\n\n          resolve(buildPackage(response.name || packageName, latestVersion));\n        } catch (e) {\n          resolve(buildPackage(packageName));\n        }\n      });\n    }).on('error', () => resolve(buildPackage(packageName)));\n  });\n\n  function buildPackage(\n    name: string,\n    version: string = DEFAULT_VERSION,\n  ): NpmRegistryPackage {\n    return { name, version };\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Schema.html":{"url":"interfaces/Schema.html","title":"interface - Schema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Schema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-face-api-js/schematics/ng-add/Schema.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        project\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        project\n                                    \n                                \n                                \n                                    \n                                        project:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Schema {\n  project: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ngx-face-api-js/schematics/migrations/update-0-1-0/index.ts\n            \n            function\n            Unnamed function\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/schematics/ng-add/Schema.ts\n            \n            interface\n            Schema\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/schematics/ng-add/addBrowserIgnorePackageSetting.ts\n            \n            function\n            addBrowserIgnorePackageSetting\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/schematics/ng-add/addCdkOverlayPrebuiltCssToAppStyles.ts\n            \n            function\n            addCdkOverlayPrebuiltCssToAppStyles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/schematics/ng-add/addNgxFaceApiJsModule.ts\n            \n            function\n            addNgxFaceApiJsModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/schematics/ng-add/index.ts\n            \n            function\n            ngAdd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/schematics/util/addDependencies.ts\n            \n            function\n            addDependencies\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/schematics/util/installDependencies.ts\n            \n            function\n            installDependencies\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/schematics/util/npmjs.ts\n            \n            interface\n            NpmRegistryPackage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/schematics/util/npmjs.ts\n            \n            function\n            getLatestNodeVersion\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/src/lib/classes/DetectTask.ts\n            \n            class\n            DetectTask\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/src/lib/components/detection-result/detection-result.component.ts\n            \n            component\n            DetectionResultComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/src/lib/directives/abbstract-detect.directive.ts\n            \n            class\n            AbstractDetectDirective\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/src/lib/directives/detect-all-faces-img.directive.ts\n            \n            directive\n            DetectAllFacesImgDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/src/lib/directives/detect-all-faces-video.directive.ts\n            \n            directive\n            DetectAllFacesVideoDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/src/lib/directives/detect-dingle-face-img.directive.ts\n            \n            directive\n            DetectSingleFaceImgDirective\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/src/lib/ngx-face-api-js.module.ts\n            \n            interface\n            NgxFaceApiJsModuleOption\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/src/lib/services/face-detector.service.ts\n            \n            injectable\n            FaceDetectorService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/src/lib/services/model-loader.service.ts\n            \n            injectable\n            ModelLoaderService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/src/lib/tokens/FaceDetectionOptions.ts\n            \n            variable\n            FaceDetectionOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/src/lib/tokens/FeatureToken.ts\n            \n            variable\n            AgeAndGenderToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/src/lib/tokens/FeatureToken.ts\n            \n            variable\n            DescriptorsFeatureToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/src/lib/tokens/FeatureToken.ts\n            \n            variable\n            ExpressionsFeatureToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/src/lib/tokens/FeatureToken.ts\n            \n            variable\n            LandmarksFeatureToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/src/lib/tokens/ModelToken.ts\n            \n            variable\n            AgeAndGenderModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/src/lib/tokens/ModelToken.ts\n            \n            variable\n            FaceExpressionModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/src/lib/tokens/ModelToken.ts\n            \n            variable\n            FaceLandmarkModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/src/lib/tokens/ModelToken.ts\n            \n            variable\n            FaceRecognitionModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/src/lib/tokens/ModelToken.ts\n            \n            variable\n            MtcnnModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/src/lib/tokens/ModelToken.ts\n            \n            variable\n            SsdMobilenetv1Model\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/src/lib/tokens/ModelToken.ts\n            \n            variable\n            TinyFaceDetectorModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/src/lib/tokens/ModelsUrl.ts\n            \n            variable\n            ModelsUrl\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~7.2.0\n        \n            @angular/cdk : ^7.3.7\n        \n            @angular/common : ~7.2.0\n        \n            @angular/compiler : ~7.2.0\n        \n            @angular/core : ~7.2.0\n        \n            @angular/forms : ~7.2.0\n        \n            @angular/platform-browser : ~7.2.0\n        \n            @angular/platform-browser-dynamic : ~7.2.0\n        \n            @angular/router : ~7.2.0\n        \n            core-js : ^2.5.4\n        \n            face-api.js : ~0.20.0\n        \n            rxjs : ~6.3.3\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            addBrowserIgnorePackageSetting   (projects/.../addBrowserIgnorePackageSetting.ts)\n                        \n                        \n                            addCdkOverlayPrebuiltCssToAppStyles   (projects/.../addCdkOverlayPrebuiltCssToAppStyles.ts)\n                        \n                        \n                            addDependencies   (projects/.../addDependencies.ts)\n                        \n                        \n                            addNgxFaceApiJsModule   (projects/.../addNgxFaceApiJsModule.ts)\n                        \n                        \n                            getLatestNodeVersion   (projects/.../npmjs.ts)\n                        \n                        \n                            installDependencies   (projects/.../installDependencies.ts)\n                        \n                        \n                            ngAdd   (projects/.../index.ts)\n                        \n                        \n                            Unnamed function   (projects/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-face-api-js/schematics/ng-add/addBrowserIgnorePackageSetting.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            addBrowserIgnorePackageSetting\n                        \n                        \n                    \n                \n            \n            \n                \naddBrowserIgnorePackageSetting()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Rule\n\n                    \n                \n            \n        \n    \n    projects/ngx-face-api-js/schematics/ng-add/addCdkOverlayPrebuiltCssToAppStyles.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            addCdkOverlayPrebuiltCssToAppStyles\n                        \n                        \n                    \n                \n            \n            \n                \naddCdkOverlayPrebuiltCssToAppStyles(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Rule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ngx-face-api-js/schematics/util/addDependencies.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            addDependencies\n                        \n                        \n                    \n                \n            \n            \n                \naddDependencies(undefined)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Rule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ngx-face-api-js/schematics/ng-add/addNgxFaceApiJsModule.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            addNgxFaceApiJsModule\n                        \n                        \n                    \n                \n            \n            \n                \naddNgxFaceApiJsModule(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/ngx-face-api-js/schematics/util/npmjs.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getLatestNodeVersion\n                        \n                        \n                    \n                \n            \n            \n                \ngetLatestNodeVersion(packageName)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    packageName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ngx-face-api-js/schematics/util/installDependencies.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            installDependencies\n                        \n                        \n                    \n                \n            \n            \n                \ninstallDependencies()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Rule\n\n                    \n                \n            \n        \n    \n    projects/ngx-face-api-js/schematics/ng-add/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            ngAdd\n                        \n                        \n                    \n                \n            \n            \n                \nngAdd(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Rule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ngx-face-api-js/schematics/migrations/update-0-1-0/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Unnamed function\n                        \n                        \n                    \n                \n            \n            \n                \nUnnamed function()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Rule\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgxFaceApiJs\n        \nAngular directives for face detection and face recognition in the browser.\nIt is a wrapper for face-api.js, so it is not dependent on the browser implementation.\n\nDescription\nMake face and emotion recognition features easy to use in Angular projects by using face-api.js.\n\nRecognize faces, emotions and so on in Angular project.\nWorks in a Mobile.\nNo Script/Styles reqired, you only embed attribute to img/video tag.\nSchematics Support, you can quickly set up a project using the ng add and ng update command.\n\nHow it works?\nOverlay canvas on img tag with embedded attributes such as singleFace and allFaces by using Angular CDK Overlay.\n\nAnd render the recognition result on canvas according to the content of the with attribute.\nBackground\n\nface-api.js\nTensorFlow.js\n\nDemo\n\nDetect Faces by Image -- StackBlitz(Editor)\n\nUsage\nDetect All Faces\nhtml\n\n\nDetect Face With Expressions and Landmarks\nhtml\n\n\nInstallation\nBy ng-add Schematics\nbash\n$ ng add ngx-face-api-js\n...\nUPDATE package.json (1457 bytes)\nUPDATE src/styles.css (126 bytes)\nUPDATE src/app/app.module.ts (497 bytes)\nBy Manual\nSee Wiki.\nUpdate\nBy ng-update Schematics\nbash\n$ ng update ngx-face-api-js\n✅️ Added dependency: face-api.js@~0.20.0\n✅️ Dependencies installed\nUPDATE package.json (1440 bytes)\nDocumantation\n\ncompodoc\n\nLicense\nThis software is released under the MIT License, see LICENSE.\n\nAuthor\nkamiazya(Yuki Yamazaki)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT)\nCopyright (c) 2019 Yuki Yamazaki\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgxFaceApiJsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxFaceApiJsModule\n\n\n\ncluster_NgxFaceApiJsModule_declarations\n\n\n\ncluster_NgxFaceApiJsModule_exports\n\n\n\n\nDetectAllFacesImgDirective\n\nDetectAllFacesImgDirective\n\n\n\nNgxFaceApiJsModule\n\nNgxFaceApiJsModule\n\nNgxFaceApiJsModule -->\n\nDetectAllFacesImgDirective->NgxFaceApiJsModule\n\n\n\n\n\nDetectAllFacesVideoDirective\n\nDetectAllFacesVideoDirective\n\nNgxFaceApiJsModule -->\n\nDetectAllFacesVideoDirective->NgxFaceApiJsModule\n\n\n\n\n\nDetectSingleFaceImgDirective\n\nDetectSingleFaceImgDirective\n\nNgxFaceApiJsModule -->\n\nDetectSingleFaceImgDirective->NgxFaceApiJsModule\n\n\n\n\n\nDetectionResultComponent\n\nDetectionResultComponent\n\nNgxFaceApiJsModule -->\n\nDetectionResultComponent->NgxFaceApiJsModule\n\n\n\n\n\nDetectAllFacesImgDirective \n\nDetectAllFacesImgDirective \n\nDetectAllFacesImgDirective  -->\n\nNgxFaceApiJsModule->DetectAllFacesImgDirective \n\n\n\n\n\nDetectAllFacesVideoDirective \n\nDetectAllFacesVideoDirective \n\nDetectAllFacesVideoDirective  -->\n\nNgxFaceApiJsModule->DetectAllFacesVideoDirective \n\n\n\n\n\nDetectSingleFaceImgDirective \n\nDetectSingleFaceImgDirective \n\nDetectSingleFaceImgDirective  -->\n\nNgxFaceApiJsModule->DetectSingleFaceImgDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    3 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FeatureToken   (projects/.../FeatureToken.ts)\n                        \n                        \n                            ModelToken   (projects/.../ModelToken.ts)\n                        \n                        \n                            TaskTypeToken   (projects/.../TaskTypeToken.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-face-api-js/src/lib/tokens/FeatureToken.ts\n    \n    \n        \n            \n                \n                    \n                    FeatureToken\n                \n            \n            \n                \n                        \"expressions\" | \"landmarks\" | \"descriptors\" | \"ageAndGender\"\n\n                \n            \n        \n    \n    projects/ngx-face-api-js/src/lib/tokens/ModelToken.ts\n    \n    \n        \n            \n                \n                    \n                    ModelToken\n                \n            \n            \n                \n                        \"SsdMobilenetv1Model\" | \"MtcnnModel\" | \"FaceExpressionModel\" | \"FaceLandmarkModel\" | \"FaceRecognitionModel\" | \"TinyFaceDetectorModel\" | \"AgeAndGenderModel\"\n\n                \n            \n        \n    \n    projects/ngx-face-api-js/src/lib/tokens/TaskTypeToken.ts\n    \n    \n        \n            \n                \n                    \n                    TaskTypeToken\n                \n            \n            \n                \n                        \"all\" | \"single\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AgeAndGenderModel   (projects/.../ModelToken.ts)\n                        \n                        \n                            AgeAndGenderToken   (projects/.../FeatureToken.ts)\n                        \n                        \n                            DescriptorsFeatureToken   (projects/.../FeatureToken.ts)\n                        \n                        \n                            ExpressionsFeatureToken   (projects/.../FeatureToken.ts)\n                        \n                        \n                            FaceDetectionOptions   (projects/.../FaceDetectionOptions.ts)\n                        \n                        \n                            FaceExpressionModel   (projects/.../ModelToken.ts)\n                        \n                        \n                            FaceLandmarkModel   (projects/.../ModelToken.ts)\n                        \n                        \n                            FaceRecognitionModel   (projects/.../ModelToken.ts)\n                        \n                        \n                            LandmarksFeatureToken   (projects/.../FeatureToken.ts)\n                        \n                        \n                            ModelsUrl   (projects/.../ModelsUrl.ts)\n                        \n                        \n                            MtcnnModel   (projects/.../ModelToken.ts)\n                        \n                        \n                            SsdMobilenetv1Model   (projects/.../ModelToken.ts)\n                        \n                        \n                            TinyFaceDetectorModel   (projects/.../ModelToken.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-face-api-js/src/lib/tokens/ModelToken.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AgeAndGenderModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModelToken\n\n                        \n                    \n                    \n                        \n                            Default value : 'AgeAndGenderModel'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FaceExpressionModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModelToken\n\n                        \n                    \n                    \n                        \n                            Default value : 'FaceExpressionModel'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FaceLandmarkModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModelToken\n\n                        \n                    \n                    \n                        \n                            Default value : 'FaceLandmarkModel'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FaceRecognitionModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModelToken\n\n                        \n                    \n                    \n                        \n                            Default value : 'FaceRecognitionModel'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MtcnnModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModelToken\n\n                        \n                    \n                    \n                        \n                            Default value : 'MtcnnModel'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SsdMobilenetv1Model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModelToken\n\n                        \n                    \n                    \n                        \n                            Default value : 'SsdMobilenetv1Model'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TinyFaceDetectorModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModelToken\n\n                        \n                    \n                    \n                        \n                            Default value : 'TinyFaceDetectorModel'\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-face-api-js/src/lib/tokens/FeatureToken.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AgeAndGenderToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FeatureToken\n\n                        \n                    \n                    \n                        \n                            Default value : 'ageAndGender'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DescriptorsFeatureToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FeatureToken\n\n                        \n                    \n                    \n                        \n                            Default value : 'descriptors'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ExpressionsFeatureToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FeatureToken\n\n                        \n                    \n                    \n                        \n                            Default value : 'expressions'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LandmarksFeatureToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FeatureToken\n\n                        \n                    \n                    \n                        \n                            Default value : 'landmarks'\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-face-api-js/src/lib/tokens/FaceDetectionOptions.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            FaceDetectionOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('ngx-face-api-js.face-detection-options')\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-face-api-js/src/lib/tokens/ModelsUrl.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ModelsUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken(\n  'ngx-face-api-js.models-url',\n)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
