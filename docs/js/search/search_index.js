var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/AbstractDetectDirective.html",[0,0.498,1,1.19]],["body/classes/AbstractDetectDirective.html",[0,0.68,1,1.746,2,0.923,3,0.46,4,0.46,5,0.395,6,0.561,7,0.344,8,0.445,9,2.254,10,0.922,11,1.677,12,1.868,13,1.938,14,0.281,15,0.923,16,2.942,17,2.716,18,2.437,19,1.398,20,1.46,21,0.745,22,1.058,23,2.159,24,2.006,25,1.329,26,1.065,27,2.189,28,2.904,29,2.942,30,1.262,31,2.793,32,0.46,33,0.054,34,0.46,35,0.46,36,1.746,37,1.212,38,1.216,39,1.85,40,1.836,41,1.85,42,1.398,43,0.7,44,0.7,45,1.85,46,1.85,47,0.923,48,1.608,49,1.85,50,1.216,51,1.077,52,2.159,53,0.532,54,1.608,55,0.922,56,1.065,57,0.922,58,1.112,59,0.532,60,1.065,61,0.803,62,1.065,63,1.938,64,1.238,65,1.392,66,1.608,67,1.392,68,1.608,69,1.065,70,1.602,71,1.608,72,1.065,73,0.922,74,1.065,75,1.065,76,1.065,77,1.608,78,1.065,79,1.608,80,1.065,81,1.065,82,1.065,83,1.065,84,1.608,85,1.065,86,1.065,87,1.065,88,1.274,89,1.065,90,1.065,91,1.065,92,1.065,93,1.065,94,0.803,95,0.922,96,0.922,97,1.065,98,1.065,99,0.922,100,1.065,101,1.677,102,1.065,103,1.938,104,1.392,105,0.837,106,0.532,107,1.938,108,1.938,109,0.922,110,0.532,111,0.922,112,1.065,113,0.532,114,0.803,115,0.018,116,0.027,117,0.018]],["title/directives/DetectAllFacesImgDirective.html",[51,0.788,106,0.788]],["body/directives/DetectAllFacesImgDirective.html",[0,0.7,1,1.674,2,0.647,3,0.487,4,0.487,5,0.419,6,0.512,7,0.321,8,0.406,9,2.056,10,0.977,11,1.453,12,1.736,13,1.679,14,0.297,15,0.963,16,2.932,17,2.222,18,2.49,19,1.274,20,0.85,21,0.737,23,1.128,24,1.453,25,1.363,26,1.128,27,2.232,28,2.932,29,2.967,30,1.109,32,0.487,33,0.054,34,0.487,35,0.487,36,1.79,37,0.85,38,1.185,40,1.876,42,1.428,43,1.319,44,1.319,50,1.243,51,1.109,52,2.222,53,0.563,54,1.679,55,0.977,56,1.128,57,0.977,58,1.151,59,0.563,60,1.128,61,0.85,62,1.128,63,2.006,64,1.274,65,1.453,66,1.679,67,1.453,68,1.679,69,1.128,70,1.637,71,1.679,72,1.128,73,0.977,74,1.128,75,1.128,76,1.128,77,1.679,78,1.128,79,1.679,80,1.128,81,1.128,82,1.128,83,1.128,84,1.679,85,1.128,86,1.128,87,1.128,88,1.461,89,1.128,90,1.128,91,1.128,92,1.128,93,1.128,94,0.85,95,0.977,96,0.977,97,1.128,98,1.128,99,0.977,100,1.128,101,1.923,102,1.679,103,2.006,104,1.453,105,0.866,106,0.838,107,2.006,108,2.006,109,0.977,110,0.563,111,0.977,112,1.128,113,0.563,114,0.85,115,0.019,116,0.029,117,0.019,118,0.742,119,1.128,120,1.962,121,2.916,122,1.96,123,1.96]],["title/directives/DetectAllFacesVideoDirective.html",[51,0.788,113,0.788]],["body/directives/DetectAllFacesVideoDirective.html",[0,0.7,1,1.674,2,0.647,3,0.487,4,0.487,5,0.419,6,0.512,7,0.321,8,0.406,9,2.056,10,0.977,11,1.453,12,1.736,13,1.679,14,0.297,15,0.963,16,2.932,17,2.222,18,2.49,19,1.274,20,0.85,21,0.737,23,1.128,24,1.453,25,1.363,26,1.128,27,2.232,28,2.932,29,2.967,30,1.109,32,0.487,33,0.054,34,0.487,35,0.487,36,1.79,37,0.85,38,1.185,40,1.876,42,1.428,43,1.319,44,1.319,50,1.243,51,1.109,52,2.222,53,0.563,54,1.679,55,0.977,56,1.128,57,0.977,58,1.151,59,0.563,60,1.128,61,0.85,62,1.128,63,2.006,64,1.274,65,1.453,66,1.679,67,1.453,68,1.679,69,1.128,70,1.637,71,1.679,72,1.128,73,0.977,74,1.128,75,1.128,76,1.128,77,1.679,78,1.128,79,1.679,80,1.128,81,1.128,82,1.128,83,1.128,84,1.679,85,1.128,86,1.128,87,1.128,88,1.319,89,1.128,90,1.128,91,1.128,92,1.128,93,1.128,94,0.85,95,0.977,96,0.977,97,1.128,98,1.128,99,0.977,100,1.128,101,1.923,102,1.128,103,2.006,104,1.453,105,0.866,106,0.563,107,2.006,108,2.006,109,0.977,110,0.563,111,0.977,112,1.679,113,0.838,114,1.265,115,0.019,116,0.029,117,0.019,118,0.742,119,1.128,120,1.962,124,2.916,125,1.96,126,1.96]],["title/directives/DetectSingleFaceImgDirective.html",[51,0.788,110,0.788]],["body/directives/DetectSingleFaceImgDirective.html",[0,0.692,1,1.654,2,0.632,3,0.476,4,0.476,5,0.409,6,0.532,7,0.33,8,0.422,9,2.136,10,0.953,11,1.711,12,1.9,13,1.649,14,0.29,15,0.946,16,2.92,17,2.195,18,2.467,19,1.259,20,0.83,21,0.733,22,1.084,23,1.101,24,2.035,25,1.349,26,1.101,27,2.214,28,2.92,29,2.956,30,1.173,32,0.476,33,0.054,34,0.476,35,0.476,36,1.771,37,0.83,38,1.173,40,1.859,42,1.415,43,1.3,44,1.3,47,0.632,48,1.101,50,1.231,51,1.096,52,2.195,53,0.55,54,1.649,55,0.953,56,1.101,57,0.953,58,1.134,59,0.55,60,1.101,61,0.83,62,1.101,63,1.977,64,1.259,65,1.427,66,1.649,67,1.427,68,1.649,69,1.101,70,1.622,71,1.649,72,1.101,73,0.953,74,1.101,75,1.101,76,1.101,77,1.649,78,1.101,79,1.649,80,1.101,81,1.101,82,1.101,83,1.101,84,1.649,85,1.101,86,1.101,87,1.101,88,1.443,89,1.101,90,1.101,91,1.101,92,1.101,93,1.101,94,0.83,95,0.953,96,0.953,97,1.101,98,1.101,99,0.953,100,1.101,101,1.9,102,1.101,103,1.977,104,1.427,105,0.854,106,0.55,107,1.977,108,1.977,109,1.427,110,0.823,111,1.427,112,1.101,113,0.55,114,0.83,115,0.019,116,0.028,117,0.019,118,0.724,119,1.101,120,1.927,127,2.864,128,1.912,129,1.912,130,1.912]],["title/classes/DetectTask.html",[0,0.498,38,0.788]],["body/classes/DetectTask.html",[0,0.373,2,0.679,3,0.511,4,0.511,5,0.439,6,0.609,7,0.369,8,0.483,14,0.312,15,0.998,19,1.722,21,0.773,22,1.144,25,0.679,30,1.391,32,0.982,33,0.054,34,0.982,35,0.982,36,1.311,37,1.825,38,0.868,40,1.713,42,1.502,47,0.998,48,1.739,50,0.868,58,1.453,64,0.679,65,1.505,67,1.968,88,0.778,99,1.505,105,0.511,115,0.02,116,0.03,117,0.02,131,1.65,132,4.761,133,3.531,134,2.533,135,3.581,136,2.41,137,2.032,138,3.02,139,2.425,140,3.581,141,3.02,142,2.425,143,3.02,144,3.17,145,3.17,146,2.055,147,1.65,148,2.055,149,2.055,150,2.055,151,3.02,152,2.41,153,2.055,154,1.65,155,3.02,156,2.533,157,2.055,158,2.055,159,2.055,160,2.055,161,2.055,162,2.055,163,1.183,164,0.778,165,3.02,166,2.425,167,2.373,168,3.02,169,2.055,170,4.207,171,2.055,172,2.055,173,2.055,174,3.581,175,2.055,176,2.055,177,2.055,178,2.055,179,2.055,180,2.055,181,3.377,182,3.02,183,3.02,184,2.055,185,2.055,186,3.581,187,1.505,188,1.383,189,2.425,190,2.055,191,2.055,192,2.055,193,2.055,194,2.055,195,2.055,196,2.055]],["title/components/DetectionResultComponent.html",[59,0.788,197,1.58]],["body/components/DetectionResultComponent.html",[0,0.307,2,0.559,3,0.421,4,0.421,5,0.362,6,0.582,7,0.353,8,0.461,11,1.301,12,1.588,14,0.257,15,0.862,19,0.559,20,1.132,21,0.543,22,0.988,24,1.784,25,0.862,27,2.037,30,1.324,32,0.792,33,0.054,34,1.017,35,0.792,36,1.382,38,1.029,43,0.988,44,0.988,47,1.183,48,1.503,50,1.174,51,0.486,53,0.486,59,1.029,61,2.035,64,1.183,70,1.206,73,0.844,88,0.641,101,1.784,105,0.421,106,0.486,109,0.844,110,0.486,113,0.486,114,0.734,115,0.04,116,0.026,117,0.026,118,0.641,119,0.975,133,2.557,134,2.881,136,2.143,139,2.095,163,0.975,164,0.641,166,1.359,167,1.588,187,1.301,189,2.095,197,1.834,198,2.095,199,1.692,200,1.692,201,1.692,202,1.692,203,3.765,204,1.359,205,3.185,206,2.61,207,2.75,208,3.185,209,2.61,210,2.61,211,3.185,212,3.185,213,4.086,214,2.61,215,2.61,216,3.58,217,2.61,218,3.185,219,3.58,220,1.692,221,3.185,222,3.58,223,3.185,224,1.784,225,1.692,226,1.692,227,2.61,228,1.692,229,2.61,230,1.692,231,1.692,232,1.692,233,1.692,234,2.61,235,1.692,236,2.557,237,1.692,238,1.692,239,1.692,240,1.692,241,1.692,242,1.692,243,1.692,244,1.139,245,1.692,246,1.692,247,1.359,248,1.692,249,1.692,250,1.692,251,1.692,252,1.692,253,1.692,254,1.692,255,1.692,256,1.692,257,1.692,258,1.692,259,1.359,260,1.692,261,1.692,262,1.692,263,1.692,264,1.692,265,1.139,266,1.692,267,4.397,268,4.397,269,1.692,270,1.692,271,3.185,272,1.692,273,1.692,274,1.692,275,1.692,276,1.692,277,1.692,278,2.61,279,1.692,280,1.359,281,2.61,282,1.692,283,1.692,284,1.692,285,1.692,286,1.692,287,2.61,288,2.61,289,1.503,290,1.692,291,1.692,292,1.692,293,1.692,294,1.359,295,1.692,296,1.692,297,1.692,298,2.61,299,1.139,300,2.095,301,2.61,302,3.58,303,1.692,304,1.692,305,1.692,306,1.692]],["title/injectables/FaceDetectorService.html",[224,1.367,307,1.367]],["body/injectables/FaceDetectorService.html",[0,0.506,2,0.92,3,0.693,4,0.693,5,0.595,6,0.525,7,0.336,8,0.416,14,0.423,19,1.396,20,1.209,21,0.568,22,1.417,25,1.236,30,1.076,32,0.931,33,0.054,34,0.931,35,1.124,38,1.298,47,0.92,50,1.425,53,0.801,58,0.92,105,0.693,114,1.209,115,0.027,116,0.037,117,0.027,134,2.155,137,2.518,144,3.393,152,2.844,154,2.237,163,1.605,164,1.055,167,1.865,181,3.005,224,1.865,244,1.875,247,2.237,259,3.005,265,2.844,307,1.865,308,1.875,309,3.393,310,2.237,311,2.786,312,2.252,313,2.786,314,3.743,315,3.743,316,2.786,317,4.226,318,2.237,319,2.786,320,2.786,321,4.713,322,2.786,323,2.237,324,2.786,325,1.605,326,2.786,327,2.786,328,3.743,329,4.226,330,3.743,331,2.786,332,2.786,333,2.786,334,3.743,335,2.786,336,3.743,337,3.743,338,2.786,339,2.786,340,2.237]],["title/injectables/ModelLoaderService.html",[307,1.367,312,1.367]],["body/injectables/ModelLoaderService.html",[0,0.373,3,0.511,4,0.511,5,0.439,6,0.579,7,0.354,8,0.459,14,0.312,15,0.998,19,1.183,21,0.69,22,1.144,25,0.998,30,1.307,32,1.094,33,0.054,34,1.094,35,1.094,37,1.311,42,1.541,43,0.778,44,0.778,47,1.39,50,1.029,53,0.591,58,1.183,70,1.144,88,0.778,105,0.511,115,0.02,116,0.03,117,0.02,134,2.787,136,2.96,145,3.377,156,2.062,164,0.778,167,2.325,265,2.032,307,1.505,308,1.383,312,1.505,318,1.65,323,2.875,340,2.425,341,3.745,342,1.65,343,3.581,344,3.02,345,3.02,346,3.02,347,3.02,348,2.055,349,3.02,350,3.02,351,3.02,352,2.055,353,3.403,354,3.02,355,2.055,356,2.055,357,2.055,358,3.948,359,3.02,360,2.055,361,3.02,362,2.055,363,2.425,364,2.425,365,2.425,366,2.425,367,2.425,368,3.02,369,3.02,370,3.02,371,3.02,372,3.02,373,3.02,374,1.183,375,2.274,376,2.062,377,2.062,378,2.062,379,2.032,380,2.032,381,2.032,382,2.055,383,2.055,384,2.055,385,2.055,386,2.055,387,2.055,388,2.055,389,2.055,390,2.055,391,2.055,392,2.055,393,2.055,394,4.399,395,1.183,396,1.183,397,2.055,398,2.055,399,3.02,400,2.055,401,2.055,402,2.055,403,2.055,404,2.055,405,2.055,406,2.055,407,1.65,408,2.055,409,2.055,410,3.02,411,2.055,412,2.055,413,2.055]],["title/modules/NgxFaceApiJsModule.html",[414,1.846,415,1.58]],["body/modules/NgxFaceApiJsModule.html",[0,0.435,3,0.596,4,0.596,5,0.512,6,0.419,7,0.332,8,0.417,21,0.593,22,0.908,30,0.689,32,0.596,33,0.054,34,0.596,35,0.596,47,0.792,50,1.439,53,0.97,55,1.195,57,1.195,58,0.792,59,1.397,70,0.908,94,1.694,95,2.113,96,1.682,105,0.596,106,1.469,110,1.469,113,1.469,115,0.023,116,0.033,117,0.023,118,0.908,142,2.709,152,1.613,156,1.38,163,1.38,164,0.908,167,1.195,198,1.924,224,1.946,299,1.613,312,1.946,325,2.249,363,1.924,364,1.924,365,1.924,366,1.924,367,1.924,374,2.249,414,1.613,415,3.021,416,1.613,417,1.38,418,3.135,419,1.924,420,3.135,421,1.924,422,1.924,423,1.924,424,2.709,425,1.924,426,1.613,427,3.374,428,2.397,429,3.374,430,3.374,431,2.397,432,3.374,433,2.397,434,1.613,435,3.905,436,3.905,437,3.374,438,3.374,439,1.924,440,1.38,441,3.374,442,3.374,443,2.397,444,2.397,445,2.397,446,3.374,447,3.374,448,3.374]],["title/interfaces/Schema.html",[449,1.58,450,1.846]],["body/interfaces/Schema.html",[3,0.985,4,0.985,5,0.846,6,0.492,7,0.294,8,0.39,14,0.601,15,1.544,21,0.601,33,0.051,105,0.985,115,0.039,116,0.046,117,0.039,156,2.863,449,2.281,450,3.144,451,3.96,452,2.665,453,3.179,454,5.135]],["title/coverage.html",[455,2.973]],["body/coverage.html",[0,0.614,1,1.044,5,0.514,6,0.671,7,0.401,8,0.532,9,2.116,10,2.116,21,0.365,33,0.053,38,0.691,51,1.125,59,0.691,61,1.044,64,0.795,106,0.691,110,0.691,113,0.691,115,0.024,116,0.033,117,0.024,131,1.931,147,3.591,197,1.385,203,1.931,204,1.931,224,1.199,307,1.686,309,1.931,310,1.931,312,1.199,325,1.385,341,1.931,342,1.931,374,1.385,375,1.385,376,1.385,377,1.385,378,1.385,379,1.618,380,1.618,381,1.618,395,1.385,396,1.385,407,4.337,449,1.385,450,1.618,452,3.122,453,1.931,455,1.931,456,1.931,457,2.405,458,2.405,459,2.405,460,3.591,461,1.931,462,5.249,463,1.931,464,1.931,465,1.931,466,1.931,467,3.383,468,3.383,469,2.405,470,3.383,471,2.405,472,1.931,473,5.068,474,2.633,475,3.122,476,1.931,477,2.405,478,2.405]],["title/dependencies.html",[417,1.894,479,2.311]],["body/dependencies.html",[7,0.277,33,0.054,53,1.072,115,0.036,116,0.044,117,0.036,164,1.413,244,2.511,417,2.149,439,3.62,440,2.597,480,3.731,481,5.346,482,3.731,483,3.731,484,3.731,485,3.731,486,3.731,487,3.731,488,3.731,489,3.731,490,2.995,491,3.731,492,3.731,493,3.731,494,3.731,495,3.731,496,3.731,497,3.731]],["title/miscellaneous/functions.html",[498,1.003,499,2.64]],["body/miscellaneous/functions.html",[6,0.454,7,0.272,8,0.36,14,0.555,32,1.196,33,0.052,34,1.196,35,1.196,47,1.652,115,0.036,116,0.044,117,0.036,434,3.234,452,2.463,460,2.939,461,3.859,463,3.579,464,3.859,465,3.579,466,3.579,498,1.588,499,2.939,500,5.128,501,5.002,502,3.66,503,3.66,504,3.66]],["title/index.html",[14,0.351,505,1.855,506,1.855]],["body/index.html",[7,0.385,8,0.35,33,0.05,104,2.182,115,0.035,116,0.043,117,0.035,118,1.346,137,3.193,164,1.658,187,1.772,207,2.392,289,2.047,300,3.515,440,2.521,490,2.854,507,3.555,508,3.555,509,3.555,510,3.555,511,3.555,512,3.555,513,4.378,514,3.555,515,3.555,516,3.555,517,3.555,518,3.555,519,3.555,520,3.555,521,3.555,522,3.555,523,4.378,524,4.378,525,3.555,526,3.555,527,3.555,528,4.745,529,3.555,530,3.555,531,4.745,532,3.555,533,3.555,534,3.555,535,3.555,536,3.555,537,3.555,538,2.392,539,2.854]],["title/license.html",[505,1.855,506,1.855,538,1.555]],["body/license.html",[33,0.041,115,0.032,116,0.041,117,0.032,236,2.658,426,2.228,456,2.658,538,2.228,539,3.363,540,4.594,541,3.311,542,3.311,543,3.311,544,3.311,545,4.189,546,3.311,547,3.311,548,3.311,549,3.311,550,3.311,551,3.311,552,4.189,553,5.276,554,3.311,555,3.311,556,3.311,557,4.594,558,3.311,559,4.189,560,3.311,561,3.311,562,4.189,563,3.311,564,3.311,565,3.311,566,3.311,567,3.311,568,3.311,569,3.311,570,4.189,571,3.311,572,3.311,573,3.311,574,3.311,575,3.311,576,3.311,577,4.189,578,4.189,579,3.311,580,3.311,581,3.311,582,3.311,583,3.311,584,3.311,585,3.311,586,3.311,587,3.311,588,3.311,589,3.311,590,3.311,591,3.311,592,3.311,593,3.311,594,3.311,595,3.311,596,3.311,597,3.311,598,3.311,599,3.311,600,3.311,601,3.311,602,3.311,603,3.311,604,3.311,605,3.311,606,3.311,607,3.311,608,3.311]],["title/modules.html",[416,2.492]],["body/modules.html",[33,0.047,115,0.041,116,0.047,117,0.041,415,2.43,416,2.839,440,2.43,609,4.22,610,4.22,611,4.22]],["title/overview.html",[612,2.973]],["body/overview.html",[2,1.159,33,0.052,59,1.356,94,1.522,106,1.504,110,1.504,113,1.504,115,0.034,116,0.042,117,0.034,118,1.329,197,2.021,280,3.787,294,3.487,299,2.361,308,2.361,414,2.922,415,3.131,417,2.021,418,2.817,419,2.817,420,2.817,421,2.817,422,2.817,423,2.817,424,3.487,425,2.817,426,2.361,449,2.021,612,2.817,613,3.509]],["title/miscellaneous/typealiases.html",[498,1.003,614,3.288]],["body/miscellaneous/typealiases.html",[6,0.605,7,0.362,8,0.48,14,0.574,21,0.574,33,0.053,40,1.973,42,1.502,111,1.886,115,0.037,116,0.044,117,0.037,187,1.886,188,2.546,289,2.179,353,3.06,375,2.179,376,2.179,377,2.179,378,2.179,395,2.179,396,2.179,474,2.546,475,2.546,498,1.642,615,3.783,616,3.037,617,3.037,618,3.783,619,3.783]],["title/miscellaneous/variables.html",[498,1.003,620,2.64]],["body/miscellaneous/variables.html",[6,0.579,7,0.369,8,0.488,14,0.458,21,0.787,33,0.054,42,1.452,43,1.996,44,1.996,64,1.303,115,0.029,116,0.039,117,0.029,187,1.503,188,2.03,207,2.03,289,1.737,325,2.272,353,3.34,374,2.272,375,2.531,376,2.531,377,2.531,378,2.531,379,2.654,380,2.654,381,2.654,395,2.531,396,2.531,434,2.03,472,2.421,474,2.03,475,2.03,476,2.421,498,1.309,616,3.529,617,3.984,620,2.421,621,3.016,622,3.016,623,3.945,624,3.016,625,3.016,626,3.016]]],"invertedIndex":[["",{"_index":33,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/Schema.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":407,"title":{},"body":{"injectables/ModelLoaderService.html":{},"coverage.html":{}}}],["0.19.0",{"_index":492,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":497,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":462,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":467,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":459,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":471,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":468,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":469,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":470,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":280,"title":{},"body":{"components/DetectionResultComponent.html":{},"overview.html":{}}}],["1.9.0",{"_index":495,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":298,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["126",{"_index":533,"title":{},"body":{"index.html":{}}}],["1457",{"_index":530,"title":{},"body":{"index.html":{}}}],["2",{"_index":294,"title":{},"body":{"components/DetectionResultComponent.html":{},"overview.html":{}}}],["2.5.4",{"_index":491,"title":{},"body":{"dependencies.html":{}}}],["2019",{"_index":542,"title":{},"body":{"license.html":{}}}],["3",{"_index":613,"title":{},"body":{"overview.html":{}}}],["497",{"_index":535,"title":{},"body":{"index.html":{}}}],["6.3.3",{"_index":493,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":481,"title":{},"body":{"dependencies.html":{}}}],["7.3.7",{"_index":483,"title":{},"body":{"dependencies.html":{}}}],["a.concat(b",{"_index":389,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["above",{"_index":576,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":17,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["abstractdetectdirective",{"_index":1,"title":{"classes/AbstractDetectDirective.html":{}},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"coverage.html":{}}}],["accessors",{"_index":139,"title":{},"body":{"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{}}}],["action",{"_index":602,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":306,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["add",{"_index":524,"title":{},"body":{"index.html":{}}}],["add/index.ts",{"_index":460,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["add/schema.ts",{"_index":453,"title":{},"body":{"interfaces/Schema.html":{},"coverage.html":{}}}],["addbrowserignorepackagesetting",{"_index":461,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["addcdkoverlayprebuiltcsstoappstyles",{"_index":463,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["addcdkoverlayprebuiltcsstoappstyles(options",{"_index":502,"title":{},"body":{"miscellaneous/functions.html":{}}}],["adddependencies",{"_index":464,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["addngxfaceapijsmodule",{"_index":465,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["addngxfaceapijsmodule(options",{"_index":503,"title":{},"body":{"miscellaneous/functions.html":{}}}],["afterviewinit",{"_index":13,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["aliases",{"_index":615,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["and/or",{"_index":568,"title":{},"body":{"license.html":{}}}],["angular",{"_index":508,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":480,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":482,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/overlay",{"_index":55,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"modules/NgxFaceApiJsModule.html":{}}}],["angular/cdk/portal",{"_index":57,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"modules/NgxFaceApiJsModule.html":{}}}],["angular/common",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":485,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":53,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":439,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":488,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":8,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/Schema.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["api.js",{"_index":164,"title":{},"body":{"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"dependencies.html":{},"index.html":{}}}],["arising",{"_index":606,"title":{},"body":{"license.html":{}}}],["arr",{"_index":391,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["arr.indexof(v",{"_index":392,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["array.isarray(result",{"_index":255,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["associated",{"_index":554,"title":{},"body":{"license.html":{}}}],["async",{"_index":136,"title":{},"body":{"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/ModelLoaderService.html":{}}}],["authors",{"_index":595,"title":{},"body":{"license.html":{}}}],["await",{"_index":265,"title":{},"body":{"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{}}}],["b",{"_index":388,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["background",{"_index":514,"title":{},"body":{"index.html":{}}}],["bash",{"_index":526,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":37,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"injectables/ModelLoaderService.html":{}}}],["bootstrap",{"_index":419,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{},"overview.html":{}}}],["browse",{"_index":611,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":440,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browsermodule",{"_index":438,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{}}}],["bytes",{"_index":531,"title":{},"body":{"index.html":{}}}],["c",{"_index":541,"title":{},"body":{"license.html":{}}}],["canvas",{"_index":219,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["canvasel",{"_index":211,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["case",{"_index":394,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["charge",{"_index":549,"title":{},"body":{"license.html":{}}}],["claim",{"_index":598,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractDetectDirective.html":{},"classes/DetectTask.html":{}},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"overview.html":{}}}],["cluster_ngxfaceapijsmodule",{"_index":421,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{},"overview.html":{}}}],["cluster_ngxfaceapijsmodule_declarations",{"_index":422,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{},"overview.html":{}}}],["cluster_ngxfaceapijsmodule_exports",{"_index":423,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{},"overview.html":{}}}],["color",{"_index":296,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["combinelatest",{"_index":243,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["combinelatest(this.facedetector.detect(this.task",{"_index":257,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["compodoc",{"_index":520,"title":{},"body":{"index.html":{}}}],["component",{"_index":197,"title":{"components/DetectionResultComponent.html":{}},"body":{"components/DetectionResultComponent.html":{},"coverage.html":{},"overview.html":{}}}],["component_template",{"_index":303,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["componentportal",{"_index":56,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["componentportal(detectionresultcomponent",{"_index":98,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["components",{"_index":198,"title":{},"body":{"components/DetectionResultComponent.html":{},"modules/NgxFaceApiJsModule.html":{}}}],["components/detection",{"_index":60,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["conditions",{"_index":575,"title":{},"body":{"license.html":{}}}],["config",{"_index":86,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["connection",{"_index":607,"title":{},"body":{"license.html":{}}}],["console.log",{"_index":412,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["const",{"_index":70,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"components/DetectionResultComponent.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{}}}],["constructor",{"_index":25,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{}}}],["constructor(el",{"_index":26,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["constructor(modelloader",{"_index":311,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["constructor(modelurl",{"_index":348,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["constructor(option",{"_index":141,"title":{},"body":{"classes/DetectTask.html":{}}}],["constructor(task",{"_index":220,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["contract",{"_index":603,"title":{},"body":{"license.html":{}}}],["convertresulttoarray",{"_index":214,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["convertresulttoarray(result",{"_index":227,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["copies",{"_index":570,"title":{},"body":{"license.html":{}}}],["copy",{"_index":552,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":540,"title":{},"body":{"license.html":{}}}],["core",{"_index":489,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":455,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["damages",{"_index":599,"title":{},"body":{"license.html":{}}}],["deal",{"_index":556,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":608,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":418,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{},"overview.html":{}}}],["decorators",{"_index":233,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["default",{"_index":43,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"components/DetectionResultComponent.html":{},"injectables/ModelLoaderService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":30,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{}}}],["demo",{"_index":516,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":417,"title":{"dependencies.html":{}},"body":{"modules/NgxFaceApiJsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependent",{"_index":511,"title":{},"body":{"index.html":{}}}],["descriptors",{"_index":188,"title":{},"body":{"classes/DetectTask.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["descriptorsfeaturetoken",{"_index":381,"title":{},"body":{"injectables/ModelLoaderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["detect",{"_index":137,"title":{},"body":{"classes/DetectTask.html":{},"injectables/FaceDetectorService.html":{},"index.html":{}}}],["detect(option",{"_index":151,"title":{},"body":{"classes/DetectTask.html":{}}}],["detect(task",{"_index":315,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["detectallfacesimgdirective",{"_index":106,"title":{"directives/DetectAllFacesImgDirective.html":{}},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"components/DetectionResultComponent.html":{},"modules/NgxFaceApiJsModule.html":{},"coverage.html":{},"overview.html":{}}}],["detectallfacesvideodirective",{"_index":113,"title":{"directives/DetectAllFacesVideoDirective.html":{}},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"components/DetectionResultComponent.html":{},"modules/NgxFaceApiJsModule.html":{},"coverage.html":{},"overview.html":{}}}],["detection",{"_index":207,"title":{},"body":{"components/DetectionResultComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["detection.box",{"_index":290,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["detectionresultcomponent",{"_index":59,"title":{"components/DetectionResultComponent.html":{}},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"components/DetectionResultComponent.html":{},"modules/NgxFaceApiJsModule.html":{},"coverage.html":{},"overview.html":{}}}],["detectionsforsize",{"_index":271,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["detector.service",{"_index":249,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["detector.service.ts",{"_index":310,"title":{},"body":{"injectables/FaceDetectorService.html":{},"coverage.html":{}}}],["detector.service.ts:11",{"_index":313,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["detector.service.ts:20",{"_index":316,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["detectsinglefaceimgdirective",{"_index":110,"title":{"directives/DetectSingleFaceImgDirective.html":{}},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"components/DetectionResultComponent.html":{},"modules/NgxFaceApiJsModule.html":{},"coverage.html":{},"overview.html":{}}}],["detecttask",{"_index":38,"title":{"classes/DetectTask.html":{}},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"coverage.html":{}}}],["directive",{"_index":51,"title":{"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"components/DetectionResultComponent.html":{},"coverage.html":{}}}],["directives",{"_index":118,"title":{},"body":{"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"components/DetectionResultComponent.html":{},"modules/NgxFaceApiJsModule.html":{},"index.html":{},"overview.html":{}}}],["distribute",{"_index":566,"title":{},"body":{"license.html":{}}}],["documantation",{"_index":519,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":456,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dom",{"_index":201,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["draw",{"_index":215,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["draw(results",{"_index":229,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["drawlines",{"_index":295,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["dynamic",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["el",{"_index":36,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{}}}],["element",{"_index":301,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["elementref",{"_index":27,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"components/DetectionResultComponent.html":{}}}],["entries",{"_index":384,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["entrycomponents",{"_index":429,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{}}}],["event",{"_index":594,"title":{},"body":{"license.html":{}}}],["export",{"_index":105,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/Schema.html":{}}}],["exportas",{"_index":103,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["exports",{"_index":420,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{},"overview.html":{}}}],["express",{"_index":585,"title":{},"body":{"license.html":{}}}],["expressions",{"_index":289,"title":{},"body":{"components/DetectionResultComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["expressionsfeaturetoken",{"_index":379,"title":{},"body":{"injectables/ModelLoaderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["extends",{"_index":107,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["face",{"_index":7,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/Schema.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["faceapi",{"_index":163,"title":{},"body":{"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"modules/NgxFaceApiJsModule.html":{}}}],["faceapi.detectallfaces(await",{"_index":184,"title":{},"body":{"classes/DetectTask.html":{}}}],["faceapi.detectallfacestask",{"_index":182,"title":{},"body":{"classes/DetectTask.html":{}}}],["faceapi.detectsingleface(await",{"_index":185,"title":{},"body":{"classes/DetectTask.html":{}}}],["faceapi.detectsinglefacetask",{"_index":183,"title":{},"body":{"classes/DetectTask.html":{}}}],["faceapi.drawdetection(this.canvas",{"_index":281,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["faceapi.drawfaceexpressions",{"_index":286,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["faceapi.drawlandmarks",{"_index":292,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["faceapi.facedetection",{"_index":274,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["faceapi.facedetectionoptions",{"_index":152,"title":{},"body":{"classes/DetectTask.html":{},"injectables/FaceDetectorService.html":{},"modules/NgxFaceApiJsModule.html":{}}}],["faceapi.resizeresults",{"_index":272,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["faceapi.resizeresults(results",{"_index":284,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["facedetectionoptions",{"_index":325,"title":{},"body":{"injectables/FaceDetectorService.html":{},"modules/NgxFaceApiJsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["facedetector",{"_index":223,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["facedetectorservice",{"_index":224,"title":{"injectables/FaceDetectorService.html":{}},"body":{"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"modules/NgxFaceApiJsModule.html":{},"coverage.html":{}}}],["faceexpressionmodel",{"_index":376,"title":{},"body":{"injectables/ModelLoaderService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["facelandmarkmodel",{"_index":377,"title":{},"body":{"injectables/ModelLoaderService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["facerecognitionmodel",{"_index":378,"title":{},"body":{"injectables/ModelLoaderService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["faces",{"_index":104,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"index.html":{}}}],["faces.directive.ts",{"_index":10,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"coverage.html":{}}}],["faces.directive.ts:10",{"_index":45,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["faces.directive.ts:105",{"_index":130,"title":{},"body":{"directives/DetectSingleFaceImgDirective.html":{}}}],["faces.directive.ts:106",{"_index":129,"title":{},"body":{"directives/DetectSingleFaceImgDirective.html":{}}}],["faces.directive.ts:108",{"_index":128,"title":{},"body":{"directives/DetectSingleFaceImgDirective.html":{}}}],["faces.directive.ts:11",{"_index":41,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["faces.directive.ts:12",{"_index":31,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["faces.directive.ts:124",{"_index":124,"title":{},"body":{"directives/DetectAllFacesVideoDirective.html":{}}}],["faces.directive.ts:134",{"_index":126,"title":{},"body":{"directives/DetectAllFacesVideoDirective.html":{}}}],["faces.directive.ts:135",{"_index":125,"title":{},"body":{"directives/DetectAllFacesVideoDirective.html":{}}}],["faces.directive.ts:19",{"_index":39,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["faces.directive.ts:21",{"_index":49,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["faces.directive.ts:28",{"_index":46,"title":{},"body":{"classes/AbstractDetectDirective.html":{}}}],["faces.directive.ts:72",{"_index":121,"title":{},"body":{"directives/DetectAllFacesImgDirective.html":{}}}],["faces.directive.ts:82",{"_index":123,"title":{},"body":{"directives/DetectAllFacesImgDirective.html":{}}}],["faces.directive.ts:83",{"_index":122,"title":{},"body":{"directives/DetectAllFacesImgDirective.html":{}}}],["faces.directive.ts:95",{"_index":127,"title":{},"body":{"directives/DetectSingleFaceImgDirective.html":{}}}],["false",{"_index":88,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/ModelLoaderService.html":{}}}],["featuretoken",{"_index":42,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"injectables/ModelLoaderService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/Schema.html":{},"coverage.html":{}}}],["files",{"_index":555,"title":{},"body":{"license.html":{}}}],["filter((v",{"_index":390,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["filter(m",{"_index":400,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["fitness",{"_index":590,"title":{},"body":{"license.html":{}}}],["flexibleconnectedto(this.el",{"_index":74,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["following",{"_index":574,"title":{},"body":{"license.html":{}}}],["forroot",{"_index":431,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{}}}],["forroot(options",{"_index":432,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{}}}],["free",{"_index":548,"title":{},"body":{"license.html":{}}}],["fromevent",{"_index":319,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["fromevent(image",{"_index":339,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["fromevent(video",{"_index":332,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["function",{"_index":147,"title":{},"body":{"classes/DetectTask.html":{},"coverage.html":{}}}],["functions",{"_index":499,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":573,"title":{},"body":{"license.html":{}}}],["getcanvas",{"_index":239,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["getreqiredmodels",{"_index":344,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["getreqiredmodels(tokens",{"_index":351,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["getresolvetarget",{"_index":161,"title":{},"body":{"classes/DetectTask.html":{}}}],["getting",{"_index":505,"title":{"index.html":{},"license.html":{}},"body":{}}],["granted",{"_index":547,"title":{},"body":{"license.html":{}}}],["green",{"_index":297,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["hasbackdrop",{"_index":87,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["height",{"_index":268,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["hereby",{"_index":546,"title":{},"body":{"license.html":{}}}],["holders",{"_index":596,"title":{},"body":{"license.html":{}}}],["hostlistener",{"_index":242,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["hostlistener('window:resize",{"_index":252,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["hostlisteners",{"_index":217,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["html",{"_index":300,"title":{},"body":{"components/DetectionResultComponent.html":{},"index.html":{}}}],["htmlcanvaselement",{"_index":250,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["htmlimageelement",{"_index":165,"title":{},"body":{"classes/DetectTask.html":{}}}],["htmlvideoelement",{"_index":166,"title":{},"body":{"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{}}}],["identifier",{"_index":457,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":517,"title":{},"body":{"index.html":{}}}],["img[allfaces",{"_index":102,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["img[allfaces]'},{'name",{"_index":304,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["img[singleface",{"_index":109,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"components/DetectionResultComponent.html":{}}}],["implementation",{"_index":512,"title":{},"body":{"index.html":{}}}],["implements",{"_index":11,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"components/DetectionResultComponent.html":{}}}],["implied",{"_index":586,"title":{},"body":{"license.html":{}}}],["import",{"_index":50,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{}}}],["imports",{"_index":444,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{}}}],["included",{"_index":579,"title":{},"body":{"license.html":{}}}],["including",{"_index":559,"title":{},"body":{"license.html":{}}}],["index",{"_index":14,"title":{"index.html":{}},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"interfaces/Schema.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/Schema.html":{}}}],["inject",{"_index":318,"title":{},"body":{"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{}}}],["inject(facedetectionoptions",{"_index":326,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["inject(modelsurl",{"_index":382,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["injectable",{"_index":307,"title":{"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{}},"body":{"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"coverage.html":{}}}],["injectables",{"_index":308,"title":{},"body":{"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"overview.html":{}}}],["injectiontoken('ngx",{"_index":623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injector",{"_index":29,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["injector.create",{"_index":91,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["input",{"_index":52,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["inputs",{"_index":120,"title":{},"body":{"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["installation",{"_index":522,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":189,"title":{},"body":{"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{}}}],["interface",{"_index":449,"title":{"interfaces/Schema.html":{}},"body":{"interfaces/Schema.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":451,"title":{},"body":{"interfaces/Schema.html":{}}}],["interval",{"_index":320,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["interval(300",{"_index":335,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["isloaded",{"_index":345,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["isloaded(model",{"_index":354,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["ismatchpattern",{"_index":138,"title":{},"body":{"classes/DetectTask.html":{}}}],["ismatchpattern(patten",{"_index":155,"title":{},"body":{"classes/DetectTask.html":{}}}],["js",{"_index":490,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["js.face",{"_index":624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["js.models",{"_index":625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["js.module.ts",{"_index":428,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{}}}],["js.module.ts:36",{"_index":433,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{}}}],["js/schematics/ng",{"_index":452,"title":{},"body":{"interfaces/Schema.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["js/src/lib/classes/detecttask.ts",{"_index":131,"title":{},"body":{"classes/DetectTask.html":{},"coverage.html":{}}}],["js/src/lib/classes/detecttask.ts:10",{"_index":150,"title":{},"body":{"classes/DetectTask.html":{}}}],["js/src/lib/classes/detecttask.ts:11",{"_index":149,"title":{},"body":{"classes/DetectTask.html":{}}}],["js/src/lib/classes/detecttask.ts:12",{"_index":143,"title":{},"body":{"classes/DetectTask.html":{}}}],["js/src/lib/classes/detecttask.ts:26",{"_index":146,"title":{},"body":{"classes/DetectTask.html":{}}}],["js/src/lib/classes/detecttask.ts:28",{"_index":148,"title":{},"body":{"classes/DetectTask.html":{}}}],["js/src/lib/classes/detecttask.ts:30",{"_index":157,"title":{},"body":{"classes/DetectTask.html":{}}}],["js/src/lib/classes/detecttask.ts:34",{"_index":160,"title":{},"body":{"classes/DetectTask.html":{}}}],["js/src/lib/classes/detecttask.ts:39",{"_index":153,"title":{},"body":{"classes/DetectTask.html":{}}}],["js/src/lib/classes/detecttask.ts:6",{"_index":162,"title":{},"body":{"classes/DetectTask.html":{}}}],["js/src/lib/components/detection",{"_index":203,"title":{},"body":{"components/DetectionResultComponent.html":{},"coverage.html":{}}}],["js/src/lib/directives/detect",{"_index":9,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"coverage.html":{}}}],["js/src/lib/ngx",{"_index":427,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{}}}],["js/src/lib/services/face",{"_index":309,"title":{},"body":{"injectables/FaceDetectorService.html":{},"coverage.html":{}}}],["js/src/lib/services/model",{"_index":341,"title":{},"body":{"injectables/ModelLoaderService.html":{},"coverage.html":{}}}],["js/src/lib/tokens/facedetectionoptions.ts",{"_index":472,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["js/src/lib/tokens/featuretoken.ts",{"_index":474,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["js/src/lib/tokens/modelsurl.ts",{"_index":476,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["js/src/lib/tokens/modeltoken.ts",{"_index":475,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["js/src/lib/tokens/tasktypetoken.ts",{"_index":619,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["kind",{"_index":584,"title":{},"body":{"license.html":{}}}],["landmarks",{"_index":187,"title":{},"body":{"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["landmarksfeaturetoken",{"_index":380,"title":{},"body":{"injectables/ModelLoaderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":299,"title":{},"body":{"components/DetectionResultComponent.html":{},"modules/NgxFaceApiJsModule.html":{},"overview.html":{}}}],["length",{"_index":367,"title":{},"body":{"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{}}}],["liability",{"_index":600,"title":{},"body":{"license.html":{}}}],["liable",{"_index":597,"title":{},"body":{"license.html":{}}}],["license",{"_index":538,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["limitation",{"_index":560,"title":{},"body":{"license.html":{}}}],["limited",{"_index":587,"title":{},"body":{"license.html":{}}}],["line",{"_index":366,"title":{},"body":{"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{}}}],["line:max",{"_index":365,"title":{},"body":{"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{}}}],["linewidth",{"_index":293,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["literal",{"_index":142,"title":{},"body":{"classes/DetectTask.html":{},"modules/NgxFaceApiJsModule.html":{}}}],["load",{"_index":340,"title":{},"body":{"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{}}}],["load(...models",{"_index":398,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["load(models",{"_index":356,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["load(this.modelurl",{"_index":405,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["loadeddata",{"_index":333,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["loadedmodels",{"_index":343,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["loader.service",{"_index":324,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["loader.service.ts",{"_index":342,"title":{},"body":{"injectables/ModelLoaderService.html":{},"coverage.html":{}}}],["loader.service.ts:11",{"_index":349,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["loader.service.ts:18",{"_index":352,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["loader.service.ts:31",{"_index":362,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["loader.service.ts:43",{"_index":355,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["loader.service.ts:47",{"_index":357,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["loader.service.ts:62",{"_index":360,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["loadfaceexpressionmodel",{"_index":370,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["loadfacelandmarkmodel",{"_index":371,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["loadfacerecognitionmodel",{"_index":373,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["loadforfeature",{"_index":346,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["loadforfeature(tokens",{"_index":359,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["loadmtcnnmodel",{"_index":368,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["loadssdmobilenetv1model",{"_index":369,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["loadtargetmodels",{"_index":399,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["loadtargetmodels.concat(this.loadedmodels",{"_index":409,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["loadtargetmodels.length",{"_index":406,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["loadtinyfacedetectormodel",{"_index":372,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["manual",{"_index":536,"title":{},"body":{"index.html":{}}}],["map",{"_index":245,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["map(([key",{"_index":385,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["map(([result",{"_index":260,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["map(load",{"_index":404,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["map(m",{"_index":402,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["maploadfunction",{"_index":347,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["maploadfunction(model",{"_index":361,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["matching",{"_index":116,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/Schema.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":589,"title":{},"body":{"license.html":{}}}],["merge",{"_index":564,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":119,"title":{},"body":{"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"components/DetectionResultComponent.html":{}}}],["methods",{"_index":22,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{}}}],["miscellaneous",{"_index":498,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":539,"title":{},"body":{"index.html":{},"license.html":{}}}],["model",{"_index":323,"title":{},"body":{"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{}}}],["modelloader",{"_index":314,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["modelloaderservice",{"_index":312,"title":{"injectables/ModelLoaderService.html":{}},"body":{"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"coverage.html":{}}}],["models",{"_index":358,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["modelsurl",{"_index":374,"title":{},"body":{"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modeltoken",{"_index":353,"title":{},"body":{"injectables/ModelLoaderService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["modelurl",{"_index":350,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["modify",{"_index":563,"title":{},"body":{"license.html":{}}}],["module",{"_index":414,"title":{"modules/NgxFaceApiJsModule.html":{}},"body":{"modules/NgxFaceApiJsModule.html":{},"overview.html":{}}}],["modules",{"_index":416,"title":{"modules.html":{}},"body":{"modules/NgxFaceApiJsModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":435,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{}}}],["mtcnnmodel",{"_index":395,"title":{},"body":{"injectables/ModelLoaderService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":34,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"miscellaneous/functions.html":{}}}],["new",{"_index":64,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":364,"title":{},"body":{"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{}}}],["ng",{"_index":523,"title":{},"body":{"index.html":{}}}],["ngadd",{"_index":466,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ngadd(options",{"_index":504,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ngafterviewinit",{"_index":23,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["ngmodule",{"_index":436,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{}}}],["ngondestroy",{"_index":216,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["ngoninit",{"_index":24,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"components/DetectionResultComponent.html":{}}}],["ngx",{"_index":527,"title":{},"body":{"index.html":{}}}],["ngxfaceapijs",{"_index":507,"title":{},"body":{"index.html":{}}}],["ngxfaceapijsmodule",{"_index":415,"title":{"modules/NgxFaceApiJsModule.html":{}},"body":{"modules/NgxFaceApiJsModule.html":{},"modules.html":{},"overview.html":{}}}],["noninfringement",{"_index":593,"title":{},"body":{"license.html":{}}}],["notice",{"_index":577,"title":{},"body":{"license.html":{}}}],["observable",{"_index":317,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["obtaining",{"_index":551,"title":{},"body":{"license.html":{}}}],["of(task",{"_index":328,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["ondestroy",{"_index":205,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"components/DetectionResultComponent.html":{}}}],["onresize",{"_index":253,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["option",{"_index":144,"title":{},"body":{"classes/DetectTask.html":{},"injectables/FaceDetectorService.html":{}}}],["option.realtime",{"_index":173,"title":{},"body":{"classes/DetectTask.html":{}}}],["option.tokens",{"_index":171,"title":{},"body":{"classes/DetectTask.html":{}}}],["option.type",{"_index":169,"title":{},"body":{"classes/DetectTask.html":{}}}],["optional",{"_index":35,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":434,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options.facedetectionoptions",{"_index":446,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{}}}],["options.modelsurl",{"_index":445,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{}}}],["originx",{"_index":80,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["originy",{"_index":81,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["otherwise",{"_index":605,"title":{},"body":{"license.html":{}}}],["out",{"_index":426,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{},"license.html":{},"overview.html":{}}}],["overlay",{"_index":28,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["overlayconfig",{"_index":54,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["overlaymodule",{"_index":441,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{}}}],["overlayref",{"_index":89,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["overlayref.attach(portal",{"_index":100,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["overlayx",{"_index":76,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["overlayy",{"_index":78,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["overview",{"_index":612,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":479,"title":{"dependencies.html":{}},"body":{}}],["package.json",{"_index":529,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":32,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":92,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["particular",{"_index":591,"title":{},"body":{"license.html":{}}}],["patten",{"_index":158,"title":{},"body":{"classes/DetectTask.html":{}}}],["patten.every(item",{"_index":177,"title":{},"body":{"classes/DetectTask.html":{}}}],["permission",{"_index":545,"title":{},"body":{"license.html":{}}}],["permit",{"_index":571,"title":{},"body":{"license.html":{}}}],["person",{"_index":550,"title":{},"body":{"license.html":{}}}],["persons",{"_index":572,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":259,"title":{},"body":{"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{}}}],["portal",{"_index":97,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["portalmodule",{"_index":442,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{}}}],["portions",{"_index":581,"title":{},"body":{"license.html":{}}}],["position",{"_index":73,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"components/DetectionResultComponent.html":{}}}],["positionstrategy",{"_index":71,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["private",{"_index":134,"title":{},"body":{"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{}}}],["project",{"_index":454,"title":{},"body":{"interfaces/Schema.html":{}}}],["projects/.../facedetectionoptions.ts",{"_index":621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../featuretoken.ts",{"_index":616,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../index.ts",{"_index":500,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../modelsurl.ts",{"_index":622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../modeltoken.ts",{"_index":617,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../tasktypetoken.ts",{"_index":618,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/ngx",{"_index":6,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/Schema.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":145,"title":{},"body":{"classes/DetectTask.html":{},"injectables/ModelLoaderService.html":{}}}],["promise(resolver",{"_index":175,"title":{},"body":{"classes/DetectTask.html":{}}}],["properties",{"_index":15,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/ModelLoaderService.html":{},"interfaces/Schema.html":{}}}],["protected",{"_index":16,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["provide",{"_index":95,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"modules/NgxFaceApiJsModule.html":{}}}],["provided",{"_index":582,"title":{},"body":{"license.html":{}}}],["provider",{"_index":437,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{}}}],["providers",{"_index":94,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"modules/NgxFaceApiJsModule.html":{},"overview.html":{}}}],["providers.push",{"_index":447,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{}}}],["public",{"_index":19,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{}}}],["publish",{"_index":565,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":592,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":132,"title":{},"body":{"classes/DetectTask.html":{}}}],["realtime",{"_index":67,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{}}}],["recognition",{"_index":509,"title":{},"body":{"index.html":{}}}],["reduce((a",{"_index":387,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["renderer",{"_index":221,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["renderer2",{"_index":222,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["reqiredmodels",{"_index":410,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["reset",{"_index":425,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{},"overview.html":{}}}],["resize",{"_index":212,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["resizeresults",{"_index":283,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["resizeresults.map",{"_index":288,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["resolver",{"_index":176,"title":{},"body":{"classes/DetectTask.html":{}}}],["resolvetarget",{"_index":140,"title":{},"body":{"classes/DetectTask.html":{}}}],["restriction",{"_index":558,"title":{},"body":{"license.html":{}}}],["result",{"_index":115,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/Schema.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.component",{"_index":62,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["result.component.html",{"_index":210,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["result.component.scss",{"_index":208,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["result.component.ts",{"_index":204,"title":{},"body":{"components/DetectionResultComponent.html":{},"coverage.html":{}}}],["result.component.ts:15",{"_index":238,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["result.component.ts:18",{"_index":235,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["result.component.ts:20",{"_index":240,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["result.component.ts:25",{"_index":237,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["result.component.ts:28",{"_index":226,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["result.component.ts:30",{"_index":225,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["result.component.ts:39",{"_index":228,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["result.component.ts:46",{"_index":232,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["result.component.ts:56",{"_index":231,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["result.component.ts:59",{"_index":230,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["result.detection",{"_index":275,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["result/detection",{"_index":61,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"components/DetectionResultComponent.html":{},"coverage.html":{}}}],["results",{"_index":117,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/Schema.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results.map(result",{"_index":273,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["return",{"_index":167,"title":{},"body":{"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{}}}],["returns",{"_index":47,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":561,"title":{},"body":{"license.html":{}}}],["rule",{"_index":501,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rxjs",{"_index":244,"title":{},"body":{"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":247,"title":{},"body":{"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{}}}],["schema",{"_index":450,"title":{"interfaces/Schema.html":{}},"body":{"interfaces/Schema.html":{},"coverage.html":{}}}],["schematics",{"_index":525,"title":{},"body":{"index.html":{}}}],["scrollstrategy",{"_index":84,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["see",{"_index":513,"title":{},"body":{"index.html":{}}}],["selector",{"_index":101,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"components/DetectionResultComponent.html":{}}}],["sell",{"_index":569,"title":{},"body":{"license.html":{}}}],["services",{"_index":443,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{}}}],["services/face",{"_index":248,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["shall",{"_index":578,"title":{},"body":{"license.html":{}}}],["sharereplay",{"_index":322,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["sharereplay(1",{"_index":337,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["single",{"_index":111,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"miscellaneous/typealiases.html":{}}}],["software",{"_index":553,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/Schema.html":{}}}],["src/app/app.module.ts",{"_index":534,"title":{},"body":{"index.html":{}}}],["src/styles.css",{"_index":532,"title":{},"body":{"index.html":{}}}],["ssdmobilenetv1model",{"_index":375,"title":{},"body":{"injectables/ModelLoaderService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ssdmobilenetv1model].concat(object",{"_index":383,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["stackblitz(editor",{"_index":518,"title":{},"body":{"index.html":{}}}],["start",{"_index":77,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["started",{"_index":506,"title":{"index.html":{},"license.html":{}},"body":{}}],["startwith",{"_index":246,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["statements",{"_index":458,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":430,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{}}}],["stream",{"_index":18,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["string",{"_index":156,"title":{},"body":{"classes/DetectTask.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/Schema.html":{}}}],["styles",{"_index":200,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["styleurls",{"_index":206,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["subject",{"_index":236,"title":{},"body":{"components/DetectionResultComponent.html":{},"license.html":{}}}],["sublicense",{"_index":567,"title":{},"body":{"license.html":{}}}],["subscribe(result",{"_index":262,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["subscription",{"_index":213,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["substantial",{"_index":580,"title":{},"body":{"license.html":{}}}],["super(el",{"_index":108,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["support",{"_index":609,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":610,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":393,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["switchmap",{"_index":321,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["switchmap((image",{"_index":338,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["switchmap((video",{"_index":331,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["switchmap(async",{"_index":329,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["t",{"_index":181,"title":{},"body":{"classes/DetectTask.html":{},"injectables/FaceDetectorService.html":{}}}],["t.run",{"_index":196,"title":{},"body":{"classes/DetectTask.html":{}}}],["t.target",{"_index":330,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["t.withfaceexpressions().run",{"_index":193,"title":{},"body":{"classes/DetectTask.html":{}}}],["t.withfaceexpressions().withfacelandmarks().run",{"_index":192,"title":{},"body":{"classes/DetectTask.html":{}}}],["t.withfaceexpressions().withfacelandmarks().withfacedescriptor().run",{"_index":190,"title":{},"body":{"classes/DetectTask.html":{}}}],["t.withfaceexpressions().withfacelandmarks().withfacedescriptors().run",{"_index":191,"title":{},"body":{"classes/DetectTask.html":{}}}],["t.withfacelandmarks().run",{"_index":195,"title":{},"body":{"classes/DetectTask.html":{}}}],["table",{"_index":478,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":477,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":133,"title":{},"body":{"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{}}}],["target.includes(item",{"_index":178,"title":{},"body":{"classes/DetectTask.html":{}}}],["target.videoheight",{"_index":269,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["target.videowidth",{"_index":270,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["targetresolver",{"_index":135,"title":{},"body":{"classes/DetectTask.html":{}}}],["task",{"_index":20,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{}}}],["task.detect(this.option",{"_index":336,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["task.realtime",{"_index":327,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["tasktypetoken",{"_index":40,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"miscellaneous/typealiases.html":{}}}],["template",{"_index":199,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["templateurl",{"_index":209,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["tensorflow.js",{"_index":515,"title":{},"body":{"index.html":{}}}],["this.canvas",{"_index":287,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["this.canvas.height",{"_index":277,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["this.canvas.width",{"_index":276,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["this.canvasel.nativeelement",{"_index":251,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["this.convertresulttoarray(result",{"_index":261,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["this.draw(result",{"_index":263,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["this.getreqiredmodels(tokens",{"_index":411,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["this.injector",{"_index":93,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["this.isloaded(m",{"_index":401,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["this.ismatchpattern(['expressions",{"_index":186,"title":{},"body":{"classes/DetectTask.html":{}}}],["this.ismatchpattern(['landmarks",{"_index":194,"title":{},"body":{"classes/DetectTask.html":{}}}],["this.load(...reqiredmodels",{"_index":413,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["this.loadedmodels",{"_index":408,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["this.loadedmodels.includes(model",{"_index":397,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["this.maploadfunction(m",{"_index":403,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["this.modelloader.loadforfeature(task.tokens",{"_index":334,"title":{},"body":{"injectables/FaceDetectorService.html":{}}}],["this.overlay",{"_index":72,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["this.overlay.create(config",{"_index":90,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["this.overlay.scrollstrategies.reposition",{"_index":85,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["this.realtime",{"_index":172,"title":{},"body":{"classes/DetectTask.html":{}}}],["this.renderer.setstyle(this.el.nativeelement",{"_index":278,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["this.resize$.next('onresize",{"_index":254,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["this.resize$.pipe(startwith('init",{"_index":258,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["this.stream",{"_index":68,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["this.subscription.add",{"_index":256,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["this.subscription.unsubscribe",{"_index":264,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["this.target",{"_index":174,"title":{},"body":{"classes/DetectTask.html":{}}}],["this.targetresolver",{"_index":168,"title":{},"body":{"classes/DetectTask.html":{}}}],["this.task",{"_index":63,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["this.task.resolvetarget(this.el.nativeelement",{"_index":69,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["this.task.target",{"_index":266,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["this.task.tokens.includes('expressions",{"_index":285,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["this.task.tokens.includes('landmarks",{"_index":291,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["this.task.tokens.length",{"_index":279,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["this.tokens",{"_index":170,"title":{},"body":{"classes/DetectTask.html":{}}}],["this.tokens.push(...tokens",{"_index":180,"title":{},"body":{"classes/DetectTask.html":{}}}],["this.type",{"_index":65,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{}}}],["this.with",{"_index":66,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["tinyfacedetectormodel",{"_index":396,"title":{},"body":{"injectables/ModelLoaderService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tokens",{"_index":58,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{}}}],["tokens.includes(key",{"_index":386,"title":{},"body":{"injectables/ModelLoaderService.html":{}}}],["top",{"_index":79,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["tort",{"_index":604,"title":{},"body":{"license.html":{}}}],["tree",{"_index":202,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["true",{"_index":114,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{}}}],["tslib",{"_index":494,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":363,"title":{},"body":{"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{}}}],["type",{"_index":21,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{},"injectables/FaceDetectorService.html":{},"injectables/ModelLoaderService.html":{},"modules/NgxFaceApiJsModule.html":{},"interfaces/Schema.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":614,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["undefined",{"_index":99,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{}}}],["update",{"_index":528,"title":{},"body":{"index.html":{}}}],["url",{"_index":626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usage",{"_index":521,"title":{},"body":{"index.html":{}}}],["use",{"_index":562,"title":{},"body":{"license.html":{}}}],["useclass",{"_index":448,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{}}}],["usevalue",{"_index":96,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"modules/NgxFaceApiJsModule.html":{}}}],["value",{"_index":44,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"components/DetectionResultComponent.html":{},"injectables/ModelLoaderService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":302,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["variable",{"_index":473,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":620,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["video[allfaces",{"_index":112,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["video[allfaces]'},{'name",{"_index":305,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["viewchild",{"_index":241,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["viewchild('canvas",{"_index":234,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["void",{"_index":48,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{},"classes/DetectTask.html":{},"components/DetectionResultComponent.html":{}}}],["warranties",{"_index":588,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":583,"title":{},"body":{"license.html":{}}}],["whether",{"_index":601,"title":{},"body":{"license.html":{}}}],["width",{"_index":267,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["wiki",{"_index":537,"title":{},"body":{"index.html":{}}}],["window:resize",{"_index":218,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["with(...tokens",{"_index":179,"title":{},"body":{"classes/DetectTask.html":{}}}],["with(tokens",{"_index":159,"title":{},"body":{"classes/DetectTask.html":{}}}],["withflexibledimensions(false",{"_index":82,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["withlockedposition(true",{"_index":83,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["without",{"_index":557,"title":{},"body":{"license.html":{}}}],["withpositions",{"_index":75,"title":{},"body":{"classes/AbstractDetectDirective.html":{},"directives/DetectAllFacesImgDirective.html":{},"directives/DetectAllFacesVideoDirective.html":{},"directives/DetectSingleFaceImgDirective.html":{}}}],["withscore",{"_index":282,"title":{},"body":{"components/DetectionResultComponent.html":{}}}],["wrapper",{"_index":510,"title":{},"body":{"index.html":{}}}],["yamazaki",{"_index":544,"title":{},"body":{"license.html":{}}}],["yes",{"_index":154,"title":{},"body":{"classes/DetectTask.html":{},"injectables/FaceDetectorService.html":{}}}],["yuki",{"_index":543,"title":{},"body":{"license.html":{}}}],["zone.js",{"_index":496,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":424,"title":{},"body":{"modules/NgxFaceApiJsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractDetectDirective.html":{"url":"classes/AbstractDetectDirective.html","title":"class - AbstractDetectDirective","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractDetectDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-face-api-js/src/lib/directives/detect-all-faces.directive.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            OnInit\n                            AfterViewInit\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                stream\n                            \n                            \n                                    Public\n                                task\n                            \n                            \n                                    Protected\n                                    Abstract\n                                type\n                            \n                            \n                                    Protected\n                                    Abstract\n                                with\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, overlay: Overlay, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-face-api-js/src/lib/directives/detect-all-faces.directive.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        overlay\n                                                  \n                                                        \n                                                                    Overlay\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                            stream\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-face-api-js/src/lib/directives/detect-all-faces.directive.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            task\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DetectTask\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-face-api-js/src/lib/directives/detect-all-faces.directive.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TaskTypeToken\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-face-api-js/src/lib/directives/detect-all-faces.directive.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                            with\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FeatureToken[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-face-api-js/src/lib/directives/detect-all-faces.directive.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-face-api-js/src/lib/directives/detect-all-faces.directive.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-face-api-js/src/lib/directives/detect-all-faces.directive.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, Input, ElementRef, Injector, OnInit, AfterViewInit } from '@angular/core';\nimport { Overlay, OverlayConfig } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { FeatureToken, TaskTypeToken } from '../tokens';\nimport { DetectTask } from '../classes';\nimport { DetectionResultComponent } from '../components/detection-result/detection-result.component';\n\nabstract class AbstractDetectDirective implements OnInit, AfterViewInit {\n\n  protected abstract with: FeatureToken[] = [];\n  protected abstract type: TaskTypeToken;\n  protected abstract stream: boolean;\n\n  constructor(\n    protected el: ElementRef,\n    protected overlay: Overlay,\n    protected injector: Injector,\n  ) { }\n  public task: DetectTask;\n\n  ngOnInit() {\n    this.task = new DetectTask({\n      type: this.type,\n      tokens: this.with,\n      realtime: this.stream,\n    });\n  }\n  ngAfterViewInit() {\n    this.task.resolveTarget(this.el.nativeElement);\n\n    const positionStrategy = this.overlay\n      .position()\n      .flexibleConnectedTo(this.el)\n      .withPositions([\n        {\n          overlayX: 'start', overlayY: 'top',\n          originX: 'start',  originY: 'top'\n        },\n      ])\n      .withFlexibleDimensions(false)\n      .withLockedPosition(true)\n      ;\n\n    const scrollStrategy = this.overlay.scrollStrategies.reposition();\n    const config = new OverlayConfig({\n      positionStrategy,\n      scrollStrategy,\n      hasBackdrop: false,\n    });\n    const overlayRef = this.overlay.create(config);\n    const injector = Injector.create({\n      parent: this.injector,\n      providers: [\n        {\n          provide: DetectTask,\n          useValue: this.task,\n        }\n      ],\n    });\n\n    const portal = new ComponentPortal(DetectionResultComponent, undefined, injector);\n    overlayRef.attach(portal);\n  }\n}\n\n@Directive({\n  selector: 'img[allFaces]',\n  exportAs: 'faces',\n})\nexport class DetectAllFacesImgDirective extends AbstractDetectDirective {\n\n  @Input() public with: FeatureToken[] = [];\n\n  constructor(\n    el: ElementRef,\n    overlay: Overlay,\n    injector: Injector,\n  ) {\n    super(el, overlay, injector);\n  }\n\n  protected type: TaskTypeToken = 'all';\n  protected stream = false;\n\n}\n\n@Directive({\n  selector: 'img[singleFace]',\n  exportAs: 'face',\n})\nexport class DetectSingleFaceImgDirective\n  extends AbstractDetectDirective\n  implements OnInit {\n\n  @Input() public with: FeatureToken[] = [];\n\n  constructor(\n    el: ElementRef,\n    overlay: Overlay,\n    injector: Injector,\n  ) {\n    super(el, overlay, injector);\n  }\n\n  protected type: TaskTypeToken = 'single';\n  protected stream = false;\n\n  ngOnInit() {\n    this.task = new DetectTask({\n      type: this.type,\n      tokens: this.with,\n      realtime: this.stream,\n    });\n  }\n\n}\n\n\n@Directive({\n  selector: 'video[allFaces]',\n  exportAs: 'faces',\n})\nexport class DetectAllFacesVideoDirective extends AbstractDetectDirective {\n  @Input() public with: FeatureToken[] = [];\n\n  constructor(\n    el: ElementRef,\n    overlay: Overlay,\n    injector: Injector,\n  ) {\n    super(el, overlay, injector);\n  }\n\n  protected type: TaskTypeToken = 'all';\n  protected stream = true;\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DetectAllFacesImgDirective.html":{"url":"directives/DetectAllFacesImgDirective.html","title":"directive - DetectAllFacesImgDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DetectAllFacesImgDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-face-api-js/src/lib/directives/detect-all-faces.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        img[allFaces]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                stream\n                            \n                            \n                                    Protected\n                                type\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                with\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, overlay: Overlay, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-face-api-js/src/lib/directives/detect-all-faces.directive.ts:72\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        overlay\n                                                  \n                                                        \n                                                                    Overlay\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        with\n                    \n                \n                \n                    \n                        Type :         FeatureToken[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-face-api-js/src/lib/directives/detect-all-faces.directive.ts:72\n                            \n                        \n            \n        \n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            stream\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-face-api-js/src/lib/directives/detect-all-faces.directive.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TaskTypeToken\n\n                        \n                    \n                    \n                        \n                            Default value : 'all'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-face-api-js/src/lib/directives/detect-all-faces.directive.ts:82\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input, ElementRef, Injector, OnInit, AfterViewInit } from '@angular/core';\nimport { Overlay, OverlayConfig } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { FeatureToken, TaskTypeToken } from '../tokens';\nimport { DetectTask } from '../classes';\nimport { DetectionResultComponent } from '../components/detection-result/detection-result.component';\n\nabstract class AbstractDetectDirective implements OnInit, AfterViewInit {\n\n  protected abstract with: FeatureToken[] = [];\n  protected abstract type: TaskTypeToken;\n  protected abstract stream: boolean;\n\n  constructor(\n    protected el: ElementRef,\n    protected overlay: Overlay,\n    protected injector: Injector,\n  ) { }\n  public task: DetectTask;\n\n  ngOnInit() {\n    this.task = new DetectTask({\n      type: this.type,\n      tokens: this.with,\n      realtime: this.stream,\n    });\n  }\n  ngAfterViewInit() {\n    this.task.resolveTarget(this.el.nativeElement);\n\n    const positionStrategy = this.overlay\n      .position()\n      .flexibleConnectedTo(this.el)\n      .withPositions([\n        {\n          overlayX: 'start', overlayY: 'top',\n          originX: 'start',  originY: 'top'\n        },\n      ])\n      .withFlexibleDimensions(false)\n      .withLockedPosition(true)\n      ;\n\n    const scrollStrategy = this.overlay.scrollStrategies.reposition();\n    const config = new OverlayConfig({\n      positionStrategy,\n      scrollStrategy,\n      hasBackdrop: false,\n    });\n    const overlayRef = this.overlay.create(config);\n    const injector = Injector.create({\n      parent: this.injector,\n      providers: [\n        {\n          provide: DetectTask,\n          useValue: this.task,\n        }\n      ],\n    });\n\n    const portal = new ComponentPortal(DetectionResultComponent, undefined, injector);\n    overlayRef.attach(portal);\n  }\n}\n\n@Directive({\n  selector: 'img[allFaces]',\n  exportAs: 'faces',\n})\nexport class DetectAllFacesImgDirective extends AbstractDetectDirective {\n\n  @Input() public with: FeatureToken[] = [];\n\n  constructor(\n    el: ElementRef,\n    overlay: Overlay,\n    injector: Injector,\n  ) {\n    super(el, overlay, injector);\n  }\n\n  protected type: TaskTypeToken = 'all';\n  protected stream = false;\n\n}\n\n@Directive({\n  selector: 'img[singleFace]',\n  exportAs: 'face',\n})\nexport class DetectSingleFaceImgDirective\n  extends AbstractDetectDirective\n  implements OnInit {\n\n  @Input() public with: FeatureToken[] = [];\n\n  constructor(\n    el: ElementRef,\n    overlay: Overlay,\n    injector: Injector,\n  ) {\n    super(el, overlay, injector);\n  }\n\n  protected type: TaskTypeToken = 'single';\n  protected stream = false;\n\n  ngOnInit() {\n    this.task = new DetectTask({\n      type: this.type,\n      tokens: this.with,\n      realtime: this.stream,\n    });\n  }\n\n}\n\n\n@Directive({\n  selector: 'video[allFaces]',\n  exportAs: 'faces',\n})\nexport class DetectAllFacesVideoDirective extends AbstractDetectDirective {\n  @Input() public with: FeatureToken[] = [];\n\n  constructor(\n    el: ElementRef,\n    overlay: Overlay,\n    injector: Injector,\n  ) {\n    super(el, overlay, injector);\n  }\n\n  protected type: TaskTypeToken = 'all';\n  protected stream = true;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DetectAllFacesVideoDirective.html":{"url":"directives/DetectAllFacesVideoDirective.html","title":"directive - DetectAllFacesVideoDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DetectAllFacesVideoDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-face-api-js/src/lib/directives/detect-all-faces.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        video[allFaces]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                stream\n                            \n                            \n                                    Protected\n                                type\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                with\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, overlay: Overlay, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-face-api-js/src/lib/directives/detect-all-faces.directive.ts:124\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        overlay\n                                                  \n                                                        \n                                                                    Overlay\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        with\n                    \n                \n                \n                    \n                        Type :         FeatureToken[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-face-api-js/src/lib/directives/detect-all-faces.directive.ts:124\n                            \n                        \n            \n        \n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            stream\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-face-api-js/src/lib/directives/detect-all-faces.directive.ts:135\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TaskTypeToken\n\n                        \n                    \n                    \n                        \n                            Default value : 'all'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-face-api-js/src/lib/directives/detect-all-faces.directive.ts:134\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input, ElementRef, Injector, OnInit, AfterViewInit } from '@angular/core';\nimport { Overlay, OverlayConfig } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { FeatureToken, TaskTypeToken } from '../tokens';\nimport { DetectTask } from '../classes';\nimport { DetectionResultComponent } from '../components/detection-result/detection-result.component';\n\nabstract class AbstractDetectDirective implements OnInit, AfterViewInit {\n\n  protected abstract with: FeatureToken[] = [];\n  protected abstract type: TaskTypeToken;\n  protected abstract stream: boolean;\n\n  constructor(\n    protected el: ElementRef,\n    protected overlay: Overlay,\n    protected injector: Injector,\n  ) { }\n  public task: DetectTask;\n\n  ngOnInit() {\n    this.task = new DetectTask({\n      type: this.type,\n      tokens: this.with,\n      realtime: this.stream,\n    });\n  }\n  ngAfterViewInit() {\n    this.task.resolveTarget(this.el.nativeElement);\n\n    const positionStrategy = this.overlay\n      .position()\n      .flexibleConnectedTo(this.el)\n      .withPositions([\n        {\n          overlayX: 'start', overlayY: 'top',\n          originX: 'start',  originY: 'top'\n        },\n      ])\n      .withFlexibleDimensions(false)\n      .withLockedPosition(true)\n      ;\n\n    const scrollStrategy = this.overlay.scrollStrategies.reposition();\n    const config = new OverlayConfig({\n      positionStrategy,\n      scrollStrategy,\n      hasBackdrop: false,\n    });\n    const overlayRef = this.overlay.create(config);\n    const injector = Injector.create({\n      parent: this.injector,\n      providers: [\n        {\n          provide: DetectTask,\n          useValue: this.task,\n        }\n      ],\n    });\n\n    const portal = new ComponentPortal(DetectionResultComponent, undefined, injector);\n    overlayRef.attach(portal);\n  }\n}\n\n@Directive({\n  selector: 'img[allFaces]',\n  exportAs: 'faces',\n})\nexport class DetectAllFacesImgDirective extends AbstractDetectDirective {\n\n  @Input() public with: FeatureToken[] = [];\n\n  constructor(\n    el: ElementRef,\n    overlay: Overlay,\n    injector: Injector,\n  ) {\n    super(el, overlay, injector);\n  }\n\n  protected type: TaskTypeToken = 'all';\n  protected stream = false;\n\n}\n\n@Directive({\n  selector: 'img[singleFace]',\n  exportAs: 'face',\n})\nexport class DetectSingleFaceImgDirective\n  extends AbstractDetectDirective\n  implements OnInit {\n\n  @Input() public with: FeatureToken[] = [];\n\n  constructor(\n    el: ElementRef,\n    overlay: Overlay,\n    injector: Injector,\n  ) {\n    super(el, overlay, injector);\n  }\n\n  protected type: TaskTypeToken = 'single';\n  protected stream = false;\n\n  ngOnInit() {\n    this.task = new DetectTask({\n      type: this.type,\n      tokens: this.with,\n      realtime: this.stream,\n    });\n  }\n\n}\n\n\n@Directive({\n  selector: 'video[allFaces]',\n  exportAs: 'faces',\n})\nexport class DetectAllFacesVideoDirective extends AbstractDetectDirective {\n  @Input() public with: FeatureToken[] = [];\n\n  constructor(\n    el: ElementRef,\n    overlay: Overlay,\n    injector: Injector,\n  ) {\n    super(el, overlay, injector);\n  }\n\n  protected type: TaskTypeToken = 'all';\n  protected stream = true;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DetectSingleFaceImgDirective.html":{"url":"directives/DetectSingleFaceImgDirective.html","title":"directive - DetectSingleFaceImgDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DetectSingleFaceImgDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-face-api-js/src/lib/directives/detect-all-faces.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        img[singleFace]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                stream\n                            \n                            \n                                    Protected\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                with\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, overlay: Overlay, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-face-api-js/src/lib/directives/detect-all-faces.directive.ts:95\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        overlay\n                                                  \n                                                        \n                                                                    Overlay\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        with\n                    \n                \n                \n                    \n                        Type :         FeatureToken[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-face-api-js/src/lib/directives/detect-all-faces.directive.ts:95\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-face-api-js/src/lib/directives/detect-all-faces.directive.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            stream\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-face-api-js/src/lib/directives/detect-all-faces.directive.ts:106\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TaskTypeToken\n\n                        \n                    \n                    \n                        \n                            Default value : 'single'\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-face-api-js/src/lib/directives/detect-all-faces.directive.ts:105\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input, ElementRef, Injector, OnInit, AfterViewInit } from '@angular/core';\nimport { Overlay, OverlayConfig } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { FeatureToken, TaskTypeToken } from '../tokens';\nimport { DetectTask } from '../classes';\nimport { DetectionResultComponent } from '../components/detection-result/detection-result.component';\n\nabstract class AbstractDetectDirective implements OnInit, AfterViewInit {\n\n  protected abstract with: FeatureToken[] = [];\n  protected abstract type: TaskTypeToken;\n  protected abstract stream: boolean;\n\n  constructor(\n    protected el: ElementRef,\n    protected overlay: Overlay,\n    protected injector: Injector,\n  ) { }\n  public task: DetectTask;\n\n  ngOnInit() {\n    this.task = new DetectTask({\n      type: this.type,\n      tokens: this.with,\n      realtime: this.stream,\n    });\n  }\n  ngAfterViewInit() {\n    this.task.resolveTarget(this.el.nativeElement);\n\n    const positionStrategy = this.overlay\n      .position()\n      .flexibleConnectedTo(this.el)\n      .withPositions([\n        {\n          overlayX: 'start', overlayY: 'top',\n          originX: 'start',  originY: 'top'\n        },\n      ])\n      .withFlexibleDimensions(false)\n      .withLockedPosition(true)\n      ;\n\n    const scrollStrategy = this.overlay.scrollStrategies.reposition();\n    const config = new OverlayConfig({\n      positionStrategy,\n      scrollStrategy,\n      hasBackdrop: false,\n    });\n    const overlayRef = this.overlay.create(config);\n    const injector = Injector.create({\n      parent: this.injector,\n      providers: [\n        {\n          provide: DetectTask,\n          useValue: this.task,\n        }\n      ],\n    });\n\n    const portal = new ComponentPortal(DetectionResultComponent, undefined, injector);\n    overlayRef.attach(portal);\n  }\n}\n\n@Directive({\n  selector: 'img[allFaces]',\n  exportAs: 'faces',\n})\nexport class DetectAllFacesImgDirective extends AbstractDetectDirective {\n\n  @Input() public with: FeatureToken[] = [];\n\n  constructor(\n    el: ElementRef,\n    overlay: Overlay,\n    injector: Injector,\n  ) {\n    super(el, overlay, injector);\n  }\n\n  protected type: TaskTypeToken = 'all';\n  protected stream = false;\n\n}\n\n@Directive({\n  selector: 'img[singleFace]',\n  exportAs: 'face',\n})\nexport class DetectSingleFaceImgDirective\n  extends AbstractDetectDirective\n  implements OnInit {\n\n  @Input() public with: FeatureToken[] = [];\n\n  constructor(\n    el: ElementRef,\n    overlay: Overlay,\n    injector: Injector,\n  ) {\n    super(el, overlay, injector);\n  }\n\n  protected type: TaskTypeToken = 'single';\n  protected stream = false;\n\n  ngOnInit() {\n    this.task = new DetectTask({\n      type: this.type,\n      tokens: this.with,\n      realtime: this.stream,\n    });\n  }\n\n}\n\n\n@Directive({\n  selector: 'video[allFaces]',\n  exportAs: 'faces',\n})\nexport class DetectAllFacesVideoDirective extends AbstractDetectDirective {\n  @Input() public with: FeatureToken[] = [];\n\n  constructor(\n    el: ElementRef,\n    overlay: Overlay,\n    injector: Injector,\n  ) {\n    super(el, overlay, injector);\n  }\n\n  protected type: TaskTypeToken = 'all';\n  protected stream = true;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DetectTask.html":{"url":"classes/DetectTask.html","title":"class - DetectTask","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DetectTask\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-face-api-js/src/lib/classes/DetectTask.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                realtime\n                            \n                            \n                                    Public\n                                target\n                            \n                            \n                                    Private\n                                targetResolver\n                            \n                            \n                                    Public\n                                    Readonly\n                                tokens\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                detect\n                            \n                            \n                                    Private\n                                isMatchPattern\n                            \n                            \n                                    Public\n                                with\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    resolveTarget\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(option: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-face-api-js/src/lib/classes/DetectTask.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        option\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            realtime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-face-api-js/src/lib/classes/DetectTask.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-face-api-js/src/lib/classes/DetectTask.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            targetResolver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-face-api-js/src/lib/classes/DetectTask.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            tokens\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FeatureToken[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-face-api-js/src/lib/classes/DetectTask.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TaskTypeToken\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-face-api-js/src/lib/classes/DetectTask.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            detect\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    detect(option?: faceapi.FaceDetectionOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-face-api-js/src/lib/classes/DetectTask.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    option\n                                    \n                                                faceapi.FaceDetectionOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isMatchPattern\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isMatchPattern(patten: string[], target: string[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-face-api-js/src/lib/classes/DetectTask.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patten\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    target\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            with\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    with(tokens: FeatureToken[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-face-api-js/src/lib/classes/DetectTask.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tokens\n                                    \n                                                FeatureToken[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        resolveTarget\n                    \n                \n\n                \n                    \n                        getresolveTarget()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-face-api-js/src/lib/classes/DetectTask.ts:6\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import * as faceapi from 'face-api.js';\nimport { TaskTypeToken, FeatureToken } from '../tokens';\n\nexport class DetectTask {\n\n  public get resolveTarget(): (el: HTMLImageElement | HTMLVideoElement) => void {\n    return this.targetResolver;\n  }\n\n  public readonly type: TaskTypeToken;\n  public readonly tokens: FeatureToken[];\n  public readonly realtime: boolean;\n\n  constructor(option: {\n    type: TaskTypeToken,\n    tokens: FeatureToken[],\n    realtime?: boolean,\n\n  }) {\n    this.type = option.type;\n    this.tokens = option.tokens;\n    this.realtime = option.realtime || false;\n    this.target = new Promise(resolver => this.targetResolver = resolver);\n  }\n\n  public target: Promise;\n\n  private targetResolver: (el: HTMLImageElement | HTMLVideoElement) => void;\n\n  private isMatchPattern(patten: string[], target: string[]): boolean {\n    return patten.every(item => target.includes(item));\n  }\n\n  public with(...tokens: FeatureToken[]): this {\n    this.tokens.push(...tokens);\n    return this;\n  }\n\n  public async detect(option?: faceapi.FaceDetectionOptions): Promise {\n    let t: faceapi.DetectAllFacesTask | faceapi.DetectSingleFaceTask;\n    if (this.type === 'all') {\n      t = faceapi.detectAllFaces(await this.target, option || undefined);\n    } else {\n      t = faceapi.detectSingleFace(await this.target, option || undefined);\n    }\n\n    if (this.isMatchPattern(['expressions', 'landmarks', 'descriptors'], this.tokens)) {\n      if (t instanceof faceapi.DetectSingleFaceTask) {\n        return t.withFaceExpressions().withFaceLandmarks().withFaceDescriptor().run();\n      } else if (t instanceof faceapi.DetectAllFacesTask) {\n        return t.withFaceExpressions().withFaceLandmarks().withFaceDescriptors().run();\n      }\n    } else if (this.isMatchPattern(['expressions', 'landmarks'], this.tokens)) {\n      return t.withFaceExpressions().withFaceLandmarks().run();\n    } else if (this.isMatchPattern(['expressions'], this.tokens)) {\n      return t.withFaceExpressions().run();\n    } else if (this.isMatchPattern(['landmarks'], this.tokens)) {\n      return t.withFaceLandmarks().run();\n    }\n    return t.run();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetectionResultComponent.html":{"url":"components/DetectionResultComponent.html","title":"component - DetectionResultComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DetectionResultComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-face-api-js/src/lib/components/detection-result/detection-result.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                styleUrls\n                ./detection-result.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./detection-result.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                canvasEl\n                            \n                            \n                                    Private\n                                resize$\n                            \n                            \n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                convertResultToArray\n                            \n                            \n                                    Private\n                                    Async\n                                draw\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    canvas\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(task: DetectTask, el: ElementRef, renderer: Renderer2, faceDetector: FaceDetectorService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-face-api-js/src/lib/components/detection-result/detection-result.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        task\n                                                  \n                                                        \n                                                                        DetectTask\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        faceDetector\n                                                  \n                                                        \n                                                                        FaceDetectorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-face-api-js/src/lib/components/detection-result/detection-result.component.ts:28\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            convertResultToArray\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertResultToArray(result: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-face-api-js/src/lib/components/detection-result/detection-result.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    result\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            draw\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    draw(results: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-face-api-js/src/lib/components/detection-result/detection-result.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    results\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-face-api-js/src/lib/components/detection-result/detection-result.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-face-api-js/src/lib/components/detection-result/detection-result.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            canvasEl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('canvas')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-face-api-js/src/lib/components/detection-result/detection-result.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            resize$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-face-api-js/src/lib/components/detection-result/detection-result.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subscription()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-face-api-js/src/lib/components/detection-result/detection-result.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        canvas\n                    \n                \n\n                \n                    \n                        getcanvas()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-face-api-js/src/lib/components/detection-result/detection-result.component.ts:20\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef, Renderer2, OnDestroy, HostListener } from '@angular/core';\nimport { Subscription, Subject, combineLatest } from 'rxjs';\n\nimport * as faceapi from 'face-api.js';\nimport { map, startWith } from 'rxjs/operators';\nimport { DetectTask } from '../../classes';\nimport { FaceDetectorService } from '../../services/face-detector.service';\n\n@Component({\n  templateUrl: './detection-result.component.html',\n  styleUrls: ['./detection-result.component.scss']\n})\nexport class DetectionResultComponent implements OnInit, OnDestroy {\n\n  subscription = new Subscription();\n\n  @ViewChild('canvas')\n  private canvasEl: ElementRef;\n\n  private get canvas(): HTMLCanvasElement {\n    return this.canvasEl.nativeElement;\n  }\n\n\n  private resize$ = new Subject();\n\n  @HostListener('window:resize')\n  public onResize() {\n    this.resize$.next('onResize');\n  }\n\n  constructor(\n    private task: DetectTask,\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private faceDetector: FaceDetectorService,\n  ) { }\n\n  private convertResultToArray(result: any): any[] {\n    if (Array.isArray(result)) {\n      return result;\n    }\n    return [result];\n  }\n\n  ngOnInit() {\n    this.subscription.add(\n      combineLatest(this.faceDetector.detect(this.task), this.resize$.pipe(startWith('init')))\n        .pipe(\n          map(([result]) => this.convertResultToArray(result)),\n        )\n        .subscribe(result => this.draw(result)),\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n  private async draw(results: any[]) {\n    const target = await this.task.target;\n    let { width, height } = target;\n    if (target instanceof HTMLVideoElement) {\n      height = target.videoHeight;\n      width = target.videoWidth;\n    }\n\n    const detectionsForSize = faceapi.resizeResults(\n      results.map(result => result instanceof faceapi.FaceDetection ? result : result.detection),\n      { width, height });\n\n    this.canvas.width = width;\n    this.canvas.height = height;\n    this.renderer.setStyle(this.el.nativeElement, 'width', width);\n    this.renderer.setStyle(this.el.nativeElement, 'height', height);\n    if (this.task.tokens.length >= 1) {\n      faceapi.drawDetection(this.canvas, detectionsForSize, { withScore: false });\n\n      const resizeResults = faceapi.resizeResults(results, { width, height });\n      if (this.task.tokens.includes('expressions')) {\n        faceapi.drawFaceExpressions(\n          this.canvas,\n          resizeResults.map(({ detection, expressions }) => ({ position: detection.box, expressions })),\n        );\n      }\n\n      if (this.task.tokens.includes('landmarks')) {\n        faceapi.drawLandmarks(\n          this.canvas,\n          resizeResults.map(({ landmarks }) => landmarks),\n          {\n            lineWidth: 2,\n            drawLines: true,\n            color: 'green',\n          }\n        );\n      }\n    } else {\n      faceapi.drawDetection(this.canvas, detectionsForSize);\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./detection-result.component.scss\n                \n                canvas {\n  width: 100%;\n  height: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'DetectionResultComponent', 'selector': ''}];\n    var DIRECTIVES = [{'name': 'DetectAllFacesImgDirective', 'selector': 'img[allFaces]'},{'name': 'DetectAllFacesVideoDirective', 'selector': 'video[allFaces]'},{'name': 'DetectSingleFaceImgDirective', 'selector': 'img[singleFace]'}];\n    var ACTUAL_COMPONENT = {'name': 'DetectionResultComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FaceDetectorService.html":{"url":"injectables/FaceDetectorService.html","title":"injectable - FaceDetectorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FaceDetectorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-face-api-js/src/lib/services/face-detector.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                detect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(modelLoader: ModelLoaderService, option?: faceapi.FaceDetectionOptions)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-face-api-js/src/lib/services/face-detector.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modelLoader\n                                                  \n                                                        \n                                                                        ModelLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        option\n                                                  \n                                                        \n                                                                        faceapi.FaceDetectionOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            detect\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    detect(task: DetectTask)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-face-api-js/src/lib/services/face-detector.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                DetectTask\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Optional, Inject } from '@angular/core';\nimport * as faceapi from 'face-api.js';\nimport { Observable, of, fromEvent, interval } from 'rxjs';\nimport { switchMap, shareReplay } from 'rxjs/operators';\n\nimport { ModelLoaderService } from './model-loader.service';\nimport { DetectTask } from '../classes';\nimport { FaceDetectionOptions } from '../tokens';\n\n@Injectable()\nexport class FaceDetectorService {\n\n  constructor(\n    private modelLoader: ModelLoaderService,\n    @Optional()\n    @Inject(FaceDetectionOptions)\n    private option?: faceapi.FaceDetectionOptions,\n  ) { }\n\n  public detect(task: DetectTask): Observable {\n    if (task.realtime === true) {\n      return of(task)\n        .pipe(\n          switchMap(async (t) => (await t.target)),\n          switchMap((video) => fromEvent(video, 'loadeddata')),\n          switchMap(() => this.modelLoader.loadForFeature(task.tokens)),\n          switchMap(() => interval(300)),\n          switchMap(() => task.detect(this.option)),\n          shareReplay(1),\n        );\n    }\n    return of(task)\n      .pipe(\n        switchMap(async (t) => (await t.target)),\n        switchMap((image) => fromEvent(image, 'load')),\n        switchMap(async () => await this.modelLoader.loadForFeature(task.tokens)),\n        switchMap(() => task.detect(this.option)),\n        shareReplay(1),\n      );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModelLoaderService.html":{"url":"injectables/ModelLoaderService.html","title":"injectable - ModelLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ModelLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-face-api-js/src/lib/services/model-loader.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadedModels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getReqiredModels\n                            \n                            \n                                    Public\n                                isLoaded\n                            \n                            \n                                    Async\n                                load\n                            \n                            \n                                    Async\n                                loadForFeature\n                            \n                            \n                                    Private\n                                mapLoadFunction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(modelUrl: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-face-api-js/src/lib/services/model-loader.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modelUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getReqiredModels\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getReqiredModels(tokens: FeatureToken[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-face-api-js/src/lib/services/model-loader.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tokens\n                                    \n                                                FeatureToken[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModelToken[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isLoaded\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isLoaded(model: ModelToken)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-face-api-js/src/lib/services/model-loader.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                                ModelToken\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            load\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    load(models: ModelToken[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-face-api-js/src/lib/services/model-loader.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    models\n                                    \n                                                ModelToken[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loadForFeature\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadForFeature(tokens: FeatureToken[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-face-api-js/src/lib/services/model-loader.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tokens\n                                    \n                                                FeatureToken[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            mapLoadFunction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapLoadFunction(model: ModelToken)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-face-api-js/src/lib/services/model-loader.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                                ModelToken\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadedModels\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModelToken[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-face-api-js/src/lib/services/model-loader.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\n// tslint:disable-next-line:max-line-length\nimport { loadMtcnnModel, loadSsdMobilenetv1Model, loadFaceExpressionModel, loadFaceLandmarkModel, loadTinyFaceDetectorModel, loadFaceRecognitionModel } from 'face-api.js';\n// tslint:disable-next-line:max-line-length\nimport { ModelToken, ModelsUrl, FeatureToken, SsdMobilenetv1Model, FaceExpressionModel, FaceLandmarkModel, FaceRecognitionModel, ExpressionsFeatureToken, LandmarksFeatureToken, DescriptorsFeatureToken } from '../tokens';\n\n\n@Injectable()\nexport class ModelLoaderService {\n\n  private loadedModels: ModelToken[] = [];\n\n  constructor(\n    @Inject(ModelsUrl)\n    private modelUrl: string,\n  ) { }\n\n  private getReqiredModels(tokens: FeatureToken[]): ModelToken[] {\n    return [SsdMobilenetv1Model].concat(Object\n      .entries({\n        [ExpressionsFeatureToken]: [FaceExpressionModel, SsdMobilenetv1Model],\n        [LandmarksFeatureToken]: [FaceLandmarkModel, SsdMobilenetv1Model],\n        [DescriptorsFeatureToken]: [FaceRecognitionModel],\n      })\n      .map(([key, models]) => tokens.includes(key as FeatureToken) ? models : [])\n      .reduce((a, b) => a.concat(b))\n      .filter((v, i, arr) => arr.indexOf(v) === i))\n      ;\n  }\n\n  private mapLoadFunction(model: ModelToken) {\n    switch (model) {\n      case 'SsdMobilenetv1Model':   return loadSsdMobilenetv1Model;\n      case 'MtcnnModel':            return loadMtcnnModel;\n      case 'FaceExpressionModel':   return loadFaceExpressionModel;\n      case 'FaceLandmarkModel':     return loadFaceLandmarkModel;\n      case 'FaceRecognitionModel':  return loadFaceRecognitionModel;\n      case 'TinyFaceDetectorModel': return loadTinyFaceDetectorModel;\n    }\n  }\n\n\n  public isLoaded(model: ModelToken): boolean {\n    return this.loadedModels.includes(model);\n  }\n\n  async load(...models: ModelToken[]): Promise {\n    const loadTargetModels = models\n      .filter(m => this.isLoaded(m) === false);\n\n    await Promise\n      .all(\n        loadTargetModels\n          .map(m => this.mapLoadFunction(m))\n          .map(load => load(this.modelUrl)));\n\n    if (loadTargetModels.length >= 0) {\n      this.loadedModels = loadTargetModels.concat(this.loadedModels);\n    }\n  }\n\n  async loadForFeature(tokens: FeatureToken[]): Promise {\n    const reqiredModels = this.getReqiredModels(tokens);\n    console.log({ reqiredModels });\n    await this.load(...reqiredModels);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxFaceApiJsModule.html":{"url":"modules/NgxFaceApiJsModule.html","title":"module - NgxFaceApiJsModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxFaceApiJsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxFaceApiJsModule\n\n\n\ncluster_NgxFaceApiJsModule_declarations\n\n\n\ncluster_NgxFaceApiJsModule_exports\n\n\n\n\nDetectAllFacesImgDirective\n\nDetectAllFacesImgDirective\n\n\n\nNgxFaceApiJsModule\n\nNgxFaceApiJsModule\n\nNgxFaceApiJsModule -->\n\nDetectAllFacesImgDirective->NgxFaceApiJsModule\n\n\n\n\n\nDetectAllFacesVideoDirective\n\nDetectAllFacesVideoDirective\n\nNgxFaceApiJsModule -->\n\nDetectAllFacesVideoDirective->NgxFaceApiJsModule\n\n\n\n\n\nDetectSingleFaceImgDirective\n\nDetectSingleFaceImgDirective\n\nNgxFaceApiJsModule -->\n\nDetectSingleFaceImgDirective->NgxFaceApiJsModule\n\n\n\n\n\nDetectionResultComponent\n\nDetectionResultComponent\n\nNgxFaceApiJsModule -->\n\nDetectionResultComponent->NgxFaceApiJsModule\n\n\n\n\n\nDetectAllFacesImgDirective \n\nDetectAllFacesImgDirective \n\nDetectAllFacesImgDirective  -->\n\nNgxFaceApiJsModule->DetectAllFacesImgDirective \n\n\n\n\n\nDetectAllFacesVideoDirective \n\nDetectAllFacesVideoDirective \n\nDetectAllFacesVideoDirective  -->\n\nNgxFaceApiJsModule->DetectAllFacesVideoDirective \n\n\n\n\n\nDetectSingleFaceImgDirective \n\nDetectSingleFaceImgDirective \n\nDetectSingleFaceImgDirective  -->\n\nNgxFaceApiJsModule->DetectSingleFaceImgDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-face-api-js/src/lib/ngx-face-api-js.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DetectAllFacesImgDirective\n                        \n                        \n                            DetectAllFacesVideoDirective\n                        \n                        \n                            DetectSingleFaceImgDirective\n                        \n                        \n                            DetectionResultComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            DetectionResultComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DetectAllFacesImgDirective\n                        \n                        \n                            DetectAllFacesVideoDirective\n                        \n                        \n                            DetectSingleFaceImgDirective\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-face-api-js/src/lib/ngx-face-api-js.module.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule, Provider } from '@angular/core';\nimport { ModuleWithProviders } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport * as faceapi from 'face-api.js';\nimport { ModelsUrl, FaceDetectionOptions } from './tokens';\nimport { ModelLoaderService, FaceDetectorService } from './services';\nimport { DetectionResultComponent } from './components';\n// tslint:disable-next-line:max-line-length\nimport { DetectAllFacesImgDirective, DetectSingleFaceImgDirective, DetectAllFacesVideoDirective } from './directives';\n\n@NgModule({\n  declarations: [\n    DetectionResultComponent,\n    DetectAllFacesImgDirective,\n    DetectSingleFaceImgDirective,\n    DetectAllFacesVideoDirective,\n  ],\n  imports: [\n    BrowserModule,\n    OverlayModule,\n    PortalModule,\n  ],\n  exports: [\n    DetectAllFacesImgDirective,\n    DetectSingleFaceImgDirective,\n    DetectAllFacesVideoDirective,\n  ],\n  entryComponents: [\n    DetectionResultComponent,\n  ],\n})\nexport class NgxFaceApiJsModule {\n\n  static forRoot(options: {\n    modelsUrl: string,\n    faceDetectionOptions?: faceapi.FaceDetectionOptions,\n  }): ModuleWithProviders {\n    const providers: Provider[] = [\n      {\n        provide: ModelsUrl,\n        useValue: options.modelsUrl,\n      },\n    ];\n    if (options.faceDetectionOptions) {\n      providers.push({\n        provide: FaceDetectionOptions,\n        useValue: options.faceDetectionOptions,\n      });\n    }\n    providers.push(\n      {\n        provide: ModelLoaderService,\n        useClass: ModelLoaderService,\n      },\n      {\n        provide: FaceDetectorService,\n        useClass: FaceDetectorService,\n      }\n    );\n    return { ngModule: NgxFaceApiJsModule, providers };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Schema.html":{"url":"interfaces/Schema.html","title":"interface - Schema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Schema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-face-api-js/schematics/ng-add/Schema.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        project\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        project\n                                    \n                                \n                                \n                                    \n                                        project:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Schema {\n  project: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ngx-face-api-js/schematics/ng-add/Schema.ts\n            \n            interface\n            Schema\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/schematics/ng-add/index.ts\n            \n            function\n            addBrowserIgnorePackageSetting\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/schematics/ng-add/index.ts\n            \n            function\n            addCdkOverlayPrebuiltCssToAppStyles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/schematics/ng-add/index.ts\n            \n            function\n            addDependencies\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/schematics/ng-add/index.ts\n            \n            function\n            addNgxFaceApiJsModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/schematics/ng-add/index.ts\n            \n            function\n            ngAdd\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/src/lib/classes/DetectTask.ts\n            \n            class\n            DetectTask\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/src/lib/components/detection-result/detection-result.component.ts\n            \n            component\n            DetectionResultComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/src/lib/directives/detect-all-faces.directive.ts\n            \n            directive\n            DetectAllFacesImgDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/src/lib/directives/detect-all-faces.directive.ts\n            \n            directive\n            DetectAllFacesVideoDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/src/lib/directives/detect-all-faces.directive.ts\n            \n            directive\n            DetectSingleFaceImgDirective\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/src/lib/directives/detect-all-faces.directive.ts\n            \n            class\n            AbstractDetectDirective\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/src/lib/services/face-detector.service.ts\n            \n            injectable\n            FaceDetectorService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/src/lib/services/model-loader.service.ts\n            \n            injectable\n            ModelLoaderService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/src/lib/tokens/FaceDetectionOptions.ts\n            \n            variable\n            FaceDetectionOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/src/lib/tokens/FeatureToken.ts\n            \n            variable\n            DescriptorsFeatureToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/src/lib/tokens/FeatureToken.ts\n            \n            variable\n            ExpressionsFeatureToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/src/lib/tokens/FeatureToken.ts\n            \n            variable\n            LandmarksFeatureToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/src/lib/tokens/ModelToken.ts\n            \n            variable\n            FaceExpressionModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/src/lib/tokens/ModelToken.ts\n            \n            variable\n            FaceLandmarkModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/src/lib/tokens/ModelToken.ts\n            \n            variable\n            FaceRecognitionModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/src/lib/tokens/ModelToken.ts\n            \n            variable\n            MtcnnModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/src/lib/tokens/ModelToken.ts\n            \n            variable\n            SsdMobilenetv1Model\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/src/lib/tokens/ModelToken.ts\n            \n            variable\n            TinyFaceDetectorModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-face-api-js/src/lib/tokens/ModelsUrl.ts\n            \n            variable\n            ModelsUrl\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~7.2.0\n        \n            @angular/cdk : ^7.3.7\n        \n            @angular/common : ~7.2.0\n        \n            @angular/compiler : ~7.2.0\n        \n            @angular/core : ~7.2.0\n        \n            @angular/forms : ~7.2.0\n        \n            @angular/platform-browser : ~7.2.0\n        \n            @angular/platform-browser-dynamic : ~7.2.0\n        \n            @angular/router : ~7.2.0\n        \n            core-js : ^2.5.4\n        \n            face-api.js : ^0.19.0\n        \n            rxjs : ~6.3.3\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            addBrowserIgnorePackageSetting   (projects/.../index.ts)\n                        \n                        \n                            addCdkOverlayPrebuiltCssToAppStyles   (projects/.../index.ts)\n                        \n                        \n                            addDependencies   (projects/.../index.ts)\n                        \n                        \n                            addNgxFaceApiJsModule   (projects/.../index.ts)\n                        \n                        \n                            ngAdd   (projects/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-face-api-js/schematics/ng-add/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            addBrowserIgnorePackageSetting\n                        \n                        \n                    \n                \n            \n            \n                \naddBrowserIgnorePackageSetting()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Rule\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addCdkOverlayPrebuiltCssToAppStyles\n                        \n                        \n                    \n                \n            \n            \n                \naddCdkOverlayPrebuiltCssToAppStyles(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Rule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addDependencies\n                        \n                        \n                    \n                \n            \n            \n                \naddDependencies()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Rule\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addNgxFaceApiJsModule\n                        \n                        \n                    \n                \n            \n            \n                \naddNgxFaceApiJsModule(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAdd\n                        \n                        \n                    \n                \n            \n            \n                \nngAdd(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Rule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgxFaceApiJs\n       \nAngular directives for face detection and face recognition in the browser. It is a wrapper for face-api.js, so it is not dependent on the browser implementation.\n\nSee\nBackground\n\nface-api.js\nTensorFlow.js\n\nDemo\n\nDetect Faces by Image -- StackBlitz(Editor)\n\nDocumantation\n\ncompodoc\n\nUsage\nDetect All Faces\nhtml\n\n\nDetect Face With Expressions and Landmarks\n```html\n\n```\n\nInstallation\nBy ng-add Schematics\nbash\n$ ng add ngx-face-api-js\n...\nUPDATE package.json (1457 bytes)\nUPDATE src/styles.css (126 bytes)\nUPDATE src/app/app.module.ts (497 bytes)\nBy Manual\nSee Wiki.\nLicense\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT)\nCopyright (c) 2019 Yuki Yamazaki\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgxFaceApiJsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxFaceApiJsModule\n\n\n\ncluster_NgxFaceApiJsModule_declarations\n\n\n\ncluster_NgxFaceApiJsModule_exports\n\n\n\n\nDetectAllFacesImgDirective\n\nDetectAllFacesImgDirective\n\n\n\nNgxFaceApiJsModule\n\nNgxFaceApiJsModule\n\nNgxFaceApiJsModule -->\n\nDetectAllFacesImgDirective->NgxFaceApiJsModule\n\n\n\n\n\nDetectAllFacesVideoDirective\n\nDetectAllFacesVideoDirective\n\nNgxFaceApiJsModule -->\n\nDetectAllFacesVideoDirective->NgxFaceApiJsModule\n\n\n\n\n\nDetectSingleFaceImgDirective\n\nDetectSingleFaceImgDirective\n\nNgxFaceApiJsModule -->\n\nDetectSingleFaceImgDirective->NgxFaceApiJsModule\n\n\n\n\n\nDetectionResultComponent\n\nDetectionResultComponent\n\nNgxFaceApiJsModule -->\n\nDetectionResultComponent->NgxFaceApiJsModule\n\n\n\n\n\nDetectAllFacesImgDirective \n\nDetectAllFacesImgDirective \n\nDetectAllFacesImgDirective  -->\n\nNgxFaceApiJsModule->DetectAllFacesImgDirective \n\n\n\n\n\nDetectAllFacesVideoDirective \n\nDetectAllFacesVideoDirective \n\nDetectAllFacesVideoDirective  -->\n\nNgxFaceApiJsModule->DetectAllFacesVideoDirective \n\n\n\n\n\nDetectSingleFaceImgDirective \n\nDetectSingleFaceImgDirective \n\nDetectSingleFaceImgDirective  -->\n\nNgxFaceApiJsModule->DetectSingleFaceImgDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    3 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FeatureToken   (projects/.../FeatureToken.ts)\n                        \n                        \n                            ModelToken   (projects/.../ModelToken.ts)\n                        \n                        \n                            TaskTypeToken   (projects/.../TaskTypeToken.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-face-api-js/src/lib/tokens/FeatureToken.ts\n    \n    \n        \n            \n                \n                    \n                    FeatureToken\n                \n            \n            \n                \n                        \"expressions\" | \"landmarks\" | \"descriptors\"\n\n                \n            \n        \n    \n    projects/ngx-face-api-js/src/lib/tokens/ModelToken.ts\n    \n    \n        \n            \n                \n                    \n                    ModelToken\n                \n            \n            \n                \n                        \"SsdMobilenetv1Model\" | \"MtcnnModel\" | \"FaceExpressionModel\" | \"FaceLandmarkModel\" | \"FaceRecognitionModel\" | \"TinyFaceDetectorModel\"\n\n                \n            \n        \n    \n    projects/ngx-face-api-js/src/lib/tokens/TaskTypeToken.ts\n    \n    \n        \n            \n                \n                    \n                    TaskTypeToken\n                \n            \n            \n                \n                        \"all\" | \"single\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DescriptorsFeatureToken   (projects/.../FeatureToken.ts)\n                        \n                        \n                            ExpressionsFeatureToken   (projects/.../FeatureToken.ts)\n                        \n                        \n                            FaceDetectionOptions   (projects/.../FaceDetectionOptions.ts)\n                        \n                        \n                            FaceExpressionModel   (projects/.../ModelToken.ts)\n                        \n                        \n                            FaceLandmarkModel   (projects/.../ModelToken.ts)\n                        \n                        \n                            FaceRecognitionModel   (projects/.../ModelToken.ts)\n                        \n                        \n                            LandmarksFeatureToken   (projects/.../FeatureToken.ts)\n                        \n                        \n                            ModelsUrl   (projects/.../ModelsUrl.ts)\n                        \n                        \n                            MtcnnModel   (projects/.../ModelToken.ts)\n                        \n                        \n                            SsdMobilenetv1Model   (projects/.../ModelToken.ts)\n                        \n                        \n                            TinyFaceDetectorModel   (projects/.../ModelToken.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-face-api-js/src/lib/tokens/FeatureToken.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DescriptorsFeatureToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FeatureToken\n\n                        \n                    \n                    \n                        \n                            Default value : 'descriptors'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ExpressionsFeatureToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FeatureToken\n\n                        \n                    \n                    \n                        \n                            Default value : 'expressions'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LandmarksFeatureToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FeatureToken\n\n                        \n                    \n                    \n                        \n                            Default value : 'landmarks'\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-face-api-js/src/lib/tokens/FaceDetectionOptions.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            FaceDetectionOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('ngx-face-api-js.face-detection-options')\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-face-api-js/src/lib/tokens/ModelToken.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            FaceExpressionModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModelToken\n\n                        \n                    \n                    \n                        \n                            Default value : 'FaceExpressionModel'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FaceLandmarkModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModelToken\n\n                        \n                    \n                    \n                        \n                            Default value : 'FaceLandmarkModel'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FaceRecognitionModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModelToken\n\n                        \n                    \n                    \n                        \n                            Default value : 'FaceRecognitionModel'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MtcnnModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModelToken\n\n                        \n                    \n                    \n                        \n                            Default value : 'MtcnnModel'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SsdMobilenetv1Model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModelToken\n\n                        \n                    \n                    \n                        \n                            Default value : 'SsdMobilenetv1Model'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TinyFaceDetectorModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModelToken\n\n                        \n                    \n                    \n                        \n                            Default value : 'TinyFaceDetectorModel'\n                        \n                    \n\n\n            \n        \n\n    projects/ngx-face-api-js/src/lib/tokens/ModelsUrl.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ModelsUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('ngx-face-api-js.models-url')\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
